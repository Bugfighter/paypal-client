{
  "swagger": "2.0",
  "info": {
    "title": "Disputes",
    "x-serviceName": "disputeapiserv",
    "x-publicDocsPath": "customer-disputes",
    "description": "Occasionally, something goes wrong with a customer's order. To dispute a charge, a customer can create a dispute with PayPal. PayPal merchants, partners, and external developers can use the PayPal Disputes API to manage customer disputes.<blockquote><strong>Note:</strong> In the live environment, merchants cannot create disputes but can only respond to customer-created disputes. However, merchants can create disputes in the sandbox environment. When you create an app, enable Disputes in the App feature options section.</blockquote>A customer can also ask his or her bank or credit card company to dispute and reverse a charge, which is known as a <i>chargeback</i>. For more information, see <a href=\"https://www.paypal.com/us/brc/article/customer-disputes-claims-chargebacks-bank-reversals\">Disputes, claims, chargebacks, and bank reversals</a>.<br/><br/>When a customer disputes a charge, you can use this API to provide evidence that the charge is legitimate. To provide evidence or appeal a dispute, you submit a proof of delivery or proof of refund document or notes, which can include logs.<br/><br/>Normally, an agent at PayPal creates a dispute, updates the dispute status, and settles disputes, but now you can run test cases in the sandbox that complete these operations.<br/><br/><blockquote><strong>Important:</strong> The create, cancel, compute metrics, change reason, and validate eligibility methods are available as a limited-release solution at this time. For more information, reach out to your PayPal account manager.</blockquote><br/>For details, see <a href=\"/docs/integration/direct/customer-disputes/\">Disputes Overview</a> documentation.",
    "version": "1.9"
  },
  "host": "api-m.paypal.com",
  "basePath": "/v1/customer",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json",
    "multipart/related",
    "multipart/form-data",
    "multipart/mixed"
  ],
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flow": "application",
      "scopes": {
        "https://uri.paypal.com/services/disputes/read-seller": "This privilege allows client to read and search a disputes of a merchant but gets only a limited and allowed set of fields back .",
        "https://uri.paypal.com/services/disputes/read-buyer": "This privilege allows client to read and search disputes but returns a limited and allowed set of fields back.",
        "https://uri.paypal.com/services/disputes/read-ebay": "This privilege allows client to read and search a disputes of an user but gets only a limited and allowed set of fields back to ebay.",
        "https://uri.paypal.com/services/disputes/read": "This privilege allows client to read and search a dispute of an user with all fields.",
        "https://uri.paypal.com/services/disputes/webhooks": "This privilege allows webhook platform to read a dispute event",
        "https://uri.paypal.com/services/disputes/create": "This privilege allows client to validate eligibility and create a dispute on his transaction(s).",
        "https://uri.paypal.com/services/disputes/update-seller": "This privilege allows client to update a dispute (Merchant actions).",
        "https://uri.paypal.com/services/disputes/update-buyer": "This privilege allows client to update a dispute (customer actions).",
        "https://uri.paypal.com/services/referred-disputes/readwrite": "This privilege allows client to read and update a referred dispute.",
        "https://uri.paypal.com/services/disputes/read-partner": "This privilege allows client to read and search disputes but returns a limited and allowed set of fields back.",
        "https://uri.paypal.com/services/disputes/update-partner": "This privilege allows client to update a dispute (Partner actions)."
      },
      "tokenUrl": "https://api-m.paypal.com/v1/oauth2/token"
    }
  },
  "paths": {
    "/dispute-events": {
      "post": {
        "summary": "Send a dispute event",
        "description": "Send a dispute event notification. The event format should conform to the CloudEvents specification.Currently being used for cross geo communication of dispute events.",
        "operationId": "dispute.events",
        "responses": {
          "204": {
            "description": "No Content."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "application/cloudevents+json"
        ],
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "description": "The supported `datacontenttype` would be `application/json`. For the event payload details see - [Dispute Event Definition](https://github.paypal.com/ApiSpecifications-R/customer.DisputesSpecification/tree/master/v1/schema/event/dispute_event.json).",
            "schema": {
              "$ref": "#/definitions/event-dispute_cloud_event.json",
              "example": {
                "specversion": "1.0",
                "type": "com.paypal.customer.disputes.created",
                "id": "5CE9035C-3D11-4C98-AD56-96557FB5F41A",
                "time": "2020-01-28T20:40:41.000Z",
                "datacontenttype": "application/json",
                "source": "https://api-m.paypal.com",
                "data": {
                  "dispute_id": "PP-D-648191",
                  "create_time": "2020-01-24T10:41:35.000Z",
                  "disputed_transactions": [
                    {
                      "reference_id": "1F648195Y1757123L"
                    }
                  ],
                  "reason": "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
                  "amount": {
                    "currency_code": "USD",
                    "value": "10"
                  },
                  "notes": "product not received",
                  "dispute_extensions": {
                    "merchant_contacted": true,
                    "merchant_contacted_outcome": "NO_RESPONSE",
                    "merchandize_dispute_properties": {
                      "issue_type": "PRODUCT"
                    }
                  }
                }
              }
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "tags": [
          "dispute-events"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        }
      }
    },
    "/disputes/{id}/acknowledge-return-item": {
      "post": {
        "summary": "Acknowledge returned item",
        "description": "Acknowledges that the customer returned an item for a dispute, by ID. A merchant can make this request for disputes with the `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` reason. Allowed acknowledgement_type values for the request is available in dispute details <a href=\"/docs/api/customer-disputes/v1/#definition-allowed_response_options\">allowed response options</a> object.",
        "operationId": "disputes.acknowledge-return-item",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "application/json",
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to acknowledge the return of disputed item.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "acknowledge-return-item-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-acknowledge_return_item.json",
              "example": {
                "note": "I have received the item back.",
                "acknowledgement_type": "ITEM_RECEIVED"
              }
            }
          },
          {
            "name": "acknowledgement_document",
            "in": "formData",
            "description": "A file with evidence.",
            "type": "file"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/provide-evidence": {
      "post": {
        "summary": "Provide evidence",
        "description": "Provides evidence for a dispute, by ID. A merchant can provide evidence for disputes with the <code>WAITING_FOR_SELLER_RESPONSE</code> status while customers can provide evidence for disputes with the <code>WAITING_FOR_BUYER_RESPONSE</code> status. Evidence can be a proof of delivery or proof of refund document or notes, which can include logs. A proof of delivery document includes a tracking number while a proof of refund document includes a refund ID. For other evidence type, notes and documents can be given. The following rules apply to document file types and sizes:<ul><li>The merchant can upload up to 50 MB of files for a case.</li><li>Individual files must be smaller than 10 MB.</li><li>The supported file formats are JPG, GIF, PNG, and PDF.</li></ul><br/>To make this request, specify the dispute ID in the URI and specify the evidence in the JSON request body. For information about dispute reasons, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
        "operationId": "disputes.provide-evidence",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to submit evidence.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "evidence-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-evidences.json"
            }
          },
          {
            "name": "evidence-file",
            "in": "formData",
            "description": "A file with evidence.",
            "type": "file"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}": {
      "get": {
        "summary": "Show dispute details",
        "description": "Shows details for a dispute, by ID.<blockquote><strong>Note:</strong> The fields that appear in the response depend on whether you access this call through first- or third-party access. For example, if the merchant shows dispute details through third-party access, the customer's email ID does not appear.</blockquote>",
        "operationId": "disputes.get",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows dispute details.",
            "schema": {
              "$ref": "#/definitions/response-dispute.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to show details.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-ebay"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "tags": [
          "disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1500,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      },
      "patch": {
        "summary": "Partially update dispute",
        "description": "Partially updates a dispute, by ID. Seller can update the `communication_detail` value or The partner can add the `partner action` information.",
        "operationId": "disputes.patch",
        "responses": {
          "202": {
            "description": "A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The Clients can choose webhook option as well to receive dispute update notification.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to update the communication detail or add the partner action.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "add",
                  "path": "/partner_actions/-",
                  "value": {
                    "id": "AMX-22345",
                    "name": "ACCEPT_DISPUTE",
                    "create_time": "2018-01-12T10:41:35.000Z",
                    "status": "PENDING"
                  }
                }
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "Indicates how the client expects the server to process this request. To process the request asynchronously, set this header to `respond-async`. If you omit this header, the API processes the request synchronously.",
            "required": false,
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-z-]+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "tags": [
          "disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/cancel": {
      "post": {
        "summary": "Cancel dispute",
        "description": "Cancels a dispute, by ID. <blockquote><strong>Note:</strong> To call the cancel dispute method in your sandbox, ask your PayPal account manager to add the required scopes.</blockquote>",
        "operationId": "disputes.cancel",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute to cancel.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "cancel-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-cancel.json",
              "example": {
                "note": "My dispute was resolved.",
                "cancellation_reason": "ITEM_RECEIVED"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes/validate-eligibility": {
      "post": {
        "summary": "Determine dispute eligibility",
        "description": "Determines whether you can create a case for a transaction, by encrypted transaction ID. For an already created dispute, lists which reasons the customer can use to update a dispute, by ID. <blockquote><strong>Note:</strong> To call the determine dispute eligibility method in your sandbox, ask your PayPal account manager to add the required scopes.</blockquote>",
        "operationId": "disputes.validate-eligibility",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the eligible dispute reasons and ineligible dispute reasons.",
            "schema": {
              "$ref": "#/definitions/response-dispute_eligibility.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "eligibility-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-eligibility_request.json",
              "example": {
                "encrypted_transaction_id": "ANS816683327652AB"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/create"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          }
        ],
        "tags": [
          "validate-eligibility"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes": {
      "get": {
        "summary": "List disputes",
        "description": "Lists disputes with a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_state</code>, <code>dispute_life_cycle_stage</code>, <code>dispute_channel</code>, <code>dispute_amount</code>, <code>create_time</code> and <code>update_time</code> fields.<br/><br/>To filter the disputes in the response, specify one or more optional query parameters. To limit the number of disputes in the response, specify the <code>page_size</code> query parameter.<br/><br/>To list multiple disputes, set these query parameters in the request:<ul><li><code>page_size=2</code></li><li><code>start_time</code> instead of <code>disputed_transaction_id</code></li></ul><br/>If the response contains more than two disputes, it lists two disputes and includes a HATEOAS link to the next page of results.",
        "operationId": "disputes.list",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that lists disputes with a full or summary set of details. Default is a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_amount</code>, <code>create_time</code>, and <code>update_time</code> fields for each dispute.",
            "schema": {
              "$ref": "#/definitions/response-dispute_search.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "account_number",
            "in": "query",
            "description": "Filters the disputes in the response by a PayPal user account with this payer ID.<blockquote><strong>Note:</strong> By default, the list shows the disputes for the logged-in user who calls the API. The user invokes the API through an access token and the API fetches the disputes of the logged-in user based on this token. So, the user does not explicitly send his or her account number to the API. For partner accounts, shows details for all disputes that are related to merchants who are associated with the partner. For a MAM account, it can list disputes for a child account by account number.</blockquote>",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9]+$",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Filters the disputes in the response by a creation date and time. The start time must be within the last 180 days. Value is in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.<br/><br/>You can specify either but not both the `start_time` and `disputed_transaction_id` query parameters.",
            "type": "string",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "default": "Current date and time",
            "x-deprecated": {
              "see": "create_time_after",
              "since_version": "1.4"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "disputed_transaction_id",
            "in": "query",
            "description": "Filters the disputes in the response by a transaction, by ID.<br/><br/>You can specify either but not both the `start_time` and `disputed_transaction_id` query parameter.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of the results, as a non-zero integer. Enables you to search by page number. Use in combination with the `page_size`.",
            "default": 1,
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Limits the number of disputes in the response to this value.",
            "default": 10,
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The token that describes the next page of results to fetch. The <a href=\"/docs/api/customer-disputes/v1/#disputes_list\">list disputes</a> call returns this token in the HATEOAS links in the response.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9+\\/=]+$",
            "default": "The first page of data",
            "x-deprecated": {
              "see": "page",
              "since_version": "1.4"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "total_required",
            "in": "query",
            "description": "Indicates whether to include the total number of items in the response.",
            "default": false,
            "type": "boolean",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filters the fields returned for each dispute in the response to a set of summary fields or all fields. Value is `summary` or `all`. The `all` value is supported for transaction ID queries but not supported for time-range queries. The set of summary fields are `dispute_id`, `reason`, `status`, `dispute_amount`, `create_time`, and `update_time`.",
            "default": "summary",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[a-z]+$",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_state",
            "in": "query",
            "description": "Filters the disputes in the response by a state. Separate multiple values with a comma (`,`). When you specify more than one dispute_state, the response lists disputes that belong to any of the specified dispute_state.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[0-9A-Z_]+$",
            "x-enum": [
              {
                "value": "REQUIRED_ACTION",
                "description": "Filters the disputes in the response to those with the <code>REQUIRED_ACTION</code> dispute state."
              },
              {
                "value": "REQUIRED_OTHER_PARTY_ACTION",
                "description": "Filters the disputes in the response to those with the <code>REQUIRED_OTHER_PARTY_ACTION</code> dispute state."
              },
              {
                "value": "UNDER_PAYPAL_REVIEW",
                "description": "Filters the disputes in the response to those with the <code>UNDER_PAYPAL_REVIEW</code> dispute state."
              },
              {
                "value": "RESOLVED",
                "description": "Filters the disputes in the response to those with the <code>RESOLVED</code> dispute state."
              },
              {
                "value": "OPEN_INQUIRIES",
                "description": "Filters the disputes in the response to those with the <code>OPEN_INQUIRIES</code> dispute state."
              },
              {
                "value": "APPEALABLE",
                "description": "Filters the disputes in the response to those with the <code>APPEALABLE</code> dispute state."
              }
            ],
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "invoice_number",
            "in": "query",
            "description": "Filters the disputes in the response by a invoice, by ID.",
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "pattern": "^[A-Za-z0-9:\\-|]+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filters the disputes in the response by a counter party's primary email.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "pattern": "^.+@[^\"\\-].+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "ConsumerPersonal"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filters the disputes in the response by a counter party's full name. Also supports partial name search.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "pattern": "^[^~!@#$%^*()_{}:|\t\n/]+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "ConsumerPersonal"
            }
          },
          {
            "name": "reasons",
            "in": "query",
            "description": "Filters the disputes in the response by one or more reasons. Separate multiple values with a comma (`,`). When you specify more than one reason, the response lists disputes that belong to any of the specified reasons.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^([0-9A-Z_]+,?)+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Filters the disputes in the response by one or more statuses. Separate multiple values with a comma (`,`). When you specify more than one status, the response lists disputes with any of the specified statuses.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^([0-9A-Z_]+,?)+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_flows",
            "in": "query",
            "description": "Filters the disputes in the response by one or more dispute flows. Separate multiple values with a comma (`,`). When you specify more than one dispute flow, the response lists disputes with any of the specified dispute flows.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^([0-9A-Z_]+,?)+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "create_time_before",
            "in": "query",
            "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
            "type": "string",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "create_time_after",
            "in": "query",
            "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
            "type": "string",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "update_time_before",
            "in": "query",
            "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_before must be within the last 180 days and the default is the current time.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "update_time_after",
            "in": "query",
            "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_after must be within the last 180 days and the default is the maximum time (180 days) supported.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "response_due_date_before",
            "in": "query",
            "description": "The date and time before which the dispute is due for response, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
            "type": "string",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "response_due_date_after",
            "in": "query",
            "description": "The date and time after which the dispute is due for response, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
            "type": "string",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_currency",
            "in": "query",
            "description": "Filters the disputes in the response by one or more currency codes. Separate multiple values with a comma (`,`). When you specify more than one currency code, the response lists disputes with any of the specified currency codes.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[A-Z,]",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_amount_gte",
            "in": "query",
            "description": "Filters the disputes in the response by a dispute amount.",
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "pattern": "^[0-9.]",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_amount_lte",
            "in": "query",
            "description": "Filters the disputes in the response by a dispute amount.",
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "pattern": "^[0-9.]",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "description": "Filters the disputes by counter party's - name or email, transaction_id, invoice_id or dispute_id for the given search text.",
            "type": "string",
            "minLength": 2,
            "maxLength": 2000,
            "pattern": "^[^~!#$%^*(){}|\t\n/]+$",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "ConsumerPersonal"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sorts the disputes in the response by create time, update time, or response due date.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "x-enum": [
              {
                "value": "CREATE_TIME",
                "description": "Sorts the disputes in the response by the creation date and time."
              },
              {
                "value": "UPDATE_TIME",
                "description": "Sorts the disputes in the response by the update date and time."
              },
              {
                "value": "RESPONSE_DUE_DATE",
                "description": "Sorts the disputes in the response by the response due date and time."
              }
            ],
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sorts the disputes in the response in ascending or descending order.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9a-zA-Z_.]+$",
            "x-enum": [
              {
                "value": "asc",
                "description": "Sorts the disputes in the response in ascending order."
              },
              {
                "value": "desc",
                "description": "Sorts the disputes in the response in descending order."
              }
            ],
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_channel",
            "in": "query",
            "description": "Filters the disputes in the response by a channel. Separate multiple values with a comma (`,`). When you specify more than one dispute_channel, the response lists disputes that belong to any of the specified dispute_channel.",
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[0-9a-zA-Z_.]+$",
              "x-enum": [
                {
                  "value": "INTERNAL",
                  "description": "Filters the disputes in the response to those with the <code>INTERNAL</code> dispute channel."
                },
                {
                  "value": "EXTERNAL",
                  "description": "Filters the disputes in the response to those with the <code>EXTERNAL</code> dispute channel."
                }
              ]
            },
            "collectionFormat": "csv",
            "required": false,
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_life_cycle_stage",
            "in": "query",
            "description": "Filters the disputes in the response by a life_cycle_stage. Separate multiple values with a comma (`,`). When you specify more than one dispute_life_cycle_stage, the response lists disputes that belong to any of the specified dispute_life_cycle_stage.",
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[0-9a-zA-Z_.]+$",
              "x-enum": [
                {
                  "value": "INQUIRY",
                  "description": "Filters the disputes in the response to those with the <code>INQUIRY</code> dispute life_cycle_stage."
                },
                {
                  "value": "CHARGEBACK",
                  "description": "Filters the disputes in the response to those with the <code>CHARGEBACK</code> dispute life_cycle_stage."
                },
                {
                  "value": "PRE_ARBITRATION",
                  "description": "Filters the disputes in the response to those with the <code>PRE_ARBITRATION</code> dispute life_cycle_stage."
                },
                {
                  "value": "ARBITRATION",
                  "description": "Filters the disputes in the response to those with the <code>ARBITRATION</code> dispute life_cycle_stage."
                }
              ]
            },
            "collectionFormat": "csv",
            "required": false,
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-ebay"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "tags": [
          "disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      },
      "post": {
        "summary": "Create dispute",
        "description": "Sandbox only. Creates a dispute. <blockquote><strong>Note:</strong> To call the create dispute method, ask your PayPal account manager to add the required scopes.</blockquote>",
        "operationId": "disputes.create",
        "responses": {
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that includes a link to dispute details.",
            "schema": {
              "$ref": "#/definitions/response-dispute_create.json"
            }
          },
          "202": {
            "description": "A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The dispute creation is guaranteed by default for valid requests in case of system failures like unavailability or timeouts and returns HTTP `202 Accepted` status no matter what the client defined in `Prefer` header. The Clients can choose webhook option as well to receive dispute creation notification.",
            "schema": {
              "$ref": "#/definitions/response-dispute_create.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "dispute",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/response-dispute.json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "Indicates how the client expects the server to process this request. To process the request asynchronously, set this header to `respond-async`. If you omit this header, the API processes the request synchronously.",
            "required": false,
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-z-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/create"
            ]
          }
        ],
        "tags": [
          "disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes/{id}/change-reason": {
      "post": {
        "summary": "Change reason for dispute",
        "description": "Changes the reason for a dispute, by ID.",
        "operationId": "disputes.change-reason",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link that enables you to access the dispute.",
            "schema": {
              "$ref": "#/definitions/response-disputes_change_reason.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to change the reason.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "change-reason",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-change_reason.json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes/{id}/provide-supporting-info": {
      "post": {
        "summary": "Provide supporting information for dispute",
        "description": "Provides supporting information for a dispute, by ID. A merchant or buyer can make this request for disputes if they find the `provide-supporting-info` link in the HATEOAS links in the list disputes response. The party can provide the supporting information to PayPal to defend themselves only when the `dispute_life_cycle_stage` is `CHARGEBACK`, `PRE_ARBITRATION`, or `ARBITRATION`. They can provide a note that describes their part with details or upload any supporting documents to support their side. The following rules apply to document file types and sizes:<ul><li>The party can upload up to 50 MB of files for a case.</li><li>Individual files must be smaller than 10 MB.</li><li>The supported file formats are JPG, GIF, PNG, and PDF.</li></ul><br/>To make this request, specify the dispute ID in the URI and specify the notes in the JSON request body. This method differs from the provide evidence method which supports only multipart request, where PayPal asks the concerned party for evidence.",
        "operationId": "disputes.provide-supporting-info",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The request failed due to the dispute is not available. The request returns the HTTP `404 Not Found` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "application/json",
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to provide the supporting information.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "provide-supporting-info-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-provide_supporting_info.json",
              "example": {
                "notes": "Sample notes"
              }
            }
          },
          {
            "name": "supporting document",
            "in": "formData",
            "description": "A file with evidence.",
            "type": "file"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller",
              "https://uri.paypal.com/services/disputes/update-buyer",
              "https://uri.paypal.com/services/disputes/update-partner"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/referred-disputes/{id}/process-adjudication-event": {
      "post": {
        "summary": "Notify PayPal about referred dispute adjudication updates",
        "description": "Notifies PayPal about adjudication updates for a referred dispute, by ID.",
        "operationId": "referred-disputes.process-adjudication-event",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/referred-referred_subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute to settle.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "adjudication_info",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/referred-referred_adjudication_info.json",
              "example": {
                "dispute_amount": {
                  "currency_code": "EUR",
                  "value": "100"
                },
                "items": [
                  {
                    "id": "183058047704"
                  }
                ],
                "outcome": {
                  "faulty_party": "BUYER",
                  "adjudication_reason": "NO_FAULT_GIFT",
                  "resolution_date": "2018-03-13T23:47:57.000-07:00"
                },
                "evidences": [
                  {
                    "evidence_info": {
                      "tracking_info": [
                        {
                          "tracking_number": "11007FC341F",
                          "carrier_name": "UPS",
                          "tracking_status": "NO_TRACKING"
                        }
                      ]
                    }
                  }
                ],
                "closure_reason": "Claim Closed by Buyer",
                "messages": [
                  {
                    "posted_by": "BUYER",
                    "posted_time": "2018-03-12T23:40:57.000-07:00",
                    "content": " Hi, the items have arrived but, I am not happy with them"
                  },
                  {
                    "posted_by": "SELLER",
                    "posted_time": "2018-03-12T23:40:57.000-07:00",
                    "content": " Ok. Not problem. If you think my item's is nothing I am happy to refund. All my customer is always happy. Just request refund. And send me items."
                  }
                ]
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/referred-disputes/readwrite"
            ]
          }
        ],
        "tags": [
          "referred-disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/referred-disputes": {
      "post": {
        "summary": "Create referred dispute",
        "description": "Creates a dispute for a partner- or marketplace-created referred case.",
        "operationId": "referred-disputes.create",
        "responses": {
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that includes a link to dispute details.",
            "schema": {
              "$ref": "#/definitions/referred-referred_dispute_create_response.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "dispute-create-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/referred-referred_dispute_create_request.json",
              "example": {
                "dispute_flow": "THIRD_PARTY_DISPUTE",
                "reference_dispute": {
                  "id": "41095231",
                  "create_time": "2018-03-16T05:28:37.000-07:00"
                },
                "transaction": {
                  "id": "2R543929RN185702W",
                  "items": [
                    {
                      "id": "100002",
                      "category": "COMPUTERS",
                      "reason": "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
                      "note": "Lenova K3 Note"
                    }
                  ]
                },
                "extensions": {
                  "transaction_hold_info": {
                    "hold_required": true
                  },
                  "transaction_risk_info": {
                    "high_risk": true
                  }
                },
                "reason": "MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED",
                "evidences": [
                  {
                    "evidence_info": {
                      "tracking_info": [
                        {
                          "carrier_name": "UPS",
                          "tracking_number": "54458769",
                          "tracking_status": "3",
                          "posted_time": "2018-03-14T05:28:37.000-07:00"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/referred-disputes/readwrite"
            ]
          }
        ],
        "tags": [
          "referred-disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        }
      },
      "get": {
        "summary": "List referred disputes",
        "description": "Lists referred disputes with a summary of dispute details. Default is a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_amount</code>, <code>create_time</code>, and <code>update_time</code> fields.<br/><br/>To filter the disputes in the response, specify one or more optional query parameters. To limit the number of disputes in the response, specify the <code>page_size</code> query parameter.<br/><br/>To list multiple disputes, set these query parameters in the request:<ul><li><code>page_size=2</code></li><li><code>create_time_after</code><code>create_time_before</code></li></ul><br/>If the response contains more than two disputes, it lists two disputes and includes a HATEOAS link to the next page of results.",
        "operationId": "referred-disputes.list",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that lists disputes with a full or summary set of details. Default is a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_amount</code>, <code>create_time</code>, and <code>update_time</code> fields for each dispute.",
            "schema": {
              "$ref": "#/definitions/referred-referred_disputes.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "create_time_before",
            "in": "query",
            "description": "The date and time when the dispute was created before, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "type": "string",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "create_time_after",
            "in": "query",
            "description": "The date and time when the dispute was created after, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "type": "string",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Limits the number of disputes in the response to this value.",
            "default": 10,
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "The token that describes the next page of results to fetch. The <a href=\"/docs/api/customer-disputes/v1/#disputes_list\">list disputes</a> call returns this token in the HATEOAS links in the response. If you omit this parameter, the API returns the first page of data.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9+\\/=]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filters the disputes in the response by a state.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "x-enum": [
              {
                "value": "CLOSED",
                "description": "Filters the disputes in the response to those with the <code>CLOSED</code> dispute state."
              },
              {
                "value": "OPEN",
                "description": "Filters the disputes in the response to those with the <code>CLOSED</code> dispute state."
              }
            ],
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "dispute_flows",
            "in": "query",
            "description": "Filters the disputes in the response by one or more dispute flows. Separate multiple values with a comma (`,`). When you specify more than one dispute flow, the response lists disputes with any of the specified dispute flows.",
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[0-9a-zA-Z_.]+$",
              "x-enum": [
                {
                  "value": "THIRD_PARTY_CLAIM",
                  "description": "A third-party claim."
                },
                {
                  "value": "THIRD_PARTY_DISPUTE",
                  "description": "A third-party dispute."
                }
              ]
            },
            "collectionFormat": "csv",
            "required": false,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/referred-disputes/readwrite"
            ]
          }
        ],
        "tags": [
          "referred-disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes/{id}/make-offer": {
      "post": {
        "summary": "Make offer to resolve dispute",
        "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\"/docs/api/customer-disputes/v1/#definition-allowed_response_options\">allowed response options</a> object.",
        "operationId": "disputes.make-offer",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to make an offer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "make-offer-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-make_offer.json",
              "example": {
                "note": "Offer refund with replacement item.",
                "offer_amount": {
                  "currency_code": "USD",
                  "value": "23"
                },
                "offer_type": "REFUND_WITH_REPLACEMENT"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/escalate": {
      "post": {
        "summary": "Escalate dispute to claim",
        "description": "Escalates the dispute, by ID, to a PayPal claim. To make this call, the stage in the dispute lifecycle must be `INQUIRY`.",
        "operationId": "disputes.escalate",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute to escalate to a claim.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "escalate-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-escalate.json",
              "example": {
                "note": "Escalating to PayPal claim for resolution."
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/accept-offer": {
      "post": {
        "summary": "Accept offer to resolve dispute",
        "description": "The customer accepts the offer from merchant to resolve a dispute, by ID. PayPal automatically refunds the amount proposed by merchant to the customer.",
        "operationId": "disputes.accept-offer",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to accept an offer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "accept-offer-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-accept_offer.json",
              "example": {
                "note": "I am ok with the refund offered."
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/accept-claim": {
      "post": {
        "summary": "Accept claim",
        "description": "Accepts liability for a claim, by ID. When you accept liability for a claim, the dispute closes in the customer’s favor and PayPal automatically refunds money to the customer from the merchant's account. Allowed accept_claim_type values for the request is available in dispute details <a href=\"/docs/api/customer-disputes/v1/#definition-allowed_response_options\">allowed response options</a> object.",
        "operationId": "disputes.accept-claim",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to accept a claim.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "accept-claim-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-accept_claim.json",
              "example": {
                "note": "Full refund to the customer."
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/require-evidence": {
      "post": {
        "summary": "Update dispute status",
        "description": "<blockquote><strong>Important:</strong> This method is for sandbox use only.</blockquote> Updates the status of a dispute, by ID, from <code>UNDER_REVIEW</code> to either:<ul><li><code>WAITING_FOR_BUYER_RESPONSE</code></li><li><code>WAITING_FOR_SELLER_RESPONSE</code></li></ul>This status change enables either the customer or merchant to submit evidence for the dispute. To make this call, the dispute <code>status</code> must be <code>UNDER_REVIEW</code>. Specify an <code>action</code> value in the JSON request body to indicate whether the status change enables the customer or merchant to submit evidence:<table><thead><tr align=\"left\"><th>If <code>action</code> is</th><th>The <code>status</code> updates to</th></tr></thead><tbody><tr><td><code>BUYER_EVIDENCE</code></td><td> <code>WAITING_FOR_BUYER_RESPONSE</code></td></tr><tr><td><code>SELLER_EVIDENCE</code></td><td> <code>WAITING_FOR_SELLER_RESPONSE</code></td></tr></tbody></table>",
        "operationId": "disputes.require-evidence",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute that requires evidence.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "require_evidence_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-require_evidence.json",
              "example": {
                "action": "BUYER_EVIDENCE"
              }
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/compute-metrics": {
      "post": {
        "summary": "Compute metrics for disputes",
        "description": "Computes metrics for all disputes.",
        "operationId": "disputes.compute-metrics",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the computed metrics. Each metric includes a count of how many disputes match that metric.",
            "schema": {
              "$ref": "#/definitions/response-metrics.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "metrics-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-metrics_request.json",
              "example": {
                "dimension": "STATUS",
                "measure": "COUNT"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          }
        ],
        "tags": [
          "compute-metrics"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/referred-disputes/{id}/process-refund-event": {
      "post": {
        "summary": "Notify PayPal about refund for referred dispute",
        "description": "Notifies PayPal about a refund for a referred dispute, by ID.",
        "operationId": "referred-disputes.process-refund-event",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the referred dispute.",
            "schema": {
              "$ref": "#/definitions/referred-referred_subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute to settle.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "refund_info",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/referred-referred_refund_info.json",
              "example": {
                "recipient": "BUYER",
                "amount": {
                  "currency_code": "USD",
                  "value": "45.0"
                },
                "create_time": "2017-01-24T10:41:35.000Z",
                "transaction_id": "ANS816683327652AB",
                "payout_type": "REVERSAL",
                "seller_protection_eligible": true,
                "transaction_source": "PAYPAL"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/referred-disputes/readwrite"
            ]
          }
        ],
        "tags": [
          "referred-disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/referred-disputes/{id}": {
      "get": {
        "summary": "Show referred dispute details",
        "description": "Shows details for a referred dispute, by ID.",
        "operationId": "referred-disputes.get",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows dispute details.",
            "schema": {
              "$ref": "#/definitions/referred-referred_dispute.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to show details.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/referred-disputes/readwrite"
            ]
          }
        ],
        "tags": [
          "referred-disputes"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes/{id}/adjudicate": {
      "post": {
        "summary": "Settle dispute",
        "description": "<blockquote><strong>Important:</strong> This method is for sandbox use only.</blockquote> Settles a dispute in either the customer's or merchant's favor. Merchants can make this call in the sandbox to complete end-to-end dispute resolution testing, which mimics the dispute resolution that PayPal agents normally complete. To make this call, the dispute <code>status</code> must be <code>UNDER_REVIEW</code>.",
        "operationId": "disputes.adjudicate",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute to settle.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "adjudicate-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-adjudicate.json",
              "example": {
                "adjudication_outcome": "BUYER_FAVOR"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/send-message": {
      "post": {
        "summary": "Send message about dispute to other party",
        "description": "Sends a message about a dispute, by ID, to the other party in the dispute. Merchants and customers can only send messages if the `dispute_life_cycle_stage` value is `INQUIRY`.",
        "operationId": "disputes.send-message",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "application/json",
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to send a message.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "send_message",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-send_message.json",
              "example": {
                "message": "Shipment is in progress."
              }
            }
          },
          {
            "name": "message_document",
            "in": "formData",
            "description": "A file that contains any additional info about the message posted.",
            "type": "file"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/search-suggestions": {
      "get": {
        "summary": "Suggestion values for search text.",
        "description": "Provides the possible auto-complete or DidYouMean values for a given search text.",
        "operationId": "disputes.search-suggestions",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the possible suggested values for search text.",
            "schema": {
              "$ref": "#/definitions/response-suggestion_response.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "search_text",
            "in": "query",
            "description": "The search text for which auto complete or did you mean is requested. Supported searchable fields include counter party name/email, transaction id, invoice id and dispute id.",
            "type": "string",
            "required": true,
            "minLength": 2,
            "maxLength": 255,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "ConsumerPersonal"
            }
          },
          {
            "name": "search_field",
            "in": "query",
            "description": "The field on which the suggestions will be retrieved. Supported search fields include counter party name/email, disputed transaction id, invoice number and dispute id. If the search_field is not specified, suggestions will be retrieved over all the supported fields.",
            "type": "string",
            "required": true,
            "minLength": 2,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "x-enum": [
              {
                "value": "NAME",
                "description": "Retrieves the suggestions from the <code>NAME</code> field."
              },
              {
                "value": "EMAIL",
                "description": "Retrieves the suggestions from the <code>EMAIL</code> field."
              },
              {
                "value": "DISPUTE_ID",
                "description": "Retrieves the suggestions from the <code>DISPUTE_ID</code> field."
              },
              {
                "value": "DISPUTED_TRANSACTION_ID",
                "description": "Retrieves the suggestions from the <code>DISPUTED_TRANSACTION_ID</code> field."
              },
              {
                "value": "INVOICE_NUMBER",
                "description": "Retrieves the suggestions from the <code>INVOICE_NUMBER</code> field."
              },
              {
                "value": "ALL",
                "description": "Retrieves the suggestions from the NAME, EMAIL, DISPUTE_ID, DISPUTED_TRANSACTION_ID and INVOICE_NUMBER fields."
              }
            ],
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "tags": [
          "search-suggestions"
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        }
      }
    },
    "/validate-referred-dispute-eligibility": {
      "post": {
        "summary": "Determine eligibility for referred dispute creation",
        "description": "Determines whether you can create a referred case for a transaction, by encrypted transaction ID.",
        "operationId": "referred-disputes.validate-eligibility",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the eligible and ineligible dispute reasons.",
            "schema": {
              "$ref": "#/definitions/referred-referred_eligibility_response.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "eligibility-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/referred-referred_eligibility_request.json",
              "example": {
                "transaction_id": "5B527326L4712360R",
                "disputed_items": [
                  {
                    "id": "100002",
                    "category": "COMPUTERS"
                  }
                ]
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/referred-disputes/readwrite"
            ]
          }
        ],
        "tags": [
          "validate-referred-dispute-eligibility"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    },
    "/disputes/{id}/appeal": {
      "post": {
        "summary": "Appeal dispute",
        "description": "Appeals a dispute, by ID. To appeal a dispute, use the <code>appeal</code> link in the <a href=\"/docs/api/reference/api-responses/#hateoas-links/\">HATEOAS links</a> from the show dispute details response. If this link does not appear, you cannot appeal the dispute. Submit new evidence as a document or notes in the JSON request body. The following rules apply to document file types and sizes:<ul><li>The merchant can upload up to 50 MB of files for a case.</li><li>Individual files must be smaller than 10 MB.</li><li>The supported file formats are JPG, GIF, PNG, and PDF.</li></ul><br/>To make this request, specify the dispute ID in the URI and specify the evidence in the JSON request body. For information about dispute reasons, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
        "operationId": "disputes.appeal",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "consumes": [
          "multipart/related",
          "multipart/form-data",
          "multipart/mixed"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The PayPal dispute ID.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "appeal-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-evidences.json"
            }
          },
          {
            "name": "evidence-file",
            "in": "formData",
            "description": "A file with evidence.",
            "type": "file"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 1000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/deny-offer": {
      "post": {
        "summary": "Deny offer to resolve dispute",
        "description": "Denies an offer that the merchant proposes for a dispute, by ID.",
        "operationId": "disputes.deny-offer",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to deny an offer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "deny-offer-request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/request-deny_offer.json",
              "example": {
                "note": "refund offer is very low."
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class2",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 10000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        }
      }
    },
    "/disputes/{id}/partner-actions/{action_id}": {
      "get": {
        "summary": "Show dispute action details",
        "description": "Shows action details for a dispute, by action ID.",
        "operationId": "disputes.partner-actions-get",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows action details.",
            "schema": {
              "$ref": "#/definitions/response-partner_action.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to show action details.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "The ID of the action for which to show details.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "tags": [
          "partner-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 3000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      },
      "patch": {
        "summary": "Partially update dispute action",
        "description": "Partially updates a dispute action, by ID. You can update the `status` and `amount` value.",
        "operationId": "disputes.partner-actions-patch",
        "responses": {
          "202": {
            "description": "A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The Clients can choose webhook option as well to receive dispute update notification.",
            "schema": {
              "$ref": "#/definitions/response-subsequent_action.json"
            }
          },
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the dispute for which to update action details.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "action_id",
            "in": "path",
            "description": "The ID of the action for which to show details.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "replace",
                  "path": "/status",
                  "value": "COMPLETED"
                },
                {
                  "op": "replace",
                  "path": "/amount",
                  "value": {
                    "currency_code": "USD",
                    "value": "50.00"
                  }
                }
              ]
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "\\w+\\/[-+.\\w]+",
            "description": "Content type of the request payload.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "Indicates how the client expects the server to process this request. To process the request asynchronously, set this header to `respond-async`. If you omit this header, the API processes the request synchronously.",
            "required": false,
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-z-]+$",
            "x-visibility": {
              "extent": "LIMITED_RELEASE"
            },
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-partner"
            ]
          }
        ],
        "tags": [
          "partner-actions"
        ],
        "x-slo": {
          "response_time_95th_percentile": 5000,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "LIMITED_RELEASE"
        }
      }
    }
  },
  "tags": [
    {
      "name": "disputes",
      "description": "Use the `/disputes` resource to list disputes, create disputes, show dispute details, and partially a dispute. Normally, an agent at PayPal creates disputes but now you can run test cases in the sandbox that create disputes."
    },
    {
      "name": "disputes-actions",
      "description": "Use the `/disputes` resource with a dispute ID and an action to:<ul><li>Accept a claim.</li><li>Accept an offer to resolve a dispute.</li><li>Acknowledge the return of an item related to a dispute.</li><li>Settle a dispute.</li><li>Appeal a dispute.</li><li>Cancel a dispute.</li><li>Change the reason for a dispute.</li><li>Deny an offer to resolve dispute.</li><li>Escalate a dispute to a claim.</li><li>Make an offer to resolve a dispute.</li><li>Make an offer to resolve a dispute.</li><li>Provide evidence for a dispute.</li><li>Provide supporting information for dispute.</li><li>In the sandbox, update the dispute status.</li><li>Send a message about a dispute to the other party in the dispute.</li><ul>"
    },
    {
      "name": "referred-disputes",
      "description": "Use the `/customer/referred-disputes` resource to create a dispute for a referred case that was created by a partner or marketplace, show details for a referred dispute, by ID, notify referred refunds completed to PayPal, notify PayPal about referred dispute adjudication updates, and determine the dispute eligibility for referred disputes."
    },
    {
      "name": "validate-eligibility",
      "description": "Use the `/validate-eligibility/` resource to determine whether you can create a case for a transaction."
    },
    {
      "name": "compute-metrics",
      "description": "Use the `/compute-metrics` resource to provide metrics for all disputes."
    },
    {
      "name": "validate-referred-dispute-eligibility",
      "description": "Use the `/validate-referred-dispute-eligibility` resource to determine whether you can create a referred case for a transaction, by encrypted transaction ID."
    },
    {
      "name": "referred-disputes",
      "description": "Use the `/referred-disputes` resource to create a dispute for a referred case that was created by a partner or marketplace, show details for a referred dispute, by ID, notify referred refunds completed to PayPal, notify PayPal about referred dispute adjudication updates, and determine the dispute eligibility for referred disputes."
    },
    {
      "name": "referred-disputes-actions",
      "description": "Use the `/referred-disputes` resource with a dispute ID and an action to notify PayPal about adjudication updates for a referred dispute and notify PayPal about a refund for a referred dispute."
    },
    {
      "name": "partner-actions",
      "description": "Use the `/disputes/{id}/partner-actions/` resource to show dispute action details and partially update a dispute action."
    },
    {
      "name": "search-suggestions",
      "description": "Use the `/search-suggestions` resource to show search suggestions."
    },
    {
      "name": "dispute-events",
      "description": "Use the `/dispute-events` resource to send dispute events."
    }
  ],
  "externalDocs": {
    "url": "/docs/integration/direct/customer-disputes/"
  },
  "definitions": {
    "response-dispute_search.json": {
      "type": "object",
      "title": "Dispute Search Response",
      "description": "An array of disputes. Includes links that enable you to navigate through the response.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "items": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of disputes that match the filter criteria. Sorted in latest to earliest creation time order.",
          "items": {
            "$ref": "#/definitions/response-dispute_info.json",
            "x-publicDocsSchemaName": "dispute_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_items": {
          "type": "integer",
          "minimum": 0,
          "maximum": 5000,
          "readOnly": true,
          "description": "The total number of items. If the request specifies `total_required=true`, appears in the response.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_pages": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100,
          "readOnly": true,
          "description": "The total number of pages. If the request specifies `total_required=true`, appears in the response.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "rel": "first",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&start_time={start_time}"
        },
        {
          "rel": "self",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&next_page_token={next_page_token}&start_time={start_time}"
        },
        {
          "rel": "next",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&next_page_token={next_page_token}&start_time={start_time}"
        }
      ],
      "x-publicDocsSchemaName": "dispute_search"
    },
    "response-dispute_info.json": {
      "type": "object",
      "title": "Dispute Summary Information",
      "description": "The dispute summary information.",
      "properties": {
        "dispute_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9-]+$",
          "readOnly": true,
          "description": "The ID of the dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "disputed_transactions": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of transactions for which disputes were created.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "$ref": "#/definitions/response-transaction_info.json",
            "x-publicDocsSchemaName": "transaction_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "disputed_account_activities": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of merchant account activities.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "x-publicDocsSchemaName": "account_activity",
            "$ref": "#/definitions/response-account_activity.json",
            "x-visibility": {
              "extent": "INTERNAL"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/response-dispute_reason.json",
          "x-publicDocsSchemaName": "dispute_reason"
        },
        "status": {
          "readOnly": true,
          "$ref": "#/definitions/response-status.json",
          "x-publicDocsSchemaName": "status"
        },
        "dispute_state": {
          "readOnly": true,
          "$ref": "#/definitions/response-dispute_state.json",
          "x-publicDocsSchemaName": "dispute_state"
        },
        "dispute_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "external_reason_code": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[A-Za-z0-9._-]+$",
          "readOnly": true,
          "description": "The code that identifies the reason for the credit card chargeback. Each card issuer follows their own standards for defining reason type, code, and its format. For more details about the external reason code, see the card issue site. Available for only unbranded transactions.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "dispute_outcome": {
          "readOnly": true,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-publicDocsSchemaName": "dispute_outcome",
          "$ref": "#/definitions/response-dispute_outcome.json"
        },
        "dispute_life_cycle_stage": {
          "readOnly": true,
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json",
          "x-publicDocsSchemaName": "dispute_lifecycle_stage"
        },
        "dispute_channel": {
          "readOnly": true,
          "$ref": "#/definitions/response-dispute_channel.json",
          "x-publicDocsSchemaName": "dispute_channel"
        },
        "messages": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of customer- or merchant-posted messages for the dispute.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "$ref": "#/definitions/response-message.json",
            "x-publicDocsSchemaName": "message"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "extensions": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/response-extensions.json"
        },
        "evidences": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of evidence documents.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "$ref": "#/definitions/response-evidence.json",
            "x-publicDocsSchemaName": "response_evidence"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "buyer_response_due_date": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time by when the customer must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the customer does not respond by this date and time, the dispute is closed in the merchant's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "seller_response_due_date": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time by when the merchant must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the merchant does not respond by this date and time, the dispute is closed in the customer's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "history": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of history objects.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true,
          "x-publicDocsSchemaName": "history_list",
          "items": {
            "$ref": "#/definitions/response-history.json",
            "x-publicDocsSchemaName": "history"
          }
        },
        "dispute_flow": {
          "readOnly": true,
          "x-publicDocsSchemaName": "dispute_flow",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/response-dispute_flow.json"
        },
        "offer": {
          "readOnly": true,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-publicDocsSchemaName": "offer",
          "$ref": "#/definitions/response-offer.json"
        },
        "refund_details": {
          "readOnly": true,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-publicDocsSchemaName": "response_refund_details",
          "$ref": "#/definitions/response-refund_details.json"
        },
        "communication_details": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-publicDocsSchemaName": "communication_details",
          "$ref": "#/definitions/response-communication_details.json"
        },
        "partner_actions": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of all the actions that are associated to this dispute.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "$ref": "#/definitions/response-partner_action.json",
            "x-publicDocsSchemaName": "partner_action"
          }
        },
        "supporting_info": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "readOnly": true,
          "description": "An array of all the supporting information that are associated to this dispute.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "$ref": "#/definitions/response-supporting_info.json",
            "x-publicDocsSchemaName": "supporting_info"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/provide-evidence",
          "rel": "provide_evidence",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/appeal",
          "rel": "appeal",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/cancel",
          "rel": "cancel",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/cancel",
          "rel": "cancel_unauthorized_transaction",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/accept-claim",
          "rel": "accept_claim",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/make-offer",
          "rel": "make-offer",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/send-message",
          "rel": "send-message",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/escalate",
          "rel": "escalate",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/provide-supporting-info",
          "rel": "provide_supporting_info",
          "method": "POST"
        }
      ],
      "x-publicDocsSchemaName": "dispute_info"
    },
    "common_components-v3-schema-json-openapi-2.0-date_time.json": {
      "type": "string",
      "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
      "format": "ppaas_date_time_v3",
      "minLength": 20,
      "maxLength": 64,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
      "properties": {}
    },
    "response-transaction_info.json": {
      "type": "object",
      "title": "Transaction Information",
      "description": "The information about the disputed transaction.",
      "properties": {
        "buyer_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The ID, as seen by the customer, for this transaction.",
          "pattern": "^[A-Za-z0-9]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "seller_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The ID, as seen by the merchant, for this transaction.",
          "pattern": "^[A-Za-z0-9]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reference_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The ID, as seen by the partner, for this transaction.",
          "pattern": "^[A-Za-z0-9-]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the transaction was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "transaction_status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The transaction status.",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The transaction processing completed."
            },
            {
              "value": "UNCLAIMED",
              "description": "The items in the transaction are unclaimed. If they are not claimed within 30 days, the funds are returned to the sender."
            },
            {
              "value": "DENIED",
              "description": "The transaction was denied."
            },
            {
              "value": "FAILED",
              "description": "The transaction failed."
            },
            {
              "value": "HELD",
              "description": "The transaction is on hold."
            },
            {
              "value": "PENDING",
              "description": "The transaction is waiting to be processed."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "The payment for the transaction was partially refunded."
            },
            {
              "value": "REFUNDED",
              "description": "The payment for the transaction was successfully refunded."
            },
            {
              "value": "REVERSED",
              "description": "The payment for the transaction was reversed due to a chargeback or other reversal type."
            },
            {
              "value": "CANCELLED",
              "description": "The transaction is cancelled."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "gross_amount": {
          "description": "The gross amount of the transaction.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "invoice_number": {
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "description": "The ID of the invoice for the payment.",
          "pattern": "^[A-Za-z0-9:\\-|]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "custom": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "A free-text field that is entered by the merchant during checkout.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        },
        "buyer": {
          "$ref": "#/definitions/response-buyer.json",
          "x-publicDocsSchemaName": "buyer"
        },
        "seller": {
          "$ref": "#/definitions/response-seller.json",
          "x-publicDocsSchemaName": "seller"
        },
        "facilitator": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/response-facilitator.json"
        },
        "items": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "readOnly": true,
          "description": "An array of items that were purchased as part of the transaction.",
          "items": {
            "$ref": "#/definitions/response-item_info.json",
            "x-publicDocsSchemaName": "item_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "seller_protection_eligible": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates whether the merchant is eligible for protection on the disputed transaction.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "seller_protection_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "Indicates the type of protection the merchant is eligible on the disputed transaction.",
          "x-enum": [
            {
              "value": "EXPANDED_SELLER_PROTECTION",
              "description": "Merchants are covered under seller protection provided they have responded with valid evidence."
            },
            {
              "value": "EFFORTLESS_SELLER_PROTECTION",
              "description": "Merchants are eligible for seller protection irrespective of them responding with the proof of shipment/delivery."
            },
            {
              "value": "DOUBLE_JEOPARDY_PROTECTION",
              "description": "Merchants are protected in the subsequent case if an internal case is communicated as resolved in merchant favor."
            },
            {
              "value": "EFFORTLESS_CHARGEBACK_PROTECTION",
              "description": "Merchants who are covered need not respond and paypal takes the loss for all unbranded external unuath chargebacks."
            },
            {
              "value": "CHARGEBACK_PROTECTION",
              "description": "Merchants who are covered need to provide proof of fulfillment and paypal takes the loss(unless paypal contests the case and wins) for all unbranded external unuath chargebacks."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "regulation_info": {
          "$ref": "#/definitions/response-regulation_info.json",
          "x-publicDocsSchemaName": "regulation_info",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "provisional_credit_status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The provisional credit status.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-enum": [
            {
              "value": "NOT_APPLICABLE",
              "description": "Not applicable."
            },
            {
              "value": "APPLIED",
              "description": "The provisional credit was applied."
            },
            {
              "value": "NOT_APPLIED",
              "description": "The provisional credit was not applied."
            },
            {
              "value": "REVERSED",
              "description": "The provisional credit was refunded."
            },
            {
              "value": "PENDING_DEBIT",
              "description": "The provisional credit in pending debit."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/payments/activities/{transaction_id}",
          "rel": "transaction",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/payments/activities/{crypto_sale_transaction_id}",
          "rel": "crypto_sale_transaction",
          "method": "GET",
          "title": "The sale transaction id of the crypto asset which was used to fulfil the transaction."
        },
        {
          "href": "https://api-m.paypal.com/v1/payments/activities/{savings_transaction}",
          "rel": "savings_transaction",
          "method": "GET",
          "title": "The transaction id of Paypal Balance to Savings account"
        }
      ],
      "x-publicDocsSchemaName": "transaction_info"
    },
    "common_components-v3-schema-json-openapi-2.0-money.json": {
      "type": "object",
      "title": "Money",
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "properties": {
        "currency_code": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-currency_code.json"
        },
        "value": {
          "type": "string",
          "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/api/reference/currency-codes/).",
          "maxLength": 32,
          "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
        }
      },
      "required": [
        "currency_code",
        "value"
      ]
    },
    "common_components-v3-schema-json-openapi-2.0-currency_code.json": {
      "description": "The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.",
      "type": "string",
      "format": "ppaas_common_currency_code_v2",
      "minLength": 3,
      "maxLength": 3,
      "properties": {}
    },
    "response-buyer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The details for the customer who funds the payment. For example, the customer's first name, last name, and email address.",
      "properties": {
        "email": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-email_address.json",
          "description": "The email address for the customer's PayPal account.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "payer_id": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-payer_id.json",
          "description": "The Payer ID of the Buyer.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[^~!@#$%^*()_{}:|\t\n/]+$",
          "description": "The customer's name.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "buyer"
    },
    "common_components-v3-schema-json-openapi-2.0-email_address.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "ppaas_common_email_address_v2",
      "minLength": 3,
      "maxLength": 254,
      "pattern": "^.+@[^\"\\-].+$",
      "properties": {}
    },
    "common_components-v3-schema-json-openapi-2.0-payer_id.json": {
      "type": "string",
      "description": "The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.",
      "format": "ppaas_payer_id_v3",
      "minLength": 13,
      "maxLength": 13,
      "pattern": "^[2-9A-HJ-NP-Z]{13}$",
      "properties": {}
    },
    "response-seller.json": {
      "type": "object",
      "title": "Merchant",
      "description": "The details for the merchant who receives the funds and fulfills the order. For example, merchant ID, and contact email address.",
      "properties": {
        "email": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-email_address.json",
          "description": "The email address for the merchant's PayPal account.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "merchant_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The PayPal account ID for the merchant.",
          "pattern": "^[0-9A-Za-z]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[^~!@#$%^*()_{}:|\t\n/]+$",
          "description": "The name of the merchant.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "seller"
    },
    "response-facilitator.json": {
      "type": "object",
      "title": "Facilitator",
      "description": "A resource representing a Facilitator/Partner who facilitates a transaction.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[^~!@#$%^*()_{}:|\t\n/]+$",
          "description": "The name of the Facilitator.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "facilitator"
    },
    "response-item_info.json": {
      "type": "object",
      "title": "Item Information",
      "description": "The information for a purchased item in a disputed transaction.",
      "properties": {
        "item_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "item_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The item name.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "item_description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The item description.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "item_quantity": {
          "type": "string",
          "description": "The count of the item in the dispute. Must be a whole number.",
          "minLength": 1,
          "maxLength": 10,
          "pattern": "^[1-9][0-9]{0,9}$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "partner_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The ID of the transaction in the partner system. The partner transaction ID is returned at an item level because the partner might show different transactions for different items in the cart.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/response-dispute_reason.json"
        },
        "dispute_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount of the item in the dispute.",
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "notes": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "Any notes provided with the item.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "item_type": {
          "$ref": "#/definitions/response-item_type.json"
        },
        "product_details": {
          "$ref": "#/definitions/response-item_product_details.json"
        },
        "service_details": {
          "$ref": "#/definitions/response-item_service_details.json"
        },
        "booking_details": {
          "$ref": "#/definitions/response-item_booking_details.json"
        },
        "digital_download_details": {
          "$ref": "#/definitions/response-item_digital_download_details.json"
        },
        "cancellation_details": {
          "$ref": "#/definitions/response-item_cancellation_details.json"
        },
        "agreed_refund_details": {
          "$ref": "#/definitions/response-item_agreed_refund_details.json"
        },
        "expected_refund": {
          "description": "The expected refund amount for the item.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json"
        }
      },
      "x-publicDocsSchemaName": "item_info"
    },
    "response-dispute_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Dispute Reason",
      "description": "The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
      "x-enum": [
        {
          "value": "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
          "description": "The customer did not receive the merchandise or service."
        },
        {
          "value": "MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED",
          "description": "The customer reports that the merchandise or service is not as described."
        },
        {
          "value": "UNAUTHORISED",
          "description": "The customer did not authorize purchase of the merchandise or service."
        },
        {
          "value": "CREDIT_NOT_PROCESSED",
          "description": "The refund or credit was not processed for the customer."
        },
        {
          "value": "DUPLICATE_TRANSACTION",
          "description": "The transaction was a duplicate."
        },
        {
          "value": "INCORRECT_AMOUNT",
          "description": "The customer was charged an incorrect amount."
        },
        {
          "value": "PAYMENT_BY_OTHER_MEANS",
          "description": "The customer paid for the transaction through other means."
        },
        {
          "value": "CANCELED_RECURRING_BILLING",
          "description": "The customer was being charged for a subscription or a recurring transaction that was canceled."
        },
        {
          "value": "PROBLEM_WITH_REMITTANCE",
          "description": "A problem occurred with the remittance."
        },
        {
          "value": "OTHER",
          "description": "Other."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "reason",
      "properties": {}
    },
    "response-item_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Item Type",
      "description": "The type of the item which has the issue.",
      "x-enum": [
        {
          "value": "PRODUCT",
          "description": "The product has an issue."
        },
        {
          "value": "SERVICE",
          "description": "The service has an issue."
        },
        {
          "value": "BOOKING",
          "description": "The booking has an issue."
        },
        {
          "value": "DIGITAL_DOWNLOAD",
          "description": "The digital download has an issue."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "item_type",
      "properties": {}
    },
    "response-item_product_details.json": {
      "type": "object",
      "title": "Product Details - item",
      "description": "The product information - item.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "product_received_time": {
          "description": "The date and time when product was delivered.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "expected_delivery_time": {
          "description": "The expected delivery date and time of the product.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "sub_reason": {
          "$ref": "#/definitions/response-item_product_sub_reason.json"
        },
        "category": {
          "$ref": "#/definitions/response-item_product_category.json"
        },
        "expected_delivery_address": {
          "description": "The address to which the product was expected to be delivered.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable.json"
        },
        "delivered_address": {
          "description": "The address to which the product was delivered.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable.json"
        },
        "purchase_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer purchased the product.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "return_details": {
          "$ref": "#/definitions/response-item_return_details.json"
        }
      },
      "x-publicDocsSchemaName": "item_product_details"
    },
    "response-item_product_sub_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The item level sub-reason for the product issue.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "x-enum": [
        {
          "value": "DAMAGED",
          "description": "The product was damaged."
        },
        {
          "value": "DIFFERENT",
          "description": "The product was different from what was expected."
        },
        {
          "value": "MISSING_PARTS",
          "description": "The product had missing parts."
        },
        {
          "value": "DEFECTIVE",
          "description": "The product was defective."
        },
        {
          "value": "COUNTERFEIT",
          "description": "The product was counterfeit."
        },
        {
          "value": "EMPTY",
          "description": "The package was empty."
        },
        {
          "value": "NOT_WORKING",
          "description": "The product stopped functioning."
        },
        {
          "value": "NOT_DELIVERED",
          "description": "The product was not delivered."
        },
        {
          "value": "TRACKING_INFO_NOT_RECEIVED",
          "description": "The tracking info was not received."
        },
        {
          "value": "STORE_PICKUP_UNAVAILABLE",
          "description": "The product was not available during a store pick up."
        },
        {
          "value": "WRONGLY_DELIVERED",
          "description": "The product was delivered to the wrong shipping address."
        },
        {
          "value": "NOT_SATISFIED",
          "description": "The customer was not satisfied with the delivered product."
        },
        {
          "value": "UNRELATED",
          "description": "The customer received an item which is not related to the order."
        },
        {
          "value": "CANCELLED",
          "description": "The product was cancelled."
        },
        {
          "value": "RETURNED",
          "description": "The product was returned."
        },
        {
          "value": "DELAYED",
          "description": "The product was delivered with delay."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "item_product_sub_reason",
      "properties": {}
    },
    "response-item_product_category.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Item Product Category",
      "description": "The product category of the item in dispute.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "x-enum": [
        {
          "value": "COMPUTERS",
          "description": "Computer or related accessories."
        },
        {
          "value": "HOME",
          "description": "Home goods, appliances and so on."
        },
        {
          "value": "JEWELRY",
          "description": "Decorative items, ornaments, and so on."
        },
        {
          "value": "ANTIQUES",
          "description": "Antiques and collectible items."
        },
        {
          "value": "ENTERTAINMENT",
          "description": "Entertainment goods, such as video games, DVDs, and so on."
        },
        {
          "value": "VEHICLE",
          "description": "Vehicle needs."
        },
        {
          "value": "GIFT_CARD",
          "description": "Gift or pre-paid cards."
        },
        {
          "value": "OTHER",
          "description": "Other material goods."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "item_product_category",
      "properties": {}
    },
    "common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "maxLength": 100
        },
        "admin_area_4": {
          "type": "string",
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
          "maxLength": 100
        },
        "admin_area_3": {
          "type": "string",
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
          "maxLength": 100
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "address_details": {
          "type": "object",
          "title": "Address Details",
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "properties": {
            "street_number": {
              "type": "string",
              "description": "The street number.",
              "maxLength": 100
            },
            "street_name": {
              "type": "string",
              "description": "The street name. Just `Drury` in `Drury Lane`.",
              "maxLength": 100
            },
            "street_type": {
              "type": "string",
              "description": "The street type. For example, avenue, boulevard, road, or expressway.",
              "maxLength": 100
            },
            "delivery_service": {
              "type": "string",
              "description": "The delivery service. Post office box, bag number, or post office name.",
              "maxLength": 100
            },
            "building_name": {
              "type": "string",
              "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.",
              "maxLength": 100
            },
            "sub_building": {
              "type": "string",
              "description": "The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
              "maxLength": 100
            }
          }
        }
      },
      "required": [
        "country_code"
      ]
    },
    "common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json": {
      "oneOf": [
        {
          "country_code": "AL",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AR",
          "validation_regex": "([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?"
        },
        {
          "country_code": "AT",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BE",
          "validation_regex": "[1-9]\\d{3}"
        },
        {
          "country_code": "BG",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Z]{2}[ ]?\\d{4}"
        },
        {
          "country_code": "BR",
          "validation_regex": "\\d{5}[\\-]?\\d{3}"
        },
        {
          "country_code": "BT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "BY",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CA",
          "validation_regex": "[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ ]?\\d[ABCEGHJ-NPRSTV-Z]\\d"
        },
        {
          "country_code": "CH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CL",
          "validation_regex": "\\d{7}"
        },
        {
          "country_code": "CN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CR",
          "validation_regex": "\\d{4,5}|\\d{3}-\\d{4}"
        },
        {
          "country_code": "CY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CZ",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "DE",
          "validation_regex": "(0[1-9]|[1-9]\\d)\\d{3}"
        },
        {
          "country_code": "DK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "DO",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "EC",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "EE",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "ES",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FI",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FM",
          "validation_regex": "(9694[1-4])(?:[ \\-]?(\\d{4}))?"
        },
        {
          "country_code": "FO",
          "validation_regex": "(FO[ \\-]?)?\\d{3}"
        },
        {
          "country_code": "FR",
          "validation_regex": "\\d{2}[ ]?\\d{3}"
        },
        {
          "country_code": "GB",
          "validation_regex": "GIR[ ]?0AA|(?:(?:AB|AL|B|BA|BB|BD|BF|BH|BL|BN|BR|BS|BT|BX|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(?:\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}))|BFPO[ ]?\\d{1,4}"
        },
        {
          "country_code": "GF",
          "validation_regex": "9[78]3\\d{2}"
        },
        {
          "country_code": "GL",
          "validation_regex": "(DK-?)?39\\d{2}"
        },
        {
          "country_code": "GP",
          "validation_regex": "9[78][01]\\d{2}"
        },
        {
          "country_code": "GR",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "HR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "HU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ID",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z0-9 \\-]{1,10}"
        },
        {
          "country_code": "IL",
          "validation_regex": "\\d{5}(\\d{2})?"
        },
        {
          "country_code": "IN",
          "validation_regex": "\\d{3}[ ]?\\d{3}"
        },
        {
          "country_code": "IS",
          "validation_regex": "\\d{3}"
        },
        {
          "country_code": "IT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "JP",
          "validation_regex": "\\d{3}-?\\d{4}"
        },
        {
          "country_code": "KG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "KH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KW",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KZ",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "LA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LK",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "LV",
          "validation_regex": "LV-\\d{4}"
        },
        {
          "country_code": "MA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MC",
          "validation_regex": "980\\d{2}"
        },
        {
          "country_code": "MD",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ME",
          "validation_regex": "8\\d{4}"
        },
        {
          "country_code": "MK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "MN",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MQ",
          "validation_regex": "9[78]2\\d{2}"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Z]{3}[ ]?\\d{2,4}"
        },
        {
          "country_code": "MU",
          "validation_regex": "\\d{3}(?:\\d{2}|[A-Z]{2}\\d{3})"
        },
        {
          "country_code": "MV",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MX",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MY",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "NL",
          "validation_regex": "\\d{4}[ ]?[A-Z]{2}"
        },
        {
          "country_code": "NO",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "NP",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NZ",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "OM",
          "validation_regex": "(?:PC )?\\d{3}"
        },
        {
          "country_code": "PE",
          "validation_regex": "(?:LIMA[ ]?\\d{1,2}|CALLAO[ ]?0?\\d)|[0-2]?\\d{1,4}"
        },
        {
          "country_code": "PH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "PL",
          "validation_regex": "\\d{2}-\\d{3}"
        },
        {
          "country_code": "PT",
          "validation_regex": "\\d{4}([\\-]?\\d{3})?"
        },
        {
          "country_code": "PY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "RE",
          "validation_regex": "9[78]4\\d{2}"
        },
        {
          "country_code": "RO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "RS",
          "validation_regex": "\\d{5,6}"
        },
        {
          "country_code": "RU",
          "validation_regex": "[1-9]\\d{5}"
        },
        {
          "country_code": "SA",
          "validation_regex": "\\d{5}([\\-]?\\d{4})?"
        },
        {
          "country_code": "SE",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "SI",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "SK",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SM",
          "validation_regex": "4789\\d"
        },
        {
          "country_code": "SV",
          "validation_regex": "(?:CP[ ]?)?[1-3][1-7][0-2]\\d"
        },
        {
          "country_code": "TH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TW",
          "validation_regex": "\\d{3}(\\d{2})?"
        },
        {
          "country_code": "UA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "US",
          "validation_regex": "\\d{5}([ \\-]?\\d{4})?"
        },
        {
          "country_code": "UY",
          "validation_regex": "[1-9]\\d{4}"
        },
        {
          "country_code": "VA",
          "validation_regex": "00120"
        },
        {
          "country_code": "VE",
          "validation_regex": "[1-8]\\d{3}([\\-]?[A-Z])?"
        },
        {
          "country_code": "VN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "YT",
          "validation_regex": "976\\d{2}"
        },
        {
          "country_code": "ZA",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "C2",
          "validation_regex": "\\d{6}"
        }
      ],
      "properties": {}
    },
    "common_components-v3-schema-json-openapi-2.0-country_code.json": {
      "type": "string",
      "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
      "format": "ppaas_common_country_code_v2",
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^([A-Z]{2}|C2)$",
      "properties": {}
    },
    "response-item_return_details.json": {
      "type": "object",
      "title": "Return Details - item",
      "description": "The return details for the product - item.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "returned": {
          "description": "If `true`, indicates that the item was returned but the seller refused to accept the return and if `false`, indicates the item was not attempted to return.",
          "type": "boolean",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "return_time": {
          "description": "The date and time when the product was returned, [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "mode": {
          "description": "The method that the customer used to return the product.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "SHIPPED",
              "description": "The customer shipped the product back to the merchant."
            },
            {
              "value": "IN_PERSON",
              "description": "The customer returned the item to the merchant in person."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "return_tracking_number": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9:\\-]+$",
          "description": "The tracking number for the item return.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "item_return_details"
    },
    "response-item_service_details.json": {
      "type": "object",
      "title": "Service Details - item",
      "description": "The service details - item.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "sub_reason": {
          "description": "The sub-reason for the service issue.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "NOT_RECEIVED",
              "description": "The Customer did not receive the service."
            },
            {
              "value": "DIFFERENT",
              "description": "The service was different from what was expected."
            },
            {
              "value": "INCOMPLETE",
              "description": "The service was incomplete."
            },
            {
              "value": "UNUSABLE",
              "description": "The service was unusable."
            },
            {
              "value": "DELAYED",
              "description": "The service was delayed or rescheduled."
            },
            {
              "value": "CANCELLED",
              "description": "The service was cancelled."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          },
          "x-publicDocsSchemaName": "item_service_sub_reason"
        },
        "category": {
          "description": "The service category of the item in dispute.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "REPAIR",
              "description": "The repair service."
            },
            {
              "value": "INSTALLATION",
              "description": "The installation service."
            },
            {
              "value": "DONATION",
              "description": "Donations for charitable causes and so on."
            },
            {
              "value": "INVESTMENT",
              "description": "Financial products or investments."
            },
            {
              "value": "OTHER",
              "description": "Other services."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "purchase_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the merchant or marketplace site where the customer purchased the service.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "completed_time": {
          "description": "The date and time - when the service was completed.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "expected_time": {
          "description": "The date and time - when the service was scheduled to be completed.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "scheduled_time": {
          "description": "The date and time - by which the service was scheduled.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "x-publicDocsSchemaName": "item_service_details"
    },
    "response-item_booking_details.json": {
      "type": "object",
      "title": "Booking Details",
      "description": "The Booking information.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "booking_time": {
          "description": "The date and time when the booking was made.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "sub_reason": {
          "description": "The sub-reason for the booking issue.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "NOT_RECEIVED",
              "description": "The booking confirmation was not received."
            },
            {
              "value": "DIFFERENT",
              "description": "The received booking was different."
            },
            {
              "value": "CANCELLED",
              "description": "The booking was cancelled."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          },
          "x-publicDocsSchemaName": "item_booking_sub_reason"
        },
        "category": {
          "description": "The booking category of the item in dispute.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "TRAVEL",
              "description": "Travel items and travel needs."
            },
            {
              "value": "TICKETS",
              "description": "Tickets for events, such as sports, concerts, and so on."
            },
            {
              "value": "ACCOMMODATION",
              "description": "Booking for hotels and similar accommodation."
            },
            {
              "value": "OTHER",
              "description": "Other bookings."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "item_booking_details"
    },
    "response-item_digital_download_details.json": {
      "type": "object",
      "title": "Digital download Details",
      "description": "The Digital download information.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "download_time": {
          "description": "The date and time when the digital download was made.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "download_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer downloaded the digital product.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "sub_reason": {
          "description": "The sub-reason for the digital download issue.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "NOT_DOWNLOADABLE",
              "description": "Did not receive the digital download."
            },
            {
              "value": "INACCESSIBLE",
              "description": "Could not access or use the digital download or content."
            },
            {
              "value": "INCOMPLETE",
              "description": "Charged for an incomplete or incompatible download."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          },
          "x-publicDocsSchemaName": "item_digital_download_sub_reason"
        },
        "category": {
          "description": "The digital download category of the item in dispute.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "VIRTUAL_GOODS",
              "description": "Non-physical objects, such as online games."
            },
            {
              "value": "GIFT_CARD",
              "description": "Gift or pre-paid cards."
            },
            {
              "value": "OTHER",
              "description": "Other digital downloads."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "item_digital_download_details"
    },
    "response-item_cancellation_details.json": {
      "type": "object",
      "title": "Cancellation Details - item",
      "description": "The cancellation details - item.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "cancelled": {
          "type": "boolean",
          "description": "Indicates whether the item was canceled.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_time": {
          "description": "The date and time of the cancellation, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "cancellation_number": {
          "description": "The cancellation number.",
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "pattern": "^[A-Za-z0-9]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancelled_by": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The party which cancelled the order.",
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The customer cancelled the order."
            },
            {
              "value": "SELLER",
              "description": "The merchant cancelled the order."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_mode": {
          "description": "Indicates the mode used for order cancellation.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "CANCELLED_PAYPAL_BILLING_AGREEMENT",
              "description": "Cancelled the billing agreement."
            },
            {
              "value": "WEBSITE",
              "description": "The item was cancelled on the merchant's website."
            },
            {
              "value": "PHONE",
              "description": "The item was cancelled through either phone or fax."
            },
            {
              "value": "EMAIL",
              "description": "The item was cancelled through either email or text message."
            },
            {
              "value": "WRITTEN",
              "description": "The item was cancelled via written communication."
            },
            {
              "value": "IN_PERSON",
              "description": "The item was cancelled in person."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-publicDocsSchemaName": "item_cancellation_mode"
        },
        "policy_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the Merchant or Marketplace site which have refund or cancellation policy.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "item_cancellation_details"
    },
    "response-item_agreed_refund_details.json": {
      "type": "object",
      "title": "Agreed Refund Details - item",
      "description": "Details of Agreed Refund between customer and merchant.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "merchant_agreed_refund_amount": {
          "description": "The merchant agreed refund amount for the item.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "merchant_agreed_refund_time": {
          "description": "The date and time proposed by merchant to provide the refund, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "x-publicDocsSchemaName": "item_agreed_refund_details"
    },
    "response-regulation_info.json": {
      "type": "object",
      "title": "Regulation Information",
      "description": "The details for the regulation under which the transaction is covered.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "regulation_covered": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The regulation under which the transaction is covered.",
          "x-enum": [
            {
              "value": "NONE",
              "description": "No regulation."
            },
            {
              "value": "REG_E",
              "description": "E regulation."
            },
            {
              "value": "REG_Z",
              "description": "Z regulation."
            },
            {
              "value": "REG_ZCAD",
              "description": "ZCAD regulation."
            },
            {
              "value": "PPBP",
              "description": "PPBP regulation."
            },
            {
              "value": "DEFERRED_CLAIM",
              "description": "Deferred claim regulation."
            },
            {
              "value": "LUX_AGGR",
              "description": "LUX AGGR regulation."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "resolution_sla": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute must be resolved, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "regulation_info"
    },
    "common_components-v3-schema-json-openapi-2.0-link_description.json": {
      "type": "object",
      "title": "Link Description",
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "required": [
        "href",
        "rel"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "rel": {
          "type": "string",
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "method": {
          "type": "string",
          "description": "The HTTP method required to make the related call.",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "HEAD",
            "CONNECT",
            "OPTIONS",
            "PATCH"
          ],
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "title": {
          "type": "string",
          "description": "The link title.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "mediaType": {
          "type": "string",
          "description": "The media type, as defined by [RFC 2046](https://www.ietf.org/rfc/rfc2046.txt). Describes the link target.",
          "x-publicDocsSchemaName": "media_type",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "encType": {
          "type": "string",
          "description": "The media type in which to submit the request data.",
          "x-publicDocsSchemaName": "enc_type",
          "default": "application/json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "schema": {
          "description": "The schema that describes the request data.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "targetSchema": {
          "description": "The schema that describes the link target.",
          "x-publicDocsSchemaName": "target_schema",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      }
    },
    "common_components-v3-schema-json-openapi-2.0-link_schema.json": {
      "type": "object",
      "title": "Link Schema",
      "description": "The request data or link target.",
      "additionalProperties": true,
      "properties": {
        "additionalItems": {
          "type": "object",
          "title": "Additional Items",
          "additionalProperties": true,
          "description": "Any additional items.",
          "x-publicDocsSchemaName": "additional_items"
        },
        "dependencies": {
          "type": "object",
          "title": "Dependencies",
          "description": "Any Dependencies.",
          "additionalProperties": true
        },
        "items": {
          "type": "object",
          "title": "Items",
          "additionalProperties": true,
          "description": "An item."
        },
        "definitions": {
          "type": "object",
          "title": "Definitions",
          "additionalProperties": true,
          "description": "Definitions."
        },
        "patternProperties": {
          "type": "object",
          "title": "Pattern Properties",
          "additionalProperties": true,
          "description": "The pattern properties.",
          "x-publicDocsSchemaName": "pattern_properties"
        },
        "properties": {
          "type": "object",
          "title": "Properties",
          "additionalProperties": true,
          "description": "Properties."
        },
        "allOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against all sub-schemas.",
          "x-publicDocsSchemaName": "all_of",
          "items": {
            "type": "object",
            "title": "All Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "all_of_item"
          }
        },
        "anyOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one or more sub-schemas.",
          "x-publicDocsSchemaName": "any_of",
          "items": {
            "type": "object",
            "title": "Any Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "any_of_item"
          }
        },
        "oneOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one sub-schema.",
          "x-publicDocsSchemaName": "one_of",
          "items": {
            "type": "object",
            "title": "One Of Item",
            "description": "A sub-schema against which the data must validate.",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "one_of_item"
          }
        },
        "not": {
          "type": "object",
          "title": "Not",
          "additionalProperties": true,
          "description": "not."
        },
        "links": {
          "type": "array",
          "description": "An array of links.",
          "readOnly": true,
          "items": {
            "type": "object",
            "title": "Link",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "link",
            "description": "A link.",
            "readOnly": true
          }
        },
        "fragmentResolution": {
          "type": "string",
          "description": "The fragment resolution.",
          "x-publicDocsSchemaName": "fragment_resolution"
        },
        "media": {
          "type": "object",
          "title": "Media",
          "description": "The media type and context-encoding scheme.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The media type. See [Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types](https://tools.ietf.org/html/rfc2046)."
            },
            "binaryEncoding": {
              "type": "string",
              "description": "The content-encoding scheme. See [Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](https://tools.ietf.org/html/rfc2045).",
              "x-publicDocsSchemaName": "binary_encoding"
            }
          }
        },
        "pathStart": {
          "type": "string",
          "format": "uri",
          "description": "To apply this schema to the instances' URIs, start the URIs with this value.",
          "x-publicDocsSchemaName": "path_start"
        }
      }
    },
    "response-account_activity.json": {
      "type": "object",
      "title": "Account Activity",
      "description": "The information about the account-related activities.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "readOnly": true,
          "description": "The ID of the activity log entry.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the activity occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "entity_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The entity type on which the activity was completed.",
          "x-enum": [
            {
              "value": "EMAIL",
              "description": "The account change occurred to an email."
            },
            {
              "value": "PHONE",
              "description": "The account change occurred to a phone number."
            },
            {
              "value": "ADDRESS",
              "description": "The account change occurred to an address."
            },
            {
              "value": "ACCOUNT",
              "description": "The account change occurred to the account itself."
            },
            {
              "value": "FUNDING_INSTRUMENT",
              "description": "The account change occurred to a funding instrument."
            },
            {
              "value": "OTHER",
              "description": "The account change was other."
            },
            {
              "value": "DEVICE",
              "description": "The account change occurred to a device."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "entity_subtype": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The entity subtype on which the activity was completed. For example, `CREDIT_CARD` is a subtype of `FUNDING_INSTRUMENT`, `PAYPAL_SMART_CONNECT` is subtype of `CREDIT_LINE`, and so on.",
          "x-enum": [
            {
              "value": "CREDIT_CARD",
              "description": "The account change occurred to a credit card."
            },
            {
              "value": "BANK_ACCOUNT",
              "description": "The account change occurred to a bank account."
            },
            {
              "value": "DEBIT_CARD",
              "description": "The account change occurred to a debit card."
            },
            {
              "value": "BUYER_CREDIT",
              "description": "The account change occurred to customer credit."
            },
            {
              "value": "PAYPAL_SMART_CONNECT",
              "description": "The account change occurred to PayPal Smart Connect."
            },
            {
              "value": "EBAY_CARD",
              "description": "The account change occurred to an ebay card."
            },
            {
              "value": "PLUS_CARD",
              "description": "The account change occurred to a Plus card."
            },
            {
              "value": "WORKING_CAPITAL",
              "description": "The account change occurred to working capital."
            },
            {
              "value": "REVOLVING_CREDIT",
              "description": "The account change occurred to revolving credit."
            },
            {
              "value": "CLOSE_ENDED_CREDIT",
              "description": "The account change occurred to close-ended credit."
            },
            {
              "value": "VIRTUAL_CARD",
              "description": "The account change occurred to a virtual card."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "action_performed": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The action that was completed on the entity type.",
          "x-enum": [
            {
              "value": "ADDED",
              "description": "The entity was added."
            },
            {
              "value": "REMOVED",
              "description": "The entity was removed."
            },
            {
              "value": "MARKED_PRIMARY",
              "description": "The entity was marked as primary."
            },
            {
              "value": "EDITED",
              "description": "The entity was edited."
            },
            {
              "value": "UPGRADED",
              "description": "The entity was upgraded."
            },
            {
              "value": "DOWNGRADED",
              "description": "The entity was downgraded."
            },
            {
              "value": "STOLEN_OR_LOST",
              "description": "The entity was stolen or lost."
            },
            {
              "value": "CLOSED",
              "description": "The entity was closed."
            },
            {
              "value": "DEACTIVATED",
              "description": "The entity was deactivated."
            },
            {
              "value": "REACTIVATED",
              "description": "The entity was reactivated."
            },
            {
              "value": "REOPENED",
              "description": "The entity was reopened."
            },
            {
              "value": "APPLIED",
              "description": "The entity was applied for."
            },
            {
              "value": "ACTIVATED",
              "description": "The entity was activated."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "entity_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The entity ID of the reported item. For example, the card ID.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "activity_entity_info": {
          "$ref": "#/definitions/response-activity_entity_info.json",
          "x-publicDocsSchemaName": "activity_entity_info"
        },
        "reversal_actions": {
          "type": "array",
          "description": "An array of system actions that reversed the impact of the unauthorized event. Includes the system-defined details of the reversal action.",
          "minItems": 1,
          "maxItems": 100,
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/response-reversal_action.json",
            "x-publicDocsSchemaName": "reversal_action"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "account_activity"
    },
    "response-activity_entity_info.json": {
      "type": "object",
      "title": "Activity Entity Information",
      "description": "The date and time of the last known transaction or when other entity-related information was updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
      "properties": {
        "last_known_valid_transaction_date": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the user last validated the transaction with the instrument, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "card_replacement_address_confirmed": {
          "type": "boolean",
          "description": "Indicates whether the customer agreed to send the replaced card to the address associated to card.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "card_shared_with_someone_else": {
          "type": "boolean",
          "description": "Indicates whether the customer shared their card with someone else.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "merchant_has_card_details": {
          "type": "boolean",
          "description": "Indicates whether the merchant has the customer's card details.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "card_settings_changed": {
          "type": "boolean",
          "description": "Indicates whether the customer has changed their card settings.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "activity_entity_info"
    },
    "response-reversal_action.json": {
      "type": "object",
      "title": "Reversal Action",
      "description": "The system action that reverses the impact of the unauthorized event. Includes the system-defined details of the reversal action.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "readOnly": true,
          "description": "The ID of the entity that was changed as part of the reversal action.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "original_activity_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "readOnly": true,
          "description": "The ID of the activity log entry that was created for the reversal action that was carried out by the system.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "entity_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The entity type on which some activity is completed.",
          "x-enum": [
            {
              "value": "EMAIL",
              "description": "An email address."
            },
            {
              "value": "PHONE",
              "description": "A phone numbr."
            },
            {
              "value": "ADDRESS",
              "description": "An address."
            },
            {
              "value": "ACCOUNT",
              "description": "An account."
            },
            {
              "value": "FUNDING_INSTRUMENT",
              "description": "A funding instrument."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "entity_subtype": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The entity subtype on which the activity is completed. For example, `CREDIT_CARD` is a subtype of `FUNDING_INSTRUMENT`, `PAYPAL_SMART_CONNECT` is a subtype of `CREDIT_LINE`, and so on.",
          "x-enum": [
            {
              "value": "CREDIT_CARD",
              "description": "A credit card."
            },
            {
              "value": "BANK_ACCOUNT",
              "description": "A bank account."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "action_performed": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The action completed on the entity type.",
          "x-enum": [
            {
              "value": "ADDED",
              "description": "The entity was added."
            },
            {
              "value": "REMOVED",
              "description": "The entity was removed."
            },
            {
              "value": "MARKED_PRIMARY",
              "description": "The entity was marked as primary."
            },
            {
              "value": "EDITED",
              "description": "The entity was edited."
            },
            {
              "value": "UPGRADED",
              "description": "The entity was upgraded."
            },
            {
              "value": "DOWNGRADED",
              "description": "The entity was downgraded."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "readOnly": true,
          "pattern": "^[A-Za-z0-9_-]+$",
          "description": "The status.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "reversal_action"
    },
    "response-status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "readOnly": true,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The status of the dispute.",
      "x-enum": [
        {
          "value": "OPEN",
          "description": "The dispute is open."
        },
        {
          "value": "WAITING_FOR_BUYER_RESPONSE",
          "description": "The dispute is waiting for a response from the customer."
        },
        {
          "value": "WAITING_FOR_SELLER_RESPONSE",
          "description": "The dispute is waiting for a response from the merchant."
        },
        {
          "value": "UNDER_REVIEW",
          "description": "The dispute is under review with PayPal."
        },
        {
          "value": "RESOLVED",
          "description": "The dispute is resolved."
        },
        {
          "value": "OTHER",
          "description": "The default status if the dispute does not have one of the other statuses."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "status",
      "properties": {}
    },
    "response-dispute_state.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Dispute State",
      "description": "The state of the dispute.",
      "x-enum": [
        {
          "value": "OPEN_INQUIRIES",
          "description": "The dispute is open."
        },
        {
          "value": "REQUIRED_ACTION",
          "description": "The dispute is waiting for a response."
        },
        {
          "value": "REQUIRED_OTHER_PARTY_ACTION",
          "description": "The dispute is waiting for a response from other party."
        },
        {
          "value": "UNDER_PAYPAL_REVIEW",
          "description": "The dispute is under review with PayPal."
        },
        {
          "value": "APPEALABLE",
          "description": "The dispute can be appealed."
        },
        {
          "value": "RESOLVED",
          "description": "The dispute is resolved."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "dispute_state",
      "properties": {}
    },
    "response-dispute_outcome.json": {
      "type": "object",
      "title": "Dispute Outcome",
      "description": "The outcome of a dispute.",
      "properties": {
        "outcome_code": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The outcome of a resolved dispute.",
          "x-enum": [
            {
              "value": "RESOLVED_BUYER_FAVOUR",
              "description": "The dispute was resolved in the customer's favor."
            },
            {
              "value": "RESOLVED_SELLER_FAVOUR",
              "description": "The dispute was resolved in the merchant's favor."
            },
            {
              "value": "RESOLVED_WITH_PAYOUT",
              "description": "PayPal provided the merchant or customer with protection and the case is resolved."
            },
            {
              "value": "CANCELED_BY_BUYER",
              "description": "The customer canceled the dispute."
            },
            {
              "value": "ACCEPTED",
              "description": "DEPRECATED. PayPal accepted the dispute.",
              "x-deprecated": {
                "see": "RESOLVED_BUYER_FAVOUR",
                "since_version": "1.8"
              }
            },
            {
              "value": "DENIED",
              "description": "DEPRECATED. PayPal denied the dispute.",
              "x-deprecated": {
                "see": "RESOLVED_SELLER_FAVOUR",
                "since_version": "1.8"
              }
            },
            {
              "value": "NONE",
              "description": "A dispute was created for the same transaction ID, and the previous dispute was closed without any decision."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "outcome_reason": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The justification for the adjudication outcome.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount_refunded": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount that either the merchant or PayPal refunds the customer.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "dispute_outcome"
    },
    "response-dispute_lifecycle_stage.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "readOnly": true,
      "description": "The stage in the dispute lifecycle.",
      "x-enum": [
        {
          "value": "INQUIRY",
          "description": "A customer and merchant interact in an attempt to resolve a dispute without escalation to PayPal. Occurs when the customer:<ul><li>Has not received goods or a service.</li><li>Reports that the received goods or service are not as described.</li><li>Needs more details, such as a copy of the transaction or a receipt.</li></ul>"
        },
        {
          "value": "CHARGEBACK",
          "description": "A customer or merchant escalates an inquiry to a claim, which authorizes PayPal to investigate the case and make a determination. Occurs only when the dispute channel is <code>INTERNAL</code>. This stage is a PayPal dispute lifecycle stage and not a credit card or debit card chargeback. All notes that the customer sends in this stage are visible to PayPal agents only. The customer must wait for PayPal’s response before the customer can take further action. In this stage, PayPal shares dispute details with the merchant, who can complete one of these actions:<ul><li>Accept the claim.</li><li>Submit evidence to challenge the claim.</li><li>Make an offer to the customer to resolve the claim.</li></ul>"
        },
        {
          "value": "PRE_ARBITRATION",
          "description": "The first appeal stage for merchants. A merchant can appeal a chargeback if PayPal's decision is not in the merchant's favor. If the merchant does not appeal within the appeal period, PayPal considers the case resolved."
        },
        {
          "value": "ARBITRATION",
          "description": "The second appeal stage for merchants. A merchant can appeal a dispute for a second time if the first appeal was denied. If the merchant does not appeal within the appeal period, the case returns to a resolved status in pre-arbitration stage."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "dispute_lifecycle_stage",
      "properties": {}
    },
    "response-dispute_channel.json": {
      "readOnly": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "description": "The channel where the customer created the dispute.",
      "x-enum": [
        {
          "value": "INTERNAL",
          "description": "The customer contacts PayPal to file a dispute with the merchant."
        },
        {
          "value": "EXTERNAL",
          "description": "The customer contacts their card issuer or bank to request a refund."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "dispute_channel",
      "properties": {}
    },
    "response-message.json": {
      "type": "object",
      "title": "Message",
      "description": "A customer- or merchant-posted message for the dispute.",
      "properties": {
        "posted_by": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "Indicates whether the customer, merchant, or dispute arbiter posted the message.",
          "readOnly": true,
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The customer posted the message."
            },
            {
              "value": "SELLER",
              "description": "The merchant posted the message."
            },
            {
              "value": "ARBITER",
              "description": "The arbiter of the dispute posted the message."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "time_posted": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the message was posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "content": {
          "type": "string",
          "description": "The message text.",
          "maxLength": 2000,
          "minLength": 0,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "documents": {
          "type": "array",
          "readOnly": true,
          "description": "An array of metadata for the documents which contains any additional info about the message posted.",
          "items": {
            "$ref": "#/definitions/response-document.json",
            "x-publicDocsSchemaName": "document"
          },
          "minItems": 1,
          "maxItems": 10,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "message"
    },
    "response-document.json": {
      "type": "object",
      "title": "Document",
      "description": "An uploaded document as a binary object that supports a dispute.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[A-Za-z0-9-_,\\s]+[.]{1}[A-Za-z]+$",
          "description": "The document name.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "url": {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "description": "The downloadable URL for the document for which the client has access.<br/><br/><blockquote><strong>Note:</strong> Document download may require some configuration setup and available as a limited release at this time. For more information, reach out to your PayPal account manager.</blockquote>.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "document"
    },
    "response-extensions.json": {
      "type": "object",
      "title": "Extensions",
      "description": "The extended properties for the dispute. Includes additional information for a dispute category, such as billing disputes, the original transaction ID, and the correct amount.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "merchant_contacted": {
          "type": "boolean",
          "description": "Indicates that the merchant was contacted.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "merchant_contacted_outcome": {
          "$ref": "#/definitions/response-merchant_contacted_outcome.json",
          "x-publicDocsSchemaName": "merchant_contacted_outcome"
        },
        "merchant_contacted_time": {
          "description": "The date and time when merchant was contacted.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "merchant_contacted_mode": {
          "description": "The method used to contact the merchant.",
          "$ref": "#/definitions/response-merchant_contacted_mode.json"
        },
        "buyer_contacted_time": {
          "description": "The date and time when the buyer contacted the partner to file a dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "buyer_contacted_channel": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The channel through which the buyer contacted the partner to file a dispute. Partners that allow buyers to create dispute from multiple channels can use this field to help identify which channel was used for each individual dispute.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "billing_dispute_properties": {
          "$ref": "#/definitions/response-billing_disputes_properties.json",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "unauthorized_dispute_properties": {
          "$ref": "#/definitions/response-unauthorized_dispute_properties.json",
          "x-publicDocsSchemaName": "unauthorized_dispute_properties",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "merchandize_dispute_properties": {
          "$ref": "#/definitions/response-merchandize_dispute_properties.json",
          "x-publicDocsSchemaName": "merchandise_dispute_properties"
        },
        "external_case_properties": {
          "$ref": "#/definitions/response-external_case_properties.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "remittance_dispute_properties": {
          "$ref": "#/definitions/response-remittance_dispute_properties.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "extensions"
    },
    "response-merchant_contacted_outcome.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Merchant Contacted Outcome",
      "description": "The outcome when the customer has contacted the merchant.",
      "x-enum": [
        {
          "value": "NO_RESPONSE",
          "description": "The merchant did not respond to the customer."
        },
        {
          "value": "FIXED",
          "description": "The merchant agreed to fix the issue but did not fix it yet."
        },
        {
          "value": "NOT_FIXED",
          "description": "The merchant could not fix the issue."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "merchant_contacted_outcome",
      "properties": {}
    },
    "response-merchant_contacted_mode.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Merchant Contacted Method",
      "description": "The method used to contact the merchant.",
      "x-enum": [
        {
          "value": "WEBSITE",
          "description": "The merchant was contacted through his website."
        },
        {
          "value": "PHONE",
          "description": "The merchant was contacted through either phone or fax."
        },
        {
          "value": "EMAIL",
          "description": "The merchant was contacted through either email or text message."
        },
        {
          "value": "WRITTEN",
          "description": "The merchant was contacted through a written communication."
        },
        {
          "value": "IN_PERSON",
          "description": "The merchant was contacted in person."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "merchant_contacted_outcome",
      "properties": {}
    },
    "response-billing_disputes_properties.json": {
      "type": "object",
      "title": "Billing Disputes Properties",
      "description": "The billing issue details.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "duplicate_transaction": {
          "$ref": "#/definitions/response-duplicate_transaction.json"
        },
        "incorrect_transaction_amount": {
          "$ref": "#/definitions/response-incorrect_transaction_amount.json"
        },
        "payment_by_other_means": {
          "$ref": "#/definitions/response-payment_by_other_means.json"
        },
        "credit_not_processed": {
          "$ref": "#/definitions/response-credit_not_processed.json"
        },
        "canceled_recurring_billing": {
          "$ref": "#/definitions/response-canceled_recurring_billing.json"
        }
      },
      "x-publicDocsSchemaName": "billing_disputes_properties"
    },
    "response-duplicate_transaction.json": {
      "type": "object",
      "title": "Duplicate Transaction",
      "description": "The duplicate transaction details.",
      "properties": {
        "received_duplicate": {
          "type": "boolean",
          "description": "If `true`, indicates that a duplicate transaction was received.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "original_transaction": {
          "$ref": "#/definitions/response-transaction_info.json",
          "x-publicDocsSchemaName": "transaction_info",
          "description": "The transaction details for the original transaction, when the dispute reason is `DUPLICATE_TRANSACTION`. Currently, contains only the date and amount."
        }
      },
      "x-publicDocsSchemaName": "duplication_transaction"
    },
    "response-incorrect_transaction_amount.json": {
      "type": "object",
      "title": "Incorrect Transaction Amount",
      "description": "The incorrect transaction amount details.",
      "properties": {
        "correct_transaction_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "correct_transaction_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the customer created the transaction, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "incorrect_transaction_amount"
    },
    "response-payment_by_other_means.json": {
      "type": "object",
      "title": "Payment by Other Means",
      "description": "The payment by other means details.",
      "properties": {
        "charge_different_from_original": {
          "type": "boolean",
          "description": "If `true`, indicates that a charge was made that is different from the original charge.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "received_duplicate": {
          "type": "boolean",
          "description": "If `true`, indicates that a duplicate transaction was received.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_method": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The payment method.",
          "x-enum": [
            {
              "value": "CASH",
              "description": "The payment method was cash."
            },
            {
              "value": "CREDIT_CARD",
              "description": "The payment method was a credit card."
            },
            {
              "value": "CHECK",
              "description": "The payment method was a check."
            },
            {
              "value": "PAYPAL",
              "description": "The payment method was PayPal."
            },
            {
              "value": "DEBIT_CARD",
              "description": "The payment method was a debit card."
            },
            {
              "value": "GIFT_CARD",
              "description": "The payment method was a gift card."
            },
            {
              "value": "BANK_TRANSFER",
              "description": "The payment method was through bank transfer."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "payment_instrument_suffix": {
          "type": "string",
          "minLength": 2,
          "maxLength": 4,
          "description": "Last 2-4 characters of the payment instrument. For payment_method CHECK, payment_instrument_suffix entered must be of minimum length 2-4 characters. For payment_method CREDIT_CARD, DEBIT_CARD, GIFT_CARD, BANK_TRANSFER, payment_instrument_suffix entered must be of length 4.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "payment_by_other_means"
    },
    "response-credit_not_processed.json": {
      "type": "object",
      "title": "Credit Not Processed",
      "description": "The credit not processed details.",
      "properties": {
        "issue_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The issue type.",
          "x-enum": [
            {
              "value": "PRODUCT",
              "description": "The product has an issue."
            },
            {
              "value": "SERVICE",
              "description": "The service has an issue."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "expected_refund": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_details": {
          "$ref": "#/definitions/response-cancellation_details.json",
          "x-publicDocsSchemaName": "cancellation_details"
        },
        "product_details": {
          "$ref": "#/definitions/response-product_details.json",
          "x-publicDocsSchemaName": "product_details"
        },
        "service_details": {
          "$ref": "#/definitions/response-service_details.json",
          "x-publicDocsSchemaName": "service_details"
        },
        "agreed_refund_details": {
          "$ref": "#/definitions/response-agreed_refund_details.json"
        }
      },
      "x-publicDocsSchemaName": "credit_not_processed"
    },
    "response-cancellation_details.json": {
      "type": "object",
      "title": "Cancellation Details",
      "description": "The cancellation details.",
      "properties": {
        "cancellation_date": {
          "description": "The date and time of the cancellation, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_number": {
          "description": "The cancellation number.",
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "pattern": "^[A-Za-z0-9]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancelled": {
          "type": "boolean",
          "description": "Indicates whether the dispute was canceled.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_mode": {
          "description": "Indicates the mode used for order cancellation.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "CANCELLED_PAYPAL_BILLING_AGREEMENT",
              "description": "Cancelled the billing agreement."
            },
            {
              "value": "WEBSITE",
              "description": "The item was cancelled on the merchant's website."
            },
            {
              "value": "PHONE",
              "description": "The item was cancelled through either phone or fax."
            },
            {
              "value": "EMAIL",
              "description": "The item was cancelled through either email or text message."
            },
            {
              "value": "WRITTEN",
              "description": "The item was cancelled via written communication."
            },
            {
              "value": "IN_PERSON",
              "description": "The item was cancelled in person."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "cancellation_details"
    },
    "response-product_details.json": {
      "type": "object",
      "title": "Product Details",
      "description": "The product information.",
      "properties": {
        "description": {
          "description": "The product description.",
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "product_received": {
          "description": "Indicates whether the product was, or was not, received or returned.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "YES",
              "description": "The product was received."
            },
            {
              "value": "NO",
              "description": "The product was not received."
            },
            {
              "value": "RETURNED",
              "description": "The product was returned."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "note": {
          "description": "The customer-provided note explaining the reason for filing the claim.",
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "product_received_time": {
          "description": "The date and time when product was delivered.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "expected_delivery_date": {
          "description": "The expected delivery date and time of the product.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "sub_reasons": {
          "description": "An array of sub-reasons for the product issue.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "x-publicDocsSchemaName": "sub_reason",
            "description": "The sub-reason for the product issue.",
            "x-enum": [
              {
                "value": "DAMAGED",
                "description": "The product was damaged."
              },
              {
                "value": "DIFFERENT",
                "description": "The product was different from what was expected."
              },
              {
                "value": "MISSING_PARTS",
                "description": "The product had missing parts."
              },
              {
                "value": "OTHER",
                "description": "Other."
              }
            ]
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "purchase_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer purchased the product.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "return_details": {
          "$ref": "#/definitions/response-return_details.json",
          "x-publicDocsSchemaName": "return_details"
        }
      },
      "x-publicDocsSchemaName": "product_details"
    },
    "response-return_details.json": {
      "type": "object",
      "title": "Return Details",
      "description": "The return details for the product.",
      "properties": {
        "return_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the product was returned, [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "mode": {
          "description": "The method that the customer used to return the product.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "SHIPPED",
              "description": "The customer shipped the product back to the merchant."
            },
            {
              "value": "IN_PERSON",
              "description": "The customer returned the item to the merchant in person."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "receipt": {
          "type": "boolean",
          "description": "Indicates whether customer has the return receipt.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "return_confirmation_number": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9:\\-]+$",
          "description": "The confirmation number for the item return.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "returned": {
          "description": "If `true`, indicates that the item was returned but the seller refused to accept the return and if `false`, indicates the item was not attempted to return.",
          "type": "boolean",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "return_details"
    },
    "response-service_details.json": {
      "type": "object",
      "title": "Service Details",
      "description": "The service details.",
      "properties": {
        "description": {
          "description": "The service description.",
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "service_started": {
          "description": "Indicates whether the service was started or cancelled.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "YES",
              "description": "The service was started."
            },
            {
              "value": "NO",
              "description": "The service was not started."
            },
            {
              "value": "CANCELLED",
              "description": "The service was cancelled."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "note": {
          "description": "The customer specified note about the service usage.",
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "sub_reasons": {
          "description": "An array of sub-reasons for the service issue.",
          "type": "array",
          "items": {
            "x-publicDocsSchemaName": "sub_reason",
            "description": "The sub-reason for the service issue.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "x-enum": [
              {
                "value": "DAMAGED",
                "description": "The service was damaged."
              },
              {
                "value": "DIFFERENT",
                "description": "The service was different from what was expected."
              },
              {
                "value": "INCOMPLETE",
                "description": "The service was incomplete."
              },
              {
                "value": "OTHER",
                "description": "Other."
              }
            ],
            "x-securityClassification": {
              "data_class": "class5",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "purchase_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the merchant or marketplace site where the customer purchased the service.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "service_details"
    },
    "response-agreed_refund_details.json": {
      "type": "object",
      "title": "Agreed Refund Details",
      "description": "Details of Agreed Refund between customer and merchant.",
      "properties": {
        "merchant_agreed_refund": {
          "type": "boolean",
          "description": "Indicates whether merchant has agreed to refund the buyer or not.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        },
        "merchant_agreed_refund_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time proposed by merchant to provide the refund, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        }
      }
    },
    "response-canceled_recurring_billing.json": {
      "type": "object",
      "title": "Canceled Recurring Billing",
      "description": "The recurring billing canceled details.",
      "properties": {
        "expected_refund": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_details": {
          "$ref": "#/definitions/response-cancellation_details.json",
          "x-publicDocsSchemaName": "cancellation_details"
        },
        "subscription_details": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/response-subscription_details.json"
        },
        "sub_reason": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The sub-reason for the recurring billing issue.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-enum": [
            {
              "value": "CHARGED_FOR_FREE_TRIAL",
              "description": "The customer was charged for a free trial period."
            },
            {
              "value": "NOT_NOTIFIED_OF_CHARGES",
              "description": "The customer wasn’t notified of the renewal or change in charges."
            },
            {
              "value": "CHARGED_AFTER_CANCELLATION",
              "description": "The customer was charged for a canceled automatic payment."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "canceled_recurring_billing"
    },
    "response-subscription_details.json": {
      "type": "object",
      "title": "Subscription Details",
      "description": "The subscription details.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "subscription_start_time": {
          "description": "The start date and time of the subscription, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "agreed_subscription_amount": {
          "description": "The agreed subscription amount.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json"
        }
      },
      "x-publicDocsSchemaName": "subscription_details"
    },
    "response-unauthorized_dispute_properties.json": {
      "type": "object",
      "title": "Unauthorized Dispute Properties",
      "description": "The customer-entered issue details for an unauthorized dispute.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "password_changed": {
          "type": "boolean",
          "description": "Indicates whether the customer changed their password after a spoof incident.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "pin_changed": {
          "type": "boolean",
          "description": "Indicates whether the customer changed their PIN after a spoof incident.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "security_questions_changed": {
          "type": "boolean",
          "description": "Indicates whether the customer changed their answers to security questions after a spoof incident.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "review_sla": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the review service level agreement (SLA) was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "rejected_dispute_transactions": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of transaction IDs that the user reported as unauthorized but that PayPal rejected.",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The encrypted transaction ID.",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-publicDocsSchemaName": "rejected_dispute_transaction"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "fraud_reversal": {
          "$ref": "#/definitions/response-fraud_reversal.json"
        },
        "cancelled_orders": {
          "type": "array",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of cancelled order ID.",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The cancelled order ID.",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "unauthorized_dispute_properties"
    },
    "response-fraud_reversal.json": {
      "type": "object",
      "title": "Fraud Reversal",
      "description": "The Fraud reversal details.",
      "properties": {
        "reversal_reason": {
          "readOnly": true,
          "$ref": "#/definitions/response-reversal_reason.json"
        }
      },
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "x-publicDocsSchemaName": "fraud_reversal"
    },
    "response-reversal_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The fraud reversal reason.",
      "x-enum": [
        {
          "value": "SUSPICIOUS_CREDIT_CARD_USE",
          "description": "The reversal is due to suspicious credit card use."
        },
        {
          "value": "SUSPICIOUS_BANK_ACCOUNT_USE",
          "description": "The reversal is due to suspicious bank account."
        },
        {
          "value": "SUSPICIOUS_BALANCE_PAYMENT",
          "description": "The reversal is due to suspicious balance payment."
        },
        {
          "value": "PROBABLE_NOT_AS_DESCRIBED_SELLER",
          "description": "The reversal is due to probable Not as Described seller."
        },
        {
          "value": "PROBABLE_NON_RECEIPT_SELLER",
          "description": "The reversal is due to probable Non-Receipt seller."
        },
        {
          "value": "PROBABLE_UNAUTHORIZED_ACCOUNT_ACCESS",
          "description": "The reversal is due to probable unauthorized account access."
        },
        {
          "value": "STOLEN_CREDIT_CARD",
          "description": "The reversal is due to stolen credit card."
        },
        {
          "value": "STOLEN_BANK_ACCOUNT",
          "description": "The reversal is due to stolen bank account."
        },
        {
          "value": "STOLEN_OTHER_FUNDING_INSTRUMENT",
          "description": "The reversal is due to stolen other funding instruments such as buyer credit etc."
        },
        {
          "value": "MARKETPLACE_ITEM_REMOVAL",
          "description": "The reversal is due to Marketplace Item Removal."
        },
        {
          "value": "CAPTURE_FRAUD",
          "description": "The reversal is due to capture fraud."
        },
        {
          "value": "SUSPICIOUS_CAPTURE_FRAUD",
          "description": "The reversal is due to suspicious capture fraud."
        },
        {
          "value": "CAPTURE_CREDIT",
          "description": "The reversal is due to capture credit."
        },
        {
          "value": "CHARGEBACK_ALERT",
          "description": "The reversal is due to chargeback alert."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "reversal_reason",
      "properties": {}
    },
    "response-merchandize_dispute_properties.json": {
      "type": "object",
      "title": "Merchandise Dispute Properties",
      "description": "The customer-provided merchandise issue details for the dispute.",
      "properties": {
        "issue_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The issue type.",
          "x-enum": [
            {
              "value": "PRODUCT",
              "description": "The product has an issue."
            },
            {
              "value": "SERVICE",
              "description": "The service has an issue."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "product_details": {
          "$ref": "#/definitions/response-product_details.json",
          "x-publicDocsSchemaName": "product_details"
        },
        "service_details": {
          "$ref": "#/definitions/response-service_details.json",
          "x-publicDocsSchemaName": "service_details"
        },
        "cancellation_details": {
          "$ref": "#/definitions/response-cancellation_details.json",
          "x-publicDocsSchemaName": "cancellation_details"
        },
        "return_shipping_address": {
          "description": "The return address for the item. Required when the customer must return an item to the merchant for the <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#merchandise_or_service_not_as_described\"><code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code></a> dispute reason.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          },
          "x-publicDocsSchemaName": "address_portable"
        },
        "return_policy": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+^",
          "description": "The return shipping policy for buyer.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true,
          "x-enum": [
            {
              "value": "BUYER_FREE_RETURN_SHIPPING",
              "description": "The policy allows free return shipping for buyers"
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "merchandise_dispute_properties"
    },
    "response-external_case_properties.json": {
      "type": "object",
      "title": "External Case Properties",
      "description": "The third-party claims properties.",
      "properties": {
        "reference_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_-]+$",
          "description": "The external claim ID.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "external_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The partner-supported external type.",
          "x-enum": [
            {
              "value": "BANK_RETURN",
              "description": "The customer disputed the transaction at the issuing bank."
            },
            {
              "value": "DIRECT_DEBIT_REVERSAL",
              "description": "The customer requested to reverse the ELV transaction at the issuing bank."
            },
            {
              "value": "CREDIT_CARD_DISPUTE",
              "description": "The customer disputed the transaction with the credit card processor."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "recovery_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The type of recovery on the external dispute.",
          "x-enum": [
            {
              "value": "RECOVERED_FROM_SELLER",
              "description": "The dispute amount is debited from the merchant."
            },
            {
              "value": "RECOVERED_FROM_BUYER",
              "description": "The dispute amount is debited from the customer."
            },
            {
              "value": "NO_RECOVERY",
              "description": "The merchant or customer is not liable for the dispute."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "reversal_fee": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The fee charged to the customer for reversing the ELV transaction at the issuing bank.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "processor": {
          "description": "The details of the processor.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v4-schema-json-openapi-2.0-payment-processor.json"
        },
        "acquirer": {
          "description": "The details of the acquirer.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/common_components-v4-schema-json-openapi-2.0-payment-acquirer.json"
        },
        "card_brand": {
          "description": "The brand of the card.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/common_components-v4-schema-json-openapi-2.0-financial_instrument-card_brand.json"
        },
        "received_time": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "description": "The date and time when the external dispute was received, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "response_due_time": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "description": "The date and time by which the external dispute needs to be represented, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "contestations": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of contestations that have been generated by PayPal during the case lifecycle. The array will be sorted based on `create_time` in chronological order. The last item in the array would represent the latest contestation which should be patched when updating the status of the contestation.",
          "items": {
            "x-publicDocsSchemaName": "contestation",
            "$ref": "#/definitions/response-contestation.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "external_case_properties"
    },
    "common_components-v4-schema-json-openapi-2.0-payment-processor.json": {
      "type": "object",
      "title": "Processor",
      "description": "Details of the processor.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the processor.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "BNP_PARIBAS",
              "description": "Processor BNP Paribas."
            },
            {
              "value": "CHASE",
              "description": "Processor Chase Paymentech."
            },
            {
              "value": "NETGIRO",
              "description": "Processor Netgiro Systems. Later changed to DigitalRiver, currently called as Worldline."
            },
            {
              "value": "GE",
              "description": "Processor GE."
            },
            {
              "value": "IPG",
              "description": "Processor IPGPAY Online Payment Gateway Services."
            },
            {
              "value": "OMNIPAY",
              "description": "Processor Omnipay Payment gateway."
            },
            {
              "value": "PAY_SECURE",
              "description": "Processor PaySecure Payment gateway."
            },
            {
              "value": "AMEX",
              "description": "Processor American Express."
            },
            {
              "value": "DISCOVER",
              "description": "Processor Discover financial services."
            },
            {
              "value": "FISRT_DATA_MERCHANT_SERVICES",
              "description": "Processor First Data Merchant Services."
            },
            {
              "value": "CPS",
              "description": "Processor CPS Pinless Debit."
            },
            {
              "value": "STAR",
              "description": "Processor Star Network."
            },
            {
              "value": "CHINA_UNION_PAY",
              "description": "Processor China Union Pay."
            },
            {
              "value": "SMCC",
              "description": "Processor Sumitomo Mitsui Card Company."
            },
            {
              "value": "ASSECO",
              "description": "Processor Asseco Group."
            },
            {
              "value": "WORLDPAY",
              "description": "Processor Worldpay payment gateway."
            },
            {
              "value": "REDE",
              "description": "Processor Rede SA payment processing."
            },
            {
              "value": "SYNCHRONY",
              "description": "Processor Synchrony Financial services."
            },
            {
              "value": "VISA",
              "description": "Processor Visa."
            },
            {
              "value": "ALTPAY",
              "description": "Processor AltPay."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "processor"
    },
    "common_components-v4-schema-json-openapi-2.0-payment-acquirer.json": {
      "type": "object",
      "title": "Acquirer",
      "description": "Details of the acquirer.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the acquirer.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "AMEX",
              "description": "Acquirer American Express."
            },
            {
              "value": "BANCOMER",
              "description": "Acquirer BBVA Bancomer."
            },
            {
              "value": "BANORTE",
              "description": "Acquirer El Banco Fuerte de México."
            },
            {
              "value": "CIELO",
              "description": "Acquirer Cielo SA."
            },
            {
              "value": "HSBC",
              "description": "Acquirer Hongkong and Shanghai Banking Corporation."
            },
            {
              "value": "JAPAN_CREDIT_BUREAU",
              "description": "Acquirer Japan Credit Bureau."
            },
            {
              "value": "PHNOM_PENH_COMMERCIAL",
              "description": "Acquirer Phnom Penh Commercial Bank."
            },
            {
              "value": "ROYAL_BANK_OF_SCOTLAND",
              "description": "Acquirer Royal Bank Of Scotland."
            },
            {
              "value": "REDE_CARD",
              "description": "Acquirer Rede Card."
            },
            {
              "value": "BANCORP",
              "description": "Acquirer Bancorp."
            },
            {
              "value": "WELLS_FARGO",
              "description": "Acquirer Wells Fargo."
            },
            {
              "value": "WESTPAC",
              "description": "Acquirer Westpac."
            },
            {
              "value": "TURKISH_ECONOMY_BANK",
              "description": "Acquirer Türk Ekonomi Bankası(Turkish Economy Bank)."
            },
            {
              "value": "VTB24",
              "description": "Acquirer VTB Bank Russia."
            },
            {
              "value": "PULSE",
              "description": "Acquirer Pulse Payments Network."
            },
            {
              "value": "ACCEL",
              "description": "Acquirer Accel Interbank Network."
            },
            {
              "value": "SMCC",
              "description": "Acquirer Sumitomo Mitsui Card Company."
            },
            {
              "value": "ICICI",
              "description": "Acquirer Industrial Credit and Investment Corporation of India Bank."
            },
            {
              "value": "IDFC",
              "description": "Acquirer Infrastructure Development Finance Company Bank."
            },
            {
              "value": "GETNET",
              "description": "Acquirer Getnet - internet banking Santender."
            },
            {
              "value": "MERCADO_LIBRE",
              "description": "Acquirer Mercado Libre."
            },
            {
              "value": "RATEPAY",
              "description": "Acquirer Ratepay."
            }
          ]
        },
        "country_code": {
          "description": "The country code for the country where the acquirer is located.",
          "$ref": "#/definitions/common_components-v4-schema-json-openapi-2.0-country_code.json"
        }
      },
      "x-publicDocsSchemaName": "acquirer"
    },
    "common_components-v4-schema-json-openapi-2.0-country_code.json": {
      "type": "string",
      "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
      "format": "ppaas_common_country_code_v2",
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^([A-Z]{2}|C2)$",
      "properties": {}
    },
    "common_components-v4-schema-json-openapi-2.0-financial_instrument-card_brand.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The card brand.",
      "x-enum": [
        {
          "value": "AMEX",
          "description": "Card Brand Amex."
        },
        {
          "value": "CB_NATIONALE",
          "description": "Card Brand CB_NATIONALE."
        },
        {
          "value": "CETELEM",
          "description": "Card Brand CETELEM."
        },
        {
          "value": "COFIDIS",
          "description": "Card Brand COFIDIS."
        },
        {
          "value": "COFINOGA",
          "description": "Card Brand COFINOGA."
        },
        {
          "value": "CHINA_UNION_PAY",
          "description": "Card Brand CHINA_UNION_PAY."
        },
        {
          "value": "DELTA",
          "description": "Card Brand DELTA."
        },
        {
          "value": "DISCOVER",
          "description": "Card Brand DISCOVER."
        },
        {
          "value": "ELECTRON",
          "description": "Card Brand ELECTRON."
        },
        {
          "value": "ELO",
          "description": "Card Brand ELO."
        },
        {
          "value": "HIPER",
          "description": "Card Brand HIPER."
        },
        {
          "value": "HIPERCARD",
          "description": "Card Brand HIPERCARD."
        },
        {
          "value": "JCB",
          "description": "Card Brand JCB."
        },
        {
          "value": "MAESTRO",
          "description": "Card Brand MAESTRO."
        },
        {
          "value": "MASTER_CARD",
          "description": "Card Brand MASTER_CARD."
        },
        {
          "value": "SOLO",
          "description": "Card Brand SOLO."
        },
        {
          "value": "STAR",
          "description": "Card Brand STAR."
        },
        {
          "value": "SWITCH",
          "description": "Card Brand SWITCH."
        },
        {
          "value": "VISA",
          "description": "Card Brand VISA."
        },
        {
          "value": "GE",
          "description": "Card Brand GE."
        },
        {
          "value": "RUPAY",
          "description": "Card Brand RUPAY."
        },
        {
          "value": "SYNCHRONY",
          "description": "Card Brand SYNCHRONY."
        },
        {
          "value": "DINERS",
          "description": "Card Brand DINERS."
        }
      ],
      "properties": {}
    },
    "response-contestation.json": {
      "type": "object",
      "title": "Contestation",
      "description": "The contestation generated by PayPal and shared with the processor.",
      "properties": {
        "documents": {
          "readOnly": true,
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of contestation documents.",
          "items": {
            "x-publicDocsSchemaName": "contestation_document",
            "$ref": "#/definitions/response-contestation_document.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "description": "The status of the contestation.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/response-contestation_status.json"
        },
        "create_time": {
          "readOnly": true,
          "description": "The date and time at which the contestation was generated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        },
        "update_time": {
          "readOnly": true,
          "description": "The date and time at which the contestation was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "x-publicDocsSchemaName": "contestation"
    },
    "response-contestation_document.json": {
      "type": "object",
      "title": "Contestation Document",
      "description": "A document that supports the contestation.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "description": "The id which uniquely identifies a document.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[A-Za-z0-9-_,\\s]+[.]{1}[A-Za-z]+$",
          "description": "The contestation document name.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "url": {
          "readOnly": true,
          "type": "string",
          "format": "uri",
          "description": "The contestation document URI.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "source": {
          "readOnly": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "[A-Za-z0-9_]",
          "description": "The source from which the document was generated or submitted.",
          "x-enum": [
            {
              "value": "PAYPAL",
              "description": "The document is generated by `PayPal` as part of the contestation."
            },
            {
              "value": "SELLER",
              "description": "The document is submitted by `SELLER` as evidence and is considered by PayPal for contestation."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "contestation_document"
    },
    "response-contestation_status.json": {
      "type": "string",
      "title": "Contestation status",
      "description": "The status of the contestation.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "readOnly": true,
      "x-enum": [
        {
          "value": "CONTESTED",
          "description": "The contestation has been generated and shared with the processor. The processor must update the status with `ACCEPTED` or `DENIED` after processing the contestation."
        },
        {
          "value": "ACCEPTED",
          "description": "The processor has accepted the contestation."
        },
        {
          "value": "DENIED",
          "description": "The processor has rejected the contestation."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "contestation_status",
      "properties": {}
    },
    "response-remittance_dispute_properties.json": {
      "type": "object",
      "title": "Remittance Dispute Properties",
      "description": "The customer-entered issue details for a remittance dispute.",
      "properties": {
        "correct_recipient_email": {
          "description": "The correct email address of the recipient.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-email_address.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "expected_exchange_rate": {
          "type": "string",
          "pattern": "^[0-9]+(\\.[0-9]+)?$",
          "minLength": 1,
          "maxLength": 32,
          "description": "The expected exchange rate for the remittance.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "expected_fee_amount": {
          "description": "The expected fee amount for the remittance including tax.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "preferred_resolution": {
          "$ref": "#/definitions/response-preferred_remittance_resolution.json"
        },
        "issue_type": {
          "$ref": "#/definitions/response-remittance_issue_type.json"
        }
      },
      "required": [
        "issue_type"
      ],
      "x-publicDocsSchemaName": "remittance_dispute_properties"
    },
    "response-preferred_remittance_resolution.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The customer preferred remittance resolution.",
      "default": "REFUND",
      "x-enum": [
        {
          "value": "REFUND",
          "description": "Refund is preferred by the customer."
        },
        {
          "value": "RETRY_REMITTANCE",
          "description": "The remittance should be retried as the preferred resolution."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "preferred_remittance_resolution",
      "properties": {}
    },
    "response-remittance_issue_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The remittance issue type.",
      "x-enum": [
        {
          "value": "INCORRECT_AMOUNT_SENT",
          "description": "The remittance amount sent is incorrect."
        },
        {
          "value": "INCORRECT_AMOUNT_RECEIVED",
          "description": "The remittance amount received is incorrect."
        },
        {
          "value": "INCORRECT_EXCHANGE_RATE",
          "description": "The exchange rate applied on the remittance is incorrect."
        },
        {
          "value": "INCORRECT_TAX_AND_FEES",
          "description": "The remittance fees is incorrect."
        },
        {
          "value": "FUNDS_RECEIVED_LATE",
          "description": "The remittance amount received late."
        },
        {
          "value": "DUPLICATE_PAYMENT",
          "description": "The remittance transaction was done twice."
        },
        {
          "value": "REMITTANCE_CANCELLED_CREDIT_NOT_PROCESSED",
          "description": "Amount is not credited after remittance cancellation."
        },
        {
          "value": "FUNDS_NOT_RECEIVED",
          "description": "The remittance amount is not received."
        },
        {
          "value": "MONEY_REMITTED_TO_WRONG_RECIPIENT",
          "description": "The remittance recipient is incorrect."
        },
        {
          "value": "MISSING_TRANSACTION_DETAILS",
          "description": "Transaction details is missing for the remittance."
        },
        {
          "value": "MISSING_TRANSACTION_RECEIPT",
          "description": "Transaction receipt is missing for the remittance."
        },
        {
          "value": "SENDER_ERROR",
          "description": "The issue in remittance is due to an error from sender."
        },
        {
          "value": "OTHER",
          "description": "Other remittance issues."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "remittance_issue_type",
      "properties": {}
    },
    "response-evidence.json": {
      "type": "object",
      "title": "Evidence",
      "description": "A merchant- or customer-submitted evidence document. evidence_info is expected for PROOF_OF_FULFILLMENT,PROOF_OF_REFUND and PROOF_OF_RETURN evidence types. documents and notes can be given for rest of the evidence types.",
      "properties": {
        "evidence_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The evidence type.",
          "x-enum": [
            {
              "value": "PROOF_OF_FULFILLMENT",
              "description": "Proof of fulfillment should be a copy of the actual shipping label on the package that shows the destination address and the shipping company's stamp to verify the shipment date."
            },
            {
              "value": "PROOF_OF_REFUND",
              "description": "Proof of refund issued to the buyer"
            },
            {
              "value": "PROOF_OF_DELIVERY_SIGNATURE",
              "description": "Proof of delivery signature."
            },
            {
              "value": "PROOF_OF_RECEIPT_COPY",
              "description": "Copy of original receipt or invoice."
            },
            {
              "value": "RETURN_POLICY",
              "description": "Copy of terms and conditions,contract or store return policy"
            },
            {
              "value": "BILLING_AGREEMENT",
              "description": "Copy of billing agreement."
            },
            {
              "value": "PROOF_OF_RESHIPMENT",
              "description": "Proof of reshipment should be a copy of the actual shipping label on the package that shows the destination address and the shipping company's stamp to verify the reshipment date. "
            },
            {
              "value": "ITEM_DESCRIPTION",
              "description": "A copy of the original description of the item or service"
            },
            {
              "value": "POLICE_REPORT",
              "description": "Copy of the police report filed."
            },
            {
              "value": "AFFIDAVIT",
              "description": "More information has to be provided about the claim using the affidavit."
            },
            {
              "value": "PAID_WITH_OTHER_METHOD",
              "description": "Document showing item/service was paid by another payment method."
            },
            {
              "value": "COPY_OF_CONTRACT",
              "description": "Copy of contract if applicable."
            },
            {
              "value": "TERMINAL_ATM_RECEIPT",
              "description": "Copy of terminal/ATM receipt."
            },
            {
              "value": "PRICE_DIFFERENCE_REASON",
              "description": "Explanation of what the price difference is related to (increased tip amount, shipping charges, taxes, etc)."
            },
            {
              "value": "SOURCE_CONVERSION_RATE",
              "description": "Source of expected conversion rate or fee."
            },
            {
              "value": "BANK_STATEMENT",
              "description": "Bank/Credit statement showing withdrawal transaction."
            },
            {
              "value": "CREDIT_DUE_REASON",
              "description": "The credit due reason."
            },
            {
              "value": "REQUEST_CREDIT_RECEIPT",
              "description": "The request credit receipt."
            },
            {
              "value": "PROOF_OF_RETURN",
              "description": "Proof of shipment or postage that shows you returned this item to your seller and should be a copy of the actual shipping label used."
            },
            {
              "value": "CREATE",
              "description": "Additional evidence information during case creation."
            },
            {
              "value": "CHANGE_REASON",
              "description": "The evidence related to the reason change."
            },
            {
              "value": "PROOF_OF_REFUND_OUTSIDE_PAYPAL",
              "description": "Document should show that the seller issued a refund outside Paypal."
            },
            {
              "value": "RECEIPT_OF_MERCHANDISE",
              "description": "Check with buyer if item Delivered (seller provided Proof of Shipping)"
            },
            {
              "value": "CUSTOMS_DOCUMENT",
              "description": "Document confirming that the item has been confiscated."
            },
            {
              "value": "CUSTOMS_FEE_RECEIPT",
              "description": "Custom fees receipt paid by the buyer"
            },
            {
              "value": "INFORMATION_ON_RESOLUTION",
              "description": "Any resolution reached with the seller should be communicated to PayPal."
            },
            {
              "value": "ADDITIONAL_INFORMATION_OF_ITEM",
              "description": "Any additional information of the item purchased."
            },
            {
              "value": "DETAILS_OF_PURCHASE",
              "description": "Specific details of a purchase made under a particular transaction has to be given."
            },
            {
              "value": "PROOF_OF_SIGNIFICANT_DIFFERENCE",
              "description": "More information required on how the item was damaged or was significantly different from the item advertised."
            },
            {
              "value": "PROOF_OF_SOFTWARE_OR_SERVICE_NOT_AS_DESCRIBED",
              "description": "Any screenshot or download/usage log showing that the software or service was unavailable or non-functional."
            },
            {
              "value": "PROOF_OF_CONFISCATION",
              "description": "Documentation from a third party or organization that evaluated this item that confirms they confiscated it."
            },
            {
              "value": "PROOF_OF_DAMAGE",
              "description": "Documentation supporting the claim that the item is damaged."
            },
            {
              "value": "COPY_OF_LAW_ENFORCEMENT_AGENCY_REPORT",
              "description": "Report filed with a law enforcement agency or government organization. Examples of such agencies are -  Internet Crime Complaint Center (www.ic3.gov), state Consumer Protection office, state police or a Federal law enforcement agency such as the FBI or Postal Inspection Service."
            },
            {
              "value": "ADDITIONAL_PROOF_OF_SHIPMENT",
              "description": "Additional proof of shipment  such as a packing list, detailed invoice, or shipping manifest to confirm that all items have been shipped."
            },
            {
              "value": "PROOF_OF_DENIAL_BY_CARRIER",
              "description": "Documentation from the carrier should confirm the reason why they refuse to ship the item in question and the extent of the original damage."
            },
            {
              "value": "THIRDPARTY_PROOF_FOR_DAMAGE_OR_SIGNIFICANT_DIFFERENCE",
              "description": "Proof should be provided by an unbiased third-party, such as a dealer, appraiser or another individual or organisation that's qualified in the area of the item in question (other than yourself), and detail the extent of the damage or clearly explain how the item received significantly differs from the item advertised."
            },
            {
              "value": "VALID_SUPPORTING_DOCUMENT",
              "description": "The document you have provided doesn't support your claim that the item is Significantly Not as Described. Please provide a document to clearly show how the item received significantly differs from the item advertised."
            },
            {
              "value": "LEGIBLE_SUPPORTING_DOCUMENT",
              "description": "The document you have provided is illegible, unclear, or too dark to read.  Please provide a document that is legible and clear to read."
            },
            {
              "value": "RETURN_TRACKING_INFORMATION",
              "description": "Online tracking information for remaining items that have to be shipped to the seller."
            },
            {
              "value": "DELIVERY_RECEIPT",
              "description": "Confirmation that the item has been received."
            },
            {
              "value": "PROOF_OF_INSTORE_RECEIPT",
              "description": "In-store receipt or online verification should clearly show that the buyer picked up the item."
            },
            {
              "value": "ADDITIONAL_TRACKING_INFORMATION",
              "description": "Tracking information should include the carrier name,  online tracking number and the website where the shipment can be tracked."
            },
            {
              "value": "PROOF_OF_SHIPMENT_POSTAGE",
              "description": "Proof of shipment or postage should be a copy of the actual shipping label on the package that shows the destination address and the carrier's stamp to verify the shipment date."
            },
            {
              "value": "ONLINE_TRACKING_INFORMATION",
              "description": "Online tracking information to confirm delivery of item."
            },
            {
              "value": "PROOF_OF_INSTORE_REFUND",
              "description": "Proof should be an in-store refund receipt or company documentation that clearly shows a completed refund for the transaction."
            },
            {
              "value": "PROOF_FOR_SOFTWARE_OR_SERVICE_DELIVERED",
              "description": "Proof should be compelling evidence to prove that the item or service was as described  and was delivered to the buyer."
            },
            {
              "value": "RETURN_ADDRESS_FOR_SHIPPING",
              "description": "Return address is required for the buyer to ship  the merchandise back to the seller."
            },
            {
              "value": "COPY_OF_THE_EPARCEL_MANIFEST",
              "description": "To validate a claim,  a copy of the eparcel manifest showing the buyer's address from Australia Post is required. "
            },
            {
              "value": "COPY_OF_SHIPPING_MANIFEST",
              "description": "The shipping manifest must show the buyer's address and can be obtained from the carrier."
            },
            {
              "value": "APPEAL_AFFIDAVIT",
              "description": "Appeal affidavit is needed to make an appeal for any case outcome."
            },
            {
              "value": "RECEIPT_OF_REPLACEMENT",
              "description": "Check with buyer if the replacement of the item sent by the seller was received"
            },
            {
              "value": "COPY_OF_DRIVERS_LICENSE",
              "description": "Need Copy of Drivers license."
            },
            {
              "value": "ACCOUNT_CHANGE_INFORMATION",
              "description": "Additional Details about how account was accessed/what was changed."
            },
            {
              "value": "DELIVERY_ADDRESS",
              "description": "Address where item was supposed to be delivered."
            },
            {
              "value": "CONFIRMATION_OF_RESOLUTION",
              "description": "Confirmation that item was received and issue resolved."
            },
            {
              "value": "MERCHANT_RESPONSE",
              "description": "Copy of merchant's response when the resolution was attempted."
            },
            {
              "value": "PERMISSION_DESCRIPTION",
              "description": "A Detailed description about the account or card level permission given to another person."
            },
            {
              "value": "STATUS_OF_MERCHANDISE",
              "description": "Details of the merchandise's current location."
            },
            {
              "value": "LOST_CARD_DETAILS",
              "description": "Details of where and when the card was lost/stolen?."
            },
            {
              "value": "LAST_VALID_TRANSACTION_DETAILS",
              "description": "Details of the last valid transaction made on the card."
            },
            {
              "value": "ADDITIONAL_PROOF_OF_RETURN",
              "description": "Document to confirm that the item to be returned to the seller has been shipped."
            },
            {
              "value": "DECLARATION",
              "description": "Signed declaration about the information provided."
            },
            {
              "value": "PROOF_OF_MISSING_ITEMS",
              "description": "Image of open box with returned items and shipping label clearly visible."
            },
            {
              "value": "PROOF_OF_EMPTY_PACKAGE_OR_DIFFERENT_ITEM",
              "description": "Image of empty box or returned items that are different from what were expected and shipping label clearly visible."
            },
            {
              "value": "PROOF_OF_ITEM_NOT_RECEIVED",
              "description": "Any proof about the non receipt of the item, such as screenshot of tracking info."
            },
            {
              "value": "OTHER",
              "description": "Other."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "evidence_info": {
          "$ref": "#/definitions/response-evidence_info.json",
          "x-publicDocsSchemaName": "evidence_info"
        },
        "documents": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of evidence documents.",
          "items": {
            "$ref": "#/definitions/response-document.json",
            "x-publicDocsSchemaName": "document"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "Intrinsic"
          }
        },
        "notes": {
          "type": "string",
          "description": "Any evidence-related notes.",
          "minLength": 1,
          "maxLength": 2000,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "source": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+$",
          "readOnly": true,
          "description": "The source of the evidence.",
          "x-enum": [
            {
              "value": "REQUESTED_FROM_BUYER",
              "description": "PayPal requested evidence from the customer."
            },
            {
              "value": "REQUESTED_FROM_SELLER",
              "description": "PayPal requested evidence from the merchant."
            },
            {
              "value": "SUBMITTED_BY_BUYER",
              "description": "Evidence was submitted by the customer."
            },
            {
              "value": "SUBMITTED_BY_SELLER",
              "description": "Evidence was submitted by the merchant."
            },
            {
              "value": "SUBMITTED_BY_PARTNER",
              "description": "Evidence was submitted by the partner."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "date": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the evidence was received, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "item_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "item_type": {
          "readOnly": true,
          "description": "The item type for which the evidence is requested or submitted.",
          "$ref": "#/definitions/response-item_type.json"
        },
        "action_info": {
          "readOnly": true,
          "description": "The action details for the information. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory for the corresponding action.",
          "x-publicDocsSchemaName": "action_info",
          "$ref": "#/definitions/response-action_info.json"
        },
        "dispute_life_cycle_stage": {
          "readOnly": true,
          "description": "The dispute life cycle stage for the evidence.",
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json"
        }
      },
      "x-publicDocsSchemaName": "evidence"
    },
    "response-evidence_info.json": {
      "type": "object",
      "title": "Evidence Information",
      "description": "The evidence-related information.",
      "properties": {
        "tracking_info": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of relevant tracking information for the transaction involved in this dispute.",
          "items": {
            "$ref": "#/definitions/response-tracking_info.json",
            "x-publicDocsSchemaName": "response_tracking_info",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "refund_ids": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of refund IDs for the transaction involved in this dispute.",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The ID of the refunded transaction.",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-publicDocsSchemaName": "refund_id"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "evidence_info"
    },
    "response-tracking_info.json": {
      "type": "object",
      "title": "Tracking Information",
      "description": "The tracking information.",
      "properties": {
        "carrier_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The name of the shipment carrier for the transaction for this dispute.",
          "x-enum": [
            {
              "value": "UPS",
              "description": "<a href=\"https://www.ups.com/us/en/global.page\">United Parcel Service of America, Inc.</a>."
            },
            {
              "value": "USPS",
              "description": "<a href=\"https://www.usps.com/\">United States Postal Service (USPS)</a>."
            },
            {
              "value": "FEDEX",
              "description": "Federal Express."
            },
            {
              "value": "AIRBORNE_EXPRESS",
              "description": "Airborne Express."
            },
            {
              "value": "DHL",
              "description": "DHL Express."
            },
            {
              "value": "AIRSURE",
              "description": "Airsure."
            },
            {
              "value": "ROYAL_MAIL",
              "description": "Royal Mail."
            },
            {
              "value": "PARCELFORCE",
              "description": "Parcel Force."
            },
            {
              "value": "SWIFTAIR",
              "description": "Swift Air."
            },
            {
              "value": "OTHER",
              "description": "Other."
            },
            {
              "value": "UK_PARCELFORCE",
              "description": "Parcelforce UK."
            },
            {
              "value": "UK_ROYALMAIL_SPECIAL",
              "description": "Royal Mail Special Delivery UK."
            },
            {
              "value": "UK_ROYALMAIL_RECORDED",
              "description": "Royal Mail Recorded UK."
            },
            {
              "value": "UK_ROYALMAIL_INT_SIGNED",
              "description": "Royal Mail International Signed."
            },
            {
              "value": "UK_ROYALMAIL_AIRSURE",
              "description": "Royal Mail AirSure UK."
            },
            {
              "value": "UK_UPS",
              "description": "United Parcel Service UK."
            },
            {
              "value": "UK_FEDEX",
              "description": "Federal Express UK."
            },
            {
              "value": "UK_AIRBORNE_EXPRESS",
              "description": "Airborne Express UK."
            },
            {
              "value": "UK_DHL",
              "description": "DHL UK."
            },
            {
              "value": "UK_OTHER",
              "description": "Other - UK."
            },
            {
              "value": "UK_CANNOT_PROV_TRACK",
              "description": "Cannot provide tracking UK."
            },
            {
              "value": "UK_CANNOT_PROVIDE_TRACKING",
              "description": "Cannot provide tracking - UK."
            },
            {
              "value": "CA_CANADA_POST",
              "description": "<a href=\"https://www.canadapost.ca/cpc/en/home.page\">Canada Post</a>."
            },
            {
              "value": "CA_PUROLATOR",
              "description": "Purolator Canada."
            },
            {
              "value": "CA_CANPAR",
              "description": "Canpar Courier Canada."
            },
            {
              "value": "CA_LOOMIS",
              "description": "Loomis Express Canada."
            },
            {
              "value": "CA_TNT",
              "description": "TNT Express Canada."
            },
            {
              "value": "TNT",
              "description": "TNT Global."
            },
            {
              "value": "CA_OTHER",
              "description": "Other - Canada."
            },
            {
              "value": "CA_CANNOT_PROV_TRACK",
              "description": "Cannot provide tracking Canada."
            },
            {
              "value": "DE_DP_DHL_WITHIN_EUROPE",
              "description": "DHL Parcel Europe."
            },
            {
              "value": "DE_DP_DHL_T_AND_T_EXPRESS",
              "description": "DHL T and T Express."
            },
            {
              "value": "DE_DHL_DP_INTL_SHIPMENTS",
              "description": "DHL DP International shipments."
            },
            {
              "value": "CA_CANNOT_PROVIDE_TRACKING",
              "description": "Cannot provide tracking - Canada."
            },
            {
              "value": "DE_GLS",
              "description": "<a href=\"https://gls-group.eu/\">General Logistics Systems (GLS) Germany</a>."
            },
            {
              "value": " DE_DPD_DELISTACK",
              "description": "DPD Tracking Germany."
            },
            {
              "value": "DE_HERMES",
              "description": "Hermes Germany."
            },
            {
              "value": "DE_UPS",
              "description": "United Parcel Service Germany."
            },
            {
              "value": "DE_FEDEX",
              "description": "Federal Express Germany."
            },
            {
              "value": "DE_TNT",
              "description": "TNT Germany."
            },
            {
              "value": "DE_OTHER",
              "description": "Other - Germany."
            },
            {
              "value": "FR_CHRONOPOST",
              "description": "Chronopost France."
            },
            {
              "value": "FR_COLIPOSTE",
              "description": "Coliposte France."
            },
            {
              "value": "FR_DHL",
              "description": "DHL France."
            },
            {
              "value": "FR_UPS",
              "description": "United Parcel Service France."
            },
            {
              "value": "FR_FEDEX",
              "description": "Federal Express France."
            },
            {
              "value": "FR_TNT",
              "description": "TNT France."
            },
            {
              "value": "FR_GLS",
              "description": "<a href=\"https://gls-group.eu/\">General Logistics Systems (GLS) France</a>."
            },
            {
              "value": "FR_OTHER",
              "description": "Other - France."
            },
            {
              "value": "IT_POSTE_ITALIA",
              "description": "Poste Italia."
            },
            {
              "value": "IT_DHL",
              "description": "DHL Italy."
            },
            {
              "value": "IT_UPS",
              "description": "United Parcel Service Italy."
            },
            {
              "value": "IT_FEDEX",
              "description": "Federal Express Italy."
            },
            {
              "value": "IT_TNT",
              "description": "<a href=\"https://www.tnt.it/\">TNT Italy</a>."
            },
            {
              "value": "IT_GLS",
              "description": "<a href=\"https://gls-group.eu/\">General Logistics Systems (GLS) Italy</a>."
            },
            {
              "value": "IT_OTHER",
              "description": "Other Italy."
            },
            {
              "value": "AU_AUSTRALIA_POST_EP_PLAT",
              "description": "Australia Post EP Plat."
            },
            {
              "value": "AU_AUSTRALIA_POST_EPARCEL",
              "description": "Australia Post Eparcel."
            },
            {
              "value": "AU_AUSTRALIA_POST_EMS",
              "description": "Australia Post EMS."
            },
            {
              "value": "AU_DHL",
              "description": "DHL Australia."
            },
            {
              "value": "AU_STAR_TRACK_EXPRESS",
              "description": "StarTrack Express Australia."
            },
            {
              "value": "AU_UPS",
              "description": "United Parcel Service Australia."
            },
            {
              "value": "AU_FEDEX",
              "description": "Federal Express Australia."
            },
            {
              "value": "AU_TNT",
              "description": "TNT Australia."
            },
            {
              "value": "AU_TOLL_IPEC",
              "description": "Toll IPEC Australia."
            },
            {
              "value": "AU_OTHER",
              "description": "Other - Australia."
            },
            {
              "value": "FR_SUIVI",
              "description": "Suivi FedEx France."
            },
            {
              "value": "IT_EBOOST_SDA",
              "description": "Poste Italiane SDA."
            },
            {
              "value": "ES_CORREOS_DE_ESPANA",
              "description": "Correos de Espana."
            },
            {
              "value": "ES_DHL",
              "description": "DHL Spain."
            },
            {
              "value": "ES_UPS",
              "description": "United Parcel Service Spain."
            },
            {
              "value": "ES_FEDEX",
              "description": "Federal Express Spain."
            },
            {
              "value": "ES_TNT",
              "description": "TNT Spain."
            },
            {
              "value": "ES_OTHER",
              "description": "Other - Spain."
            },
            {
              "value": "AT_AUSTRIAN_POST_EMS",
              "description": "EMS Express Mail Service Austria."
            },
            {
              "value": "AT_AUSTRIAN_POST_PPRIME",
              "description": "Austrian Post Prime."
            },
            {
              "value": "BE_CHRONOPOST",
              "description": "Chronopost Belgium."
            },
            {
              "value": "BE_TAXIPOST",
              "description": "Taxi Post."
            },
            {
              "value": "CH_SWISS_POST_EXPRES",
              "description": "Swiss Post Express."
            },
            {
              "value": "CH_SWISS_POST_PRIORITY",
              "description": "Swiss Post Priority."
            },
            {
              "value": "CN_CHINA_POST",
              "description": "China Post."
            },
            {
              "value": "HK_HONGKONG_POST",
              "description": "Hong Kong Post."
            },
            {
              "value": "IE_AN_POST_SDS_EMS",
              "description": "Post SDS EMS Express Mail Service Ireland."
            },
            {
              "value": "IE_AN_POST_SDS_PRIORITY",
              "description": "Post SDS Priority Ireland."
            },
            {
              "value": "IE_AN_POST_REGISTERED",
              "description": "Post Registered Ireland."
            },
            {
              "value": "IE_AN_POST_SWIFTPOST",
              "description": "Swift Post Ireland."
            },
            {
              "value": "IN_INDIAPOST",
              "description": "India Post."
            },
            {
              "value": "JP_JAPANPOST",
              "description": "Japan Post."
            },
            {
              "value": "KR_KOREA_POST",
              "description": "Korea Post."
            },
            {
              "value": "NL_TPG",
              "description": "TPG Post Netherlands."
            },
            {
              "value": "SG_SINGPOST",
              "description": "SingPost Singapore."
            },
            {
              "value": "TW_CHUNGHWA_POST",
              "description": "Chunghwa POST Taiwan."
            },
            {
              "value": "CN_CHINA_POST_EMS",
              "description": "China Post EMS Express Mail Service."
            },
            {
              "value": "CN_FEDEX",
              "description": "Federal Express China."
            },
            {
              "value": "CN_TNT",
              "description": "TNT China."
            },
            {
              "value": "CN_UPS",
              "description": "United Parcel Service China."
            },
            {
              "value": "CN_OTHER",
              "description": "Other - China."
            },
            {
              "value": "NL_TNT",
              "description": "TNT Netherlands."
            },
            {
              "value": "NL_DHL",
              "description": "DHL Netherlands."
            },
            {
              "value": "NL_UPS",
              "description": "United Parcel Service Netherlands."
            },
            {
              "value": "NL_FEDEX",
              "description": "Federal Express Netherlands."
            },
            {
              "value": "NL_KIALA",
              "description": "KIALA Netherlands."
            },
            {
              "value": "BE_KIALA",
              "description": "Kiala Point Belgium."
            },
            {
              "value": "PL_POCZTA_POLSKA",
              "description": "Poczta Polska."
            },
            {
              "value": "PL_POCZTEX",
              "description": "Pocztex."
            },
            {
              "value": "PL_GLS",
              "description": "General Logistics Systems Poland."
            },
            {
              "value": "PL_MASTERLINK",
              "description": "Masterlink Poland."
            },
            {
              "value": "PL_TNT",
              "description": "TNT Express Poland."
            },
            {
              "value": "PL_DHL",
              "description": "DHL Portugal."
            },
            {
              "value": "PL_UPS",
              "description": "United Parcel Service Poland."
            },
            {
              "value": "PL_FEDEX",
              "description": "Federal Express Poland."
            },
            {
              "value": "JP_SAGAWA_KYUU_BIN",
              "description": "Sagawa Kyuu Bin Japan."
            },
            {
              "value": "JP_NITTSU_PELICAN_BIN",
              "description": "Nittsu Pelican Bin Japan."
            },
            {
              "value": "JP_KURO_NEKO_YAMATO_UNYUU",
              "description": "Kuro Neko Yamato Unyuu Japan."
            },
            {
              "value": "JP_TNT",
              "description": "TNT Japan."
            },
            {
              "value": "JP_DHL",
              "description": "DHL Japan."
            },
            {
              "value": "JP_UPS",
              "description": "United Parcel Service Japan."
            },
            {
              "value": "JP_FEDEX",
              "description": "Federal Express Japan."
            },
            {
              "value": "NL_PICKUP",
              "description": "Pickup Netherlands."
            },
            {
              "value": "NL_INTANGIBLE",
              "description": "Intangible Netherlands."
            },
            {
              "value": "NL_ABC_MAIL",
              "description": "ABC Mail Netherlands."
            },
            {
              "value": "HK_FOUR_PX_EXPRESS",
              "description": "4PX Express Hong Kong."
            },
            {
              "value": "HK_FLYT_EXPRESS",
              "description": "Flyt Express Hong Kong."
            },
            {
              "value": "US_ASCENDIA",
              "description": "Ascendia US."
            },
            {
              "value": "US_ENSENDA",
              "description": "Ensenda US."
            },
            {
              "value": "US_GLOBEGISTICS",
              "description": "Globeistics US."
            },
            {
              "value": "US_ONTRAC",
              "description": "Ontrac US."
            },
            {
              "value": "RRDONNELLEY",
              "description": "RR Donnelley."
            },
            {
              "value": "ASENDIA_UK",
              "description": "Asendia UK."
            },
            {
              "value": "UK_COLLECTPLUS",
              "description": "<a href=\"https://www.collectplus.co.uk/\">CollectPlus UK</a>."
            },
            {
              "value": "UK_DPD",
              "description": "DPD UK."
            },
            {
              "value": "UK_HERMESWORLD",
              "description": "Hermesworld UK."
            },
            {
              "value": "UK_INTERLINK_EXPRESS",
              "description": "Interlink Express UK."
            },
            {
              "value": "UK_TNT",
              "description": "TNT UK."
            },
            {
              "value": "UK_UK_MAIL",
              "description": "<a href=\"https://www.ukmail.com/\">UK Mail</a>."
            },
            {
              "value": "UK_YODEL",
              "description": "<a href=\"https://www.yodel.co.uk/\">Yodel UK</a>."
            },
            {
              "value": "BUYLOGIC",
              "description": "<a href=\"https://www.aftership.com/couriers/buylogic\">Buylogic</a>."
            },
            {
              "value": "CN_EMS",
              "description": "EMS China."
            },
            {
              "value": "CHINA_POST",
              "description": "China Post."
            },
            {
              "value": "CNEXPS",
              "description": "CN Express China."
            },
            {
              "value": "CPACKET",
              "description": "Cpacket."
            },
            {
              "value": "CUCKOOEXPRESS",
              "description": "Cuckoo Express."
            },
            {
              "value": "CN_EC",
              "description": "EC China."
            },
            {
              "value": "CN_EMPS",
              "description": "EMPS China."
            },
            {
              "value": "DE_ASENDIA",
              "description": "Asendia Germany."
            },
            {
              "value": "UK_DELTEC",
              "description": "Deltec UK."
            },
            {
              "value": "DE_DEUTSCHE",
              "description": "Deutsche Germany."
            },
            {
              "value": "DE_DPD",
              "description": "DPD Germany."
            },
            {
              "value": "RABEN_GROUP",
              "description": "Raben Group."
            },
            {
              "value": "GLOBAL_TNT",
              "description": "TNT Global."
            },
            {
              "value": "ADSONE",
              "description": "<a href=\"https://www.adsone.com.au/\">ADSone Cumulus</a>."
            },
            {
              "value": "AU_AU_POST",
              "description": "<a href=\"https://auspost.com.au/\">Australian Postal Corporation</a>."
            },
            {
              "value": "BONDSCOURIERS",
              "description": "Bonds Couriers."
            },
            {
              "value": "COURIERS_PLEASE",
              "description": "Couriers Please."
            },
            {
              "value": "DTDC_AU",
              "description": "DTDC Australia."
            },
            {
              "value": "AU_FASTWAY",
              "description": "Fastway Australia."
            },
            {
              "value": "HUNTER_EXPRESS",
              "description": "Hunter Express."
            },
            {
              "value": "SENDLE",
              "description": "Sendle."
            },
            {
              "value": "AUS_TOLL",
              "description": "Toll Australia."
            },
            {
              "value": "TOLL",
              "description": "<a href=\"https://www.tollgroup.com/\">Toll</a>."
            },
            {
              "value": "UBI_LOGISTICS",
              "description": "UBI Logistics."
            },
            {
              "value": "OMNIPARCEL",
              "description": "Omni Parcel."
            },
            {
              "value": "QUANTIUM",
              "description": "Quantium."
            },
            {
              "value": "CN_SF_EXPRESS",
              "description": "SF Express China."
            },
            {
              "value": "SEKOLOGISTICS",
              "description": "Seko Logistics."
            },
            {
              "value": "HK_TAQBIN",
              "description": "TA-Q-BIN Parcel Hong Kong."
            },
            {
              "value": "GB_APC",
              "description": "<a href=\"https://apc-overnight.com/\">APC Overnight UK</a>."
            },
            {
              "value": "CA_CANPAR_COURIER",
              "description": "Canpar Courier Canada."
            },
            {
              "value": "GLOBAL_ESTES",
              "description": "Estes Global."
            },
            {
              "value": "CA_GREYHOUND",
              "description": "Greyhound Canada."
            },
            {
              "value": "PUROLATOR",
              "description": "Purolator."
            },
            {
              "value": "US_RL",
              "description": "RL US."
            },
            {
              "value": "IT_BRT",
              "description": "<a href=\"https://www.brt.it/en/bartolini_services/italy_service.do\">BRT Corriere Espresso Italy</a>."
            },
            {
              "value": "DMM_NETWORK",
              "description": "DMM Network."
            },
            {
              "value": "IT_FERCAM",
              "description": "Fercam Italy."
            },
            {
              "value": "HERMES_IT",
              "description": "Hermes Italy."
            },
            {
              "value": "IT_POSTE_ITALIANE",
              "description": "Poste Italiane."
            },
            {
              "value": "IT_SDA",
              "description": "<a href=\"https://www.sda.it/SITO_SDA-INSIDEX-WEB/pages/Home_it/119\">SDA Express Courier</a>."
            },
            {
              "value": "IT_SGT",
              "description": "SGT Corriere Espresso Italy."
            },
            {
              "value": "GLOBAL_SKYNET",
              "description": "Skynet Global."
            },
            {
              "value": "FR_BERT",
              "description": "<a href=\"https://bert.fr/\">Bert France</a>."
            },
            {
              "value": "FR_COLIS",
              "description": "Colis France."
            },
            {
              "value": "FR_GEODIS",
              "description": "Geodis France."
            },
            {
              "value": "FR_LAPOSTE",
              "description": "Laposte France."
            },
            {
              "value": "FR_TELIWAY",
              "description": "Teliway France."
            },
            {
              "value": "DPD_POLAND",
              "description": "DPD Poland."
            },
            {
              "value": "INPOST_PACZKOMATY",
              "description": "InPost Paczkomaty."
            },
            {
              "value": "POL_POCZTA",
              "description": "Poczta Poland."
            },
            {
              "value": "POL_SIODEMKA",
              "description": "Siodemka Poland."
            },
            {
              "value": "ESP_CORREOS",
              "description": "<a href=\"https://www.correos.es/ss/Satellite/site/pagina-inicio/info\">Sociedad Estatal Correos y Telégrafos</a>."
            },
            {
              "value": "ES_CORREOS",
              "description": "<a href=\"https://www.correos.es/ss/Satellite/site/pagina-inicio/info\">Sociedad Estatal Correos y Telégrafos</a>."
            },
            {
              "value": "ESP_NACEX",
              "description": "<a href=\"https://www.nacex.es/cambiarIdioma.do?idioma=EN\">Nacex Spain</a>."
            },
            {
              "value": "ESP_ASM",
              "description": "<a href=\"https://www.parcelmonitor.com/track-spain/\">Parcel Monitor Spain</a>."
            },
            {
              "value": "ESP_REDUR",
              "description": "<a href=\"https://www.redur.es/\">Redur Spain</a>."
            },
            {
              "value": "CBL_LOGISTICA",
              "description": "<a href=\"https://www.cbl-logistica.com\">CBL Logística</a>."
            },
            {
              "value": "EKART",
              "description": "Ekart."
            },
            {
              "value": "IND_DELHIVERY",
              "description": "<a href=\"https://www.delhivery.com/\">Delhivery India</a>."
            },
            {
              "value": "IND_BLUEDART",
              "description": "<a href=\"https://www.bluedart.com/\">Blue Dart Express DHL</a>."
            },
            {
              "value": "IND_DTDC",
              "description": "DTDC India."
            },
            {
              "value": "IND_PROFESSIONAL_COURIERS",
              "description": "Professional Couriers India."
            },
            {
              "value": "IND_REDEXPRESS",
              "description": "Red Express India."
            },
            {
              "value": "IND_XPRESSBEES",
              "description": "XpressBees India."
            },
            {
              "value": "IND_DOTZOT",
              "description": "<a href=\"https://dotzot.in/\">DotZot India</a>."
            },
            {
              "value": "THA_KERRY",
              "description": "Kerry Thailand."
            },
            {
              "value": "SENDIT",
              "description": "SendIt."
            },
            {
              "value": "ACOMMERCE",
              "description": "<a href=\"https://www.acommerce.asia/\">aCommerce</a>."
            },
            {
              "value": "NINJAVAN_THAI",
              "description": "Ninjavan Thailand."
            },
            {
              "value": "NIM_EXPRESS",
              "description": "<a href=\"https://www.nimexpress.com/web/p/\">Nim Express</a>."
            },
            {
              "value": "THA_THAILAND_POST",
              "description": "Thailand Post."
            },
            {
              "value": "THA_DYNAMIC_LOGISTICS",
              "description": "Dynamic Logistics Thailand."
            },
            {
              "value": "ALPHAFAST",
              "description": "Alphafast."
            },
            {
              "value": "FASTRAK_TH",
              "description": "Fastrak Thailand."
            },
            {
              "value": "EPARCEL_KR",
              "description": "EParcel Korea."
            },
            {
              "value": "CJ_KOREA_THAI",
              "description": "<a href=\"https://www.cjlogistics.com/en/network/th-th\">CJ Logistics in Thailand</a>."
            },
            {
              "value": "RINCOS",
              "description": "Rincos."
            },
            {
              "value": "KOR_KOREA_POST",
              "description": "Korea Post."
            },
            {
              "value": "KOR_CJ",
              "description": "CJ Korea."
            },
            {
              "value": "KOR_ECARGO",
              "description": "Ecargo Korea."
            },
            {
              "value": "SREKOREA",
              "description": "<a href=\"https://www.srekorea.co.kr/home/\">SRE Korea</a>."
            },
            {
              "value": "ROCKETPARCEL",
              "description": "<a href=\"https://www.rocketparcel.com/\">Rocket Parcel International</a>."
            },
            {
              "value": "BG_BULGARIAN_POST",
              "description": "<a href=\"https://www.bgpost.bg/\">Bulgarian Post</a>."
            },
            {
              "value": "JPN_JAPAN_POST",
              "description": "<a href=\"https://www.post.japanpost.jp/index_en.html\">Japan Post</a>."
            },
            {
              "value": "JPN_YAMATO",
              "description": "Yamato Japan."
            },
            {
              "value": "JPN_SAGAWA",
              "description": "Sagawa Japan."
            },
            {
              "value": "TUR_PTT",
              "description": "PTT Turkey."
            },
            {
              "value": "AUT_AUSTRIAN_POST",
              "description": "Austrian Post."
            },
            {
              "value": "AU_AUSTRIAN_POST",
              "description": "Austrian Post."
            },
            {
              "value": "RUSSIAN_POST",
              "description": "Russian Post."
            },
            {
              "value": "BEL_DHL",
              "description": "DHL Belgium."
            },
            {
              "value": "FR_MONDIAL",
              "description": "Mondial France."
            },
            {
              "value": "EU_BPOST",
              "description": "<a href=\"https://parcel.bpost.be/\">bpost</a>."
            },
            {
              "value": "LANDMARK_GLOBAL",
              "description": "Landmark Global."
            },
            {
              "value": "IDN_POS",
              "description": "Indonesia Post."
            },
            {
              "value": "IDN_POS_INT",
              "description": "Indonesia Post International."
            },
            {
              "value": "IDN_JNE",
              "description": "JNE Indonesia."
            },
            {
              "value": "IDN_PANDU",
              "description": "Pandu Indonesia."
            },
            {
              "value": "RPX",
              "description": "RPX International."
            },
            {
              "value": "IDN_TIKI",
              "description": "Tiki Indonesia."
            },
            {
              "value": "IDN_LION_PARCEL",
              "description": "Lion Parcel Indonesia."
            },
            {
              "value": "NINJAVAN_ID",
              "description": "Ninjavan Indonesia."
            },
            {
              "value": "IDN_WAHANA",
              "description": "Wahana Indonesia."
            },
            {
              "value": "IDN_FIRST_LOGISTICS",
              "description": "First Logistics Indonesia."
            },
            {
              "value": "UK_AN_POST",
              "description": "<a href=\"https://addresspal.anpost.ie/\">AddressPay UK</a>."
            },
            {
              "value": "DPD",
              "description": "DPD Global."
            },
            {
              "value": "UK_FASTWAY",
              "description": "Fastway UK."
            },
            {
              "value": "UK_NIGHTLINE",
              "description": "Nightline UK."
            },
            {
              "value": "WISELOADS",
              "description": "Wiseloads."
            },
            {
              "value": "GR_ELTA",
              "description": "Elta Greece."
            },
            {
              "value": "GRC_ACS",
              "description": "ACS Greece."
            },
            {
              "value": "GR_GENIKI",
              "description": "Geniki Greece."
            },
            {
              "value": "NINJAVAN_PHILIPPINES",
              "description": "Ninja Van Philippines."
            },
            {
              "value": "PHL_XEND_EXPRESS",
              "description": "Xend Express Philippines."
            },
            {
              "value": "PHL_LBC",
              "description": "LBC Philippines."
            },
            {
              "value": "PHL_JAMEXPRESS",
              "description": "JamExpress Philippines."
            },
            {
              "value": "PHL_AIRSPEED",
              "description": "Airspeed Philippines."
            },
            {
              "value": "PHL_RAF",
              "description": "RAF Philippines."
            },
            {
              "value": "DIRECTLOG",
              "description": "Directlog."
            },
            {
              "value": "BRA_CORREIOS",
              "description": "Correios Brazil."
            },
            {
              "value": "NLD_DHL",
              "description": "DHL Netherlands."
            },
            {
              "value": "NLD_POSTNL",
              "description": "<a href=\"https://www.postnl.com\">PostNL Netherlands</a>."
            },
            {
              "value": "NLD_GLS",
              "description": "<a href=\"https://gls-group.eu/\">General Logistics Systems (GLS) Netherlands</a>."
            },
            {
              "value": "NLD_TRANSMISSION",
              "description": "Transmission Netherlands."
            },
            {
              "value": "CORREOS_DE_MEXICO",
              "description": "<a href=\"https://www.correosdemexico.com.mx/Paginas/Inicio.asp/\">Mex Post Correos de Mexico</a>."
            },
            {
              "value": "MEX_ESTAFETA",
              "description": "<a href=\"https://www.estafeta.com/\">Estafeta Mexico</a>."
            },
            {
              "value": "MEX_SENDA",
              "description": "Senda Mexico."
            },
            {
              "value": "MEX_REDPACK",
              "description": "Redpack Mexico."
            },
            {
              "value": "MEX_AEROFLASH",
              "description": "Aeroflash Mexico."
            },
            {
              "value": "NATIONWIDE_MY",
              "description": "Nationwide Malaysia."
            },
            {
              "value": "MYS_MYS_POST",
              "description": "<a href=\"https://www.pos.com.my/\">Pos Malaysia</a>."
            },
            {
              "value": "MYS_TAQBIN",
              "description": "TA-Q-BIN Parcel Malaysia."
            },
            {
              "value": "MYS_SKYNET",
              "description": "Skynet Malaysia."
            },
            {
              "value": "MYS_CITYLINK",
              "description": "Citylink Malaysia."
            },
            {
              "value": "MYS_AIRPAK",
              "description": "Airpak Malaysia."
            },
            {
              "value": "NINJAVAN_MY",
              "description": "Ninjavan Malaysia."
            },
            {
              "value": "KANGAROO_MY",
              "description": "Kangaroo Express Malaysia."
            },
            {
              "value": "VNM_VIETNAM_POST",
              "description": "Vietnam Post."
            },
            {
              "value": "VNPOST_EMS",
              "description": "Post EMS Vietnam."
            },
            {
              "value": "PRT_INT_SEUR",
              "description": "<a href=\"https://www.seur.com/en/\">Internationational Seur Portugal</a>."
            },
            {
              "value": "PRT_CTT",
              "description": "<a href=\"https://www.cttexpresso.pt/home/\">CTT Expresso Portugal</a>."
            },
            {
              "value": "PRT_CHRONOPOST",
              "description": "Chronopost Portugal."
            },
            {
              "value": "PRT_SEUR",
              "description": "<a href=\"https://www.seur.com/pt/\">Seur Portugal</a>."
            },
            {
              "value": "ADICIONAL",
              "description": "Adicional."
            },
            {
              "value": "LTU_LIETUVOS",
              "description": "Lietuvos paštas Lithuania."
            },
            {
              "value": "DPEX",
              "description": "<a href=\"https://dpex.com/\">DPEX Worldwide</a>."
            },
            {
              "value": "LWE_HK",
              "description": "LWE Hong Kong."
            },
            {
              "value": "SG_SG_POST",
              "description": "Singapore Post."
            },
            {
              "value": "SG_TAQBIN",
              "description": "TA-Q-BIN Parcel Singapore."
            },
            {
              "value": "SG_NINJAVAN",
              "description": "Ninjavan Singapore."
            },
            {
              "value": "SG_ZALORA",
              "description": "Zalora Singapore."
            },
            {
              "value": "JET_SHIP",
              "description": "Jetship."
            },
            {
              "value": "SG_PARCELPOST",
              "description": "Parcel Post Singapore."
            },
            {
              "value": "CHE_SWISS_POST",
              "description": "Swiss Post."
            },
            {
              "value": "ASENDIA_HK",
              "description": "Asendia Hong Kong."
            },
            {
              "value": "HUN_MAGYAR",
              "description": "<a href=\"https://www.posta.hu/\">Magyar Posta</a>."
            },
            {
              "value": "POSTNORD_LOGISTICS",
              "description": "Post Nord Logistics."
            },
            {
              "value": "SWE_DIRECTLINK",
              "description": "<a href=\"https://www.directlink.com/\">Direct Link Sweden</a>."
            },
            {
              "value": "SWE_POSTNORD",
              "description": "<a href=\"https://www.postnord.se/\">PostNord Sverige</a>."
            },
            {
              "value": "SWE_DB",
              "description": "<a href=\"https://www.dbschenker.com/se-sv\">DB Schenker Sweden</a>."
            },
            {
              "value": "CZE_CESKA",
              "description": "<a href=\"https://www.ceskaposta.cz/en/\">Česká pošta</a>."
            },
            {
              "value": "NZ_NZ_POST",
              "description": "<a href=\"https://www.nzpost.co.nz/tools/tracking\">New Zealand Post Limited (NZ)</a>."
            },
            {
              "value": "NZ_COURIER_POST",
              "description": "<a href=\"https://www.courierpost.co.nz/track/track-and-trace/\">CourierPost New Zealand</a>."
            },
            {
              "value": "FASTWAY_NZ",
              "description": "Fastway New Zealand."
            },
            {
              "value": "TW_TAIWAN_POST",
              "description": "<a href=\"https://www.post.gov.tw/post/internet/index.jsp\">Chunghwa Post</a>."
            },
            {
              "value": "SPREADEL",
              "description": "Spreadel."
            },
            {
              "value": "ARE_EMIRATES_POST",
              "description": "<a href=\"https://www.epg.gov.ae/_en/index.xhtml\">Emirates Post Group</a>."
            },
            {
              "value": "AXL",
              "description": "<a href=\"https://couriertrackingrobo.com/track/company-details.php?id=axl\">AXL Express & Logistics</a>."
            },
            {
              "value": "CYP_CYPRUS_POST",
              "description": "<a href=\"https://www.cypruspost.post/en/home\">Cyprus Post</a>."
            },
            {
              "value": "HRV_HRVATSKA",
              "description": "<a href=\"https://www.posta.hr/\">Hrvatska Pošta</a>."
            },
            {
              "value": "NOR_POSTEN",
              "description": "<a href=\"https://www.posten.no/en/\">Posten Norge</a>."
            },
            {
              "value": "RAM",
              "description": "<a href=\"https://www.jpshipping.co.uk/services/personal_effects\">JP RAM Shipping</a>."
            },
            {
              "value": "THECOURIERGUY",
              "description": "<a href=\"https://www.thecourierguy.co.za/\">The Courier Guy</a>."
            },
            {
              "value": "ZA_FASTWAY",
              "description": "<a href=\"http://www.fastway.co.za/\">Fastway Couriers (South Africa)</a>."
            },
            {
              "value": "DPE_EXPRESS",
              "description": "DPE Express."
            },
            {
              "value": "POSTI",
              "description": "Posti."
            },
            {
              "value": "MATKAHUOLTO",
              "description": "Matkahuoloto."
            },
            {
              "value": "GLOBAL_DHL",
              "description": "DHL Global."
            },
            {
              "value": "ARG_CORREO",
              "description": "<a href=\"https://www.correoargentino.com.ar/\">Correo Argentino</a>."
            },
            {
              "value": "ARG_OCA",
              "description": "<a href=\"https://www.oca.com.ar/\">OCA Argentia</a>."
            },
            {
              "value": "POST_SERBIA",
              "description": "<a href=\"https://www.posta.rs/default-eng.asp\">Post of Serbia</a>."
            },
            {
              "value": "BH_POSTA",
              "description": "<a href=\"https://www.posta.ba/en/track-trace-2/\">BH POŠTA</a>."
            },
            {
              "value": "CORREOS_CHILE",
              "description": "<a href=\"https://www.correos.cl/SitePages/home.asp/\">CorreosChile</a>."
            },
            {
              "value": "APR_72",
              "description": "APR 72."
            },
            {
              "value": "CORREOS_DE_COSTA_RICA",
              "description": "<a href=\"https://www.correos.go.cr/\">Correos de Costa Rica</a>."
            },
            {
              "value": "POSTUR_IS",
              "description": "Postur."
            },
            {
              "value": "SPEEDEXCOURIER",
              "description": "Speedex Courier."
            },
            {
              "value": "ROU_POSTA",
              "description": "<a href=\"https://www.posta-romana.ro/en\">Poșta Română</a>."
            },
            {
              "value": "UKR_NOVA",
              "description": "<a href=\"https://novaposhta.ua/en\">Nova Poshta</a>."
            },
            {
              "value": "UKR_POSHTA",
              "description": "<a href=\"https://ukrposhta.ua/en/vidslidkuvati-forma-poshuku\">Ukrposhta - Ukraine's National Post</a>."
            },
            {
              "value": "NGA_NIPOST",
              "description": "<a href=\"https://www.nipost.gov.ng//\">Nigerian Postal Service</a>."
            },
            {
              "value": "NG_COURIERPLUS",
              "description": "<a href=\"https://www.courierplus-ng.com/\">Courier Plus Nigeria</a>."
            },
            {
              "value": "ESHOPWORLD",
              "description": "EShopWorld."
            },
            {
              "value": "WEBINTERPRET",
              "description": "WebInterpret."
            },
            {
              "value": "HERMES",
              "description": "Hermes."
            },
            {
              "value": "ABC_MAIL",
              "description": "ABC Mail."
            },
            {
              "value": "ARAMEX",
              "description": "Aramex."
            },
            {
              "value": "YANWEN",
              "description": "<a href=\"https://www.yw56.com.cn/\">Yanwen Express</a>."
            },
            {
              "value": "INTERNATIONAL_BRIDGE",
              "description": "International Bridge."
            },
            {
              "value": "SFC_LOGISTICS",
              "description": "<a href=\"https://www.sfcservice.com/\">SFC Logistics</a>."
            },
            {
              "value": "BQC_EXPRESS",
              "description": "BQC Express."
            },
            {
              "value": "ONE_WORLD",
              "description": "One World."
            },
            {
              "value": "IT_REGISTER_MAIL",
              "description": "Registered Mail Italy."
            },
            {
              "value": "WINIT",
              "description": "WinIt."
            },
            {
              "value": "CONTINENTAL",
              "description": "Continental."
            },
            {
              "value": "EFS",
              "description": "<a href=\"https://www.efstrans.com/\">Enterprise Freight Systems (EFS)</a>."
            },
            {
              "value": "PANTOS",
              "description": "Pantos."
            },
            {
              "value": "RELAIS_COLIS",
              "description": "<a href=\"https://www.relaiscolis.com/\">Relais Colis</a>."
            },
            {
              "value": "US_DHL_EXPRESS",
              "description": "DHL Express US."
            },
            {
              "value": "US_DHL_PARCEL",
              "description": "DHL Parcel US."
            },
            {
              "value": "US_DHL_ECOMMERCE",
              "description": "<a href=\"https://www.logistics.dhl/us-en/home/tracking/tracking-ecommerce.html\">DHL eCommerce US</a>."
            },
            {
              "value": "US_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding US."
            },
            {
              "value": "UK_DHL_EXPRESS",
              "description": "DHL Express UK."
            },
            {
              "value": "UK_DHL_PARCEL",
              "description": "DHL Parcel UK."
            },
            {
              "value": "UK_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding UK."
            },
            {
              "value": "CN_DHL_EXPRESS",
              "description": "DHL Express Canada."
            },
            {
              "value": "CN_DHL_ECOMMERCE",
              "description": "DHL eCommerce China."
            },
            {
              "value": "CN_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding China."
            },
            {
              "value": "DE_DHL_EXPRESS",
              "description": "DHL Express Germany."
            },
            {
              "value": "DE_DHL_PARCEL",
              "description": "DHL Parcel Germany."
            },
            {
              "value": "DE_DHL_PACKET",
              "description": "DHL Packet Germany."
            },
            {
              "value": "DE_DHL_ECOMMERCE",
              "description": "DHL eCommerce Germany."
            },
            {
              "value": "DE_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding Germany."
            },
            {
              "value": "DE_DHL_DEUTSCHEPOST",
              "description": "DHL Deutschepost Germany."
            },
            {
              "value": "AU_DHL_EXPRESS",
              "description": "DHL Express Australia."
            },
            {
              "value": "AU_DHL_ECOMMERCE",
              "description": "DHL eCommerce Australia."
            },
            {
              "value": "AU_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding Australia."
            },
            {
              "value": "HK_DHL_EXPRESS",
              "description": "DHL Express Hong Kong."
            },
            {
              "value": "HK_DHL_ECOMMERCE",
              "description": "DHL eCommerce Hong Kong."
            },
            {
              "value": "HK_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding Hong Kong."
            },
            {
              "value": "CA_DHL_EXPRESS",
              "description": "DHL Express Canada."
            },
            {
              "value": "CA_DHL_ECOMMERCE",
              "description": "DHL eCommerce Canada."
            },
            {
              "value": "CA_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding Canada."
            },
            {
              "value": "IT_DHL_EXPRESS",
              "description": "DHL Express Italy."
            },
            {
              "value": "IT_DHL_ECOMMERCE",
              "description": "DHL eCommerce Italy."
            },
            {
              "value": "IT_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding Italy."
            },
            {
              "value": "FR_DHL_EXPRESS",
              "description": "DHL Express France."
            },
            {
              "value": "FR_DHL_PARCEL",
              "description": "DHL Parcel France."
            },
            {
              "value": "FR_DHL_GLOBALFORWARDING",
              "description": "DHL Global Forwarding France."
            },
            {
              "value": "PL_DHL_EXPRESS",
              "description": "DHL Express Poland."
            },
            {
              "value": "PL_DHL_PARCEL",
              "description": "DHL Parcel Poland."
            },
            {
              "value": "PL_DHL_GLOBALFORWARDING",
              "description": "<a href=\"https://www.logistics.dhl/pl-en/home/our-divisions/global-forwarding.html\">DHL Global Forwarding Poland</a>"
            },
            {
              "value": "ABC_PACKAGE",
              "description": "<a href=\"https://abcpkg.com/\">ABC Package Express</a>."
            },
            {
              "value": "AN_POST",
              "description": "<a href=\"https://www.anpost.com/\">An Post Ireland</a>."
            },
            {
              "value": "APC_OVERNIGHT",
              "description": "<a href=\"https://apc-overnight.com/\">APC Overnight</a>."
            },
            {
              "value": "ASM_ES",
              "description": "<a href=\"https://www.aftership.com/es/couriers/asm\">ASM Tracking Spain</a>."
            },
            {
              "value": "AUPOST_CN",
              "description": "<a href=\"https://auspost.com.au/business/shipping/international-shipping/logistics-in-china\">Logistics in China</a>."
            },
            {
              "value": "ACOMMMERCE",
              "description": "<a href=\"https://www.acommerce.asia/\">aCommerce</a>."
            },
            {
              "value": "ADICIONAL_PT",
              "description": "<a href=\"https://www.adicional.pt/\">Adicional Logistics Portugal</a>."
            },
            {
              "value": "AIR_21",
              "description": "<a href=\"https://www.air21.com.ph/main/index.php\">Air 21</a>."
            },
            {
              "value": "AIRBORNE_EXPRESS_UK",
              "description": "Airborne Express UK."
            },
            {
              "value": "AIRPAK_MY",
              "description": "Airpak Malaysia."
            },
            {
              "value": "AIRSPEED",
              "description": "Airspeed."
            },
            {
              "value": "ASENDIA_DE",
              "description": "Asendia Germany."
            },
            {
              "value": "ASENDIA_US",
              "description": "<a href=\"https://www.asendiausa.com/\">Asendia USA</a>."
            },
            {
              "value": "AUSTRALIA_POST",
              "description": "Australia Post."
            },
            {
              "value": "TOLL_AU",
              "description": "Toll Australia."
            },
            {
              "value": "AUSTRIAN_POST_EXPRESS",
              "description": "Austrian Post Express."
            },
            {
              "value": "AUSTRIAN_POST",
              "description": "Austrian Post Registered."
            },
            {
              "value": "B_TWO_C_EUROPE",
              "description": "B2C Europe."
            },
            {
              "value": "BERT",
              "description": "<a href=\"https://bert.fr/\">Groupe Bert</a>."
            },
            {
              "value": "BPOST",
              "description": "BPost."
            },
            {
              "value": "BRT_IT",
              "description": "BRT Bartolini."
            },
            {
              "value": "BLUEDART",
              "description": "Bluedart."
            },
            {
              "value": "BONDS_COURIERS",
              "description": "Bonds Couriers."
            },
            {
              "value": "BPOST_INT",
              "description": "<a href=\"https://landmarkglobal.com/welcome\">bpost International</a>."
            },
            {
              "value": "BULGARIAN_POST",
              "description": "Bulgarian Post."
            },
            {
              "value": "CJ_LOGISTICS",
              "description": "<a href=\"https://www.cjlogistics.com/en/main\">CJ Logistics</a>."
            },
            {
              "value": "CJ_INT_MY",
              "description": "CJ Malaysia International."
            },
            {
              "value": "CJ_MY",
              "description": "CJ Malaysia."
            },
            {
              "value": "CJ_TH",
              "description": "CJ Thailand."
            },
            {
              "value": "CANADA_POST",
              "description": "Canada Post."
            },
            {
              "value": "CANPAR",
              "description": "<a href=\"https://www.canpar.com/en/home.jsp\">Canpar Express</a>."
            },
            {
              "value": "CESKA_CZ",
              "description": "<a href=\"https://www.postaonline.cz/en/trackandtrace\">Česká Pošta</a>."
            },
            {
              "value": "CHRONOPOST_FR",
              "description": "<a href=\"https://www.chronopost.fr/en#/step-home\">Chronopost France</a>."
            },
            {
              "value": "CHRONOPOST_PT",
              "description": "<a href=\"https://www.chronopost.pt/en#/step-home\">Chronopost Portugal</a>."
            },
            {
              "value": "CHUNGHWA_POST",
              "description": "Chunghwa Post."
            },
            {
              "value": "CITYLINK_MY",
              "description": "CityLink Malaysia."
            },
            {
              "value": "COLIPOSTE",
              "description": "Coliposte."
            },
            {
              "value": "COLIS",
              "description": "Colis France."
            },
            {
              "value": "COLLECTPLUS",
              "description": "<a href=\"https://www.collectplus.co.uk/\">CollectPlus</a>."
            },
            {
              "value": "CORREOS_AG",
              "description": "Correos Argentina."
            },
            {
              "value": "CORREOS_BR",
              "description": "Correos Brazil."
            },
            {
              "value": "CORREOS_CL",
              "description": "Correos Chile."
            },
            {
              "value": "CORREOS_CR",
              "description": "Correos De Costa Rica."
            },
            {
              "value": "CORREOS_MX",
              "description": "Correos De Mexico."
            },
            {
              "value": "CORREOS_ES",
              "description": "Correos De Spain."
            },
            {
              "value": "CORREOS_EXPRESS",
              "description": "Correos Express."
            },
            {
              "value": "COURIERPLUS",
              "description": "Courier Plus."
            },
            {
              "value": "COURIER_POST",
              "description": "Courier Post."
            },
            {
              "value": "CYPRUS_POST_CYP",
              "description": "Cyprus Post."
            },
            {
              "value": "DBSCHENKER_SE",
              "description": "DB Schenker Sweden."
            },
            {
              "value": "DHL_ES",
              "description": "DHL Spain."
            },
            {
              "value": "DHL_ACTIVE_TRACING",
              "description": "DHL Active Tracing."
            },
            {
              "value": "DHL_AU",
              "description": "DHL Australia."
            },
            {
              "value": "DHL_BENELUX",
              "description": "DHL Benelux."
            },
            {
              "value": "DHL_DEUTSCHE_POST",
              "description": "DHL Deutsche Post."
            },
            {
              "value": "DHL_FR",
              "description": "DHL France."
            },
            {
              "value": "DHL_GLOBAL_ECOMMERCE",
              "description": "DHL Global eCommerce."
            },
            {
              "value": "DHL_HK",
              "description": "DHL Hong Kong."
            },
            {
              "value": "DHL_IT",
              "description": "DHL Italy."
            },
            {
              "value": "DHL_JP",
              "description": "DHL Japan."
            },
            {
              "value": "DHL_NL",
              "description": "DHL Netherlands."
            },
            {
              "value": "DHL_PACKET",
              "description": "DHL Packet."
            },
            {
              "value": "DHL_PARCEL_NL",
              "description": "DHL Parcel Netherlands."
            },
            {
              "value": "DHL_PARCEL_ES",
              "description": "DHL Parcel Spain."
            },
            {
              "value": "DHL_PL",
              "description": "DHL Poland."
            },
            {
              "value": "DHL_SG",
              "description": "DHL Singapore."
            },
            {
              "value": "DHL_UK",
              "description": "DHL UK."
            },
            {
              "value": "DHL_GLOBAL_MAIL_ASIA",
              "description": "DHL eCommerce Asia."
            },
            {
              "value": "DHL_GLOBAL_MAIL",
              "description": "DHL eCommerce US."
            },
            {
              "value": "DHL_AT",
              "description": "DHL Austria."
            },
            {
              "value": "DPD_DELISTRACK",
              "description": "DPD Delistrack."
            },
            {
              "value": "DPD_FR",
              "description": "DPD France."
            },
            {
              "value": "DPD_DE",
              "description": "DPD Germany."
            },
            {
              "value": "DPD_HK",
              "description": "DPD Hong Kong."
            },
            {
              "value": "DPD_IR",
              "description": "DPD Ireland."
            },
            {
              "value": "DPD_LOCAL_REF",
              "description": "DPD Local Reference."
            },
            {
              "value": "DPD_LOCAL",
              "description": "DPD Local."
            },
            {
              "value": "DPD_PL",
              "description": "DPD Poland."
            },
            {
              "value": "DPD_RO",
              "description": "DPD Romania."
            },
            {
              "value": "DPD_RU",
              "description": "DPD Russia."
            },
            {
              "value": "DPD_UK",
              "description": "DPD UK."
            },
            {
              "value": "DTDC_EXPRESS",
              "description": "<a href=\"https://www.dtdc.com/\">DTDC Express Global</a>."
            },
            {
              "value": "DTDC_IN",
              "description": "<a href=\"https://www.dtdc.in/\">DTDC India</a>."
            },
            {
              "value": "DAWN_WING",
              "description": "Dawn Wing."
            },
            {
              "value": "DELHIVERY_IN",
              "description": "<a href=\"https://www.delhivery.com/\">Delhivery India</a>."
            },
            {
              "value": "DELTEC_DE",
              "description": "Deltec Germany."
            },
            {
              "value": "DELTEC_UK",
              "description": "Deltec UK."
            },
            {
              "value": "DEUTSCHE_DE",
              "description": "<a href=\"https://www.deutschepost.de/sendung/simpleQuery.html\">Deutsche Post</a>."
            },
            {
              "value": "DIRECTLINK_SE",
              "description": "<a href=\"https://www.directlink.com/\">Direct Link Sweden</a>."
            },
            {
              "value": "DIRECTLOG_BR",
              "description": "Directlog."
            },
            {
              "value": "DOTZOT",
              "description": "Dotzot."
            },
            {
              "value": "EC_CN",
              "description": "EC China."
            },
            {
              "value": "ELTA_GR",
              "description": "ELTA Greece."
            },
            {
              "value": "EMPS_CN",
              "description": "EMPS China."
            },
            {
              "value": "EMS_CN",
              "description": "EMS China."
            },
            {
              "value": "ECARGO",
              "description": "Ecargo."
            },
            {
              "value": "EMIRATES_POST",
              "description": "Emirates Post."
            },
            {
              "value": "ENSENDA",
              "description": "Ensenda USA."
            },
            {
              "value": "ESTAFETA",
              "description": "Estafeta."
            },
            {
              "value": "ESTES",
              "description": "Estes."
            },
            {
              "value": "FERCAM_IT",
              "description": "FERCAM Logistics & Transport."
            },
            {
              "value": "FLYT_EXPRESS",
              "description": "FLYT Express."
            },
            {
              "value": "FASTRACK",
              "description": "FastTrack Thailand."
            },
            {
              "value": "FASTWAY_US",
              "description": "Fastway USA."
            },
            {
              "value": "FASTWAY_ZA",
              "description": "Fastway South Africa."
            },
            {
              "value": "FASTWAY_UK",
              "description": "Fastway UK."
            },
            {
              "value": "FASTWAY_AU",
              "description": "Fastway Australia."
            },
            {
              "value": "FIRST_LOGISITCS",
              "description": "First Logistics."
            },
            {
              "value": "FOUR_PX_EXPRESS",
              "description": "4PX Express."
            },
            {
              "value": "GEODIS",
              "description": "GEODIS - Distribution & Express."
            },
            {
              "value": "GLS_CZ",
              "description": "<a href=\"https://gls-group.eu/CZ/cs/home/\">GLS Czech Republic</a>."
            },
            {
              "value": "GLS_FR",
              "description": "<a href=\"https://gls-group.eu/FR/fr/home\">GLS France</a>."
            },
            {
              "value": "GLS_DE",
              "description": "<a href=\"https://gls-group.eu/DE/de/home\">GLS Germany</a>."
            },
            {
              "value": "GLS_IT",
              "description": "<a href=\"https://www.gls-italy.com/\">GLS Italy</a>."
            },
            {
              "value": "GLS_NL",
              "description": "<a href=\"https://gls-group.eu/NL/nl/home\">GLS Netherlands</a>."
            },
            {
              "value": "GLS_ES",
              "description": "<a href=\"https://www.gls-spain.es/en/\">GLS Spain</a>."
            },
            {
              "value": "GLS",
              "description": "<a href=\"https://gls-group.eu/EU/en/home\">GLS</a>."
            },
            {
              "value": "ACS_GR",
              "description": "<a href=\"https://www.parcelmonitor.com/track-greece/\">Parcel Monitor Greece</a>."
            },
            {
              "value": "GENIKI_GR",
              "description": "Geniki Greece."
            },
            {
              "value": "GLOBEGISTICS",
              "description": "Globegistics USA."
            },
            {
              "value": "GREYHOUND",
              "description": "Greyhound."
            },
            {
              "value": "HERMES_DE",
              "description": "Hermes Germany."
            },
            {
              "value": "HERMESWORLD_UK",
              "description": "HermesWorld UK."
            },
            {
              "value": "HK_POST",
              "description": "Hong Kong Post."
            },
            {
              "value": "HRVATSKA_HR",
              "description": "<a href=\"https://www.posta.hr/\">Hrvatska Pošta</a>."
            },
            {
              "value": "HUAHAN_EXPRESS",
              "description": "Huahan Express."
            },
            {
              "value": "IMX",
              "description": "IMX France."
            },
            {
              "value": "ITIS",
              "description": "<a href=\"https://alltrack.org/itis-courier-tracking\">ITIS International Courier Tracking</a>."
            },
            {
              "value": "INDIA_POST",
              "description": "India Post."
            },
            {
              "value": "INTERLINK",
              "description": "Interlink Express."
            },
            {
              "value": "INT_SEUR",
              "description": "International Seur."
            },
            {
              "value": "INT_SUER",
              "description": "International Seur."
            },
            {
              "value": "ISRAEL_POST",
              "description": "Israel Post."
            },
            {
              "value": "JNE_IDN",
              "description": "JNE Indonesia."
            },
            {
              "value": "JAMEXPRESS_PH",
              "description": "Jam Express."
            },
            {
              "value": "JAPAN_POST",
              "description": "Japan Post."
            },
            {
              "value": "JP_POST",
              "description": "Japan Post."
            },
            {
              "value": "JETSHIP_MY",
              "description": "Jet Ship Malaysia."
            },
            {
              "value": "JETSHIP_SG",
              "description": "JetShip Singapore."
            },
            {
              "value": "KERRY_EXPRESS_VN",
              "description": "Kerry Express Vietnam."
            },
            {
              "value": "KERRY_EXPRESS_HK",
              "description": "Kerry Express Hong Kong."
            },
            {
              "value": "KERRY_EXPRESS_TH",
              "description": "Kerry Express Thailand."
            },
            {
              "value": "KIALA",
              "description": "Kiala."
            },
            {
              "value": "KOREA_POST",
              "description": "Korea Post."
            },
            {
              "value": "CJ_KR",
              "description": "<a href=\"https://www.cjlogistics.com/en/network/th-th\">CJ Logistics Korea</a>."
            },
            {
              "value": "LAPOSTE",
              "description": "LA Poste."
            },
            {
              "value": "LBC_PH",
              "description": "LBC Express."
            },
            {
              "value": "LIETUVOS_LT",
              "description": "Lietuvos Pastas."
            },
            {
              "value": "LION_PARCEL",
              "description": "Lion Parcel."
            },
            {
              "value": "LOGISTICSWORLDWIDE_HK",
              "description": "<a href=\"https://www.logisticsworldwide.com/\">Logistics Worldwide Hong Kong</a>."
            },
            {
              "value": "LOGISTICSWORLDWIDE_KR",
              "description": "<a href=\"https://www.logisticsworldwide.com/\">Logistics Worldwide Korea</a>."
            },
            {
              "value": "LOGISTICSWORLDWIDE_MY",
              "description": "<a href=\"https://www.logisticsworldwide.com/\">Logistics Worldwide Malaysia</a>."
            },
            {
              "value": "LOOMIS",
              "description": "Loomis."
            },
            {
              "value": "MONDIAL",
              "description": "<a href=\"https://www.mondialrelay.fr/\">Mondial Relay</a>."
            },
            {
              "value": "MAGYAR_HU",
              "description": "<a href=\"https://www.posta.hu/sending_mail/parcels_abroad/international_postal_parcel\">Magyar Posta</a>."
            },
            {
              "value": "MALAYSIA_POST",
              "description": "<a href=\"https://www.poslaju.com.my/\">Pos Malaysia Berhad</a>."
            },
            {
              "value": "MASTERLINK",
              "description": "Masterlink."
            },
            {
              "value": "AEROFLASH",
              "description": "Mexico Aeroflash."
            },
            {
              "value": "REDPACK",
              "description": "Mexico Redpack."
            },
            {
              "value": "SENDA_MX",
              "description": "Mexico Senda Express."
            },
            {
              "value": "MONDIAL_BE",
              "description": "Mondial Belgium."
            },
            {
              "value": "MYHERMES",
              "description": "MyHermes UK."
            },
            {
              "value": "NACEX_ES",
              "description": "<a href=\"https://www.nacex.es/cambiarIdioma.do?idioma=EN\">Nacex Spain</a>."
            },
            {
              "value": "NATIONWIDE",
              "description": "<a href=\"https://www.nationwidetransportation.com/nationwide_carrier.html\">Nationwide Carrier and Logistics Services</a>."
            },
            {
              "value": "NZ_POST",
              "description": "New Zealand Post."
            },
            {
              "value": "NIPOST_NG",
              "description": "<a href=\"https://www.nipost.gov.ng/\">Nigerian Postal Service</a>."
            },
            {
              "value": "NIGHTLINE_UK",
              "description": "Nightline UK."
            },
            {
              "value": "NINJAVAN_PH",
              "description": "Ninjavan Philippines."
            },
            {
              "value": "NINJAVAN_SG",
              "description": "Ninjavan Singapore."
            },
            {
              "value": "NOVA_POSHTA_INT",
              "description": "Nova Poshta International."
            },
            {
              "value": "NOVA_POSHTA",
              "description": "Nova Poshta."
            },
            {
              "value": "OCA_AR",
              "description": "<a href=\"https://www.oca.com.ar/\">OCA Argentina</a>."
            },
            {
              "value": "ONTRAC",
              "description": "OnTrac."
            },
            {
              "value": "PTT_POST",
              "description": "PTT Posta."
            },
            {
              "value": "PANDU",
              "description": "Pandu Logistics."
            },
            {
              "value": "PARCELPOST_SG",
              "description": "Parcel Post Singapore."
            },
            {
              "value": "POCZTA_POLSKA",
              "description": "<a href=\"https://www.poczta-polska.pl/\">Poczta Polska</a>."
            },
            {
              "value": "POCZTEX",
              "description": "Pocztex."
            },
            {
              "value": "CTT_PT",
              "description": "<a href=\"https://www.cttexpresso.pt/home/\">CTT Expresso Portugal</a>."
            },
            {
              "value": "SEUR_PT",
              "description": "<a href=\"https://www.seur.com/pt/\">Seur Portugal</a>."
            },
            {
              "value": "POS_ID",
              "description": "Pos Indonesia Domestic."
            },
            {
              "value": "POS_INT",
              "description": "Pos Indonesia International."
            },
            {
              "value": "POSTNL_INT_3_S",
              "description": "<a href=\"https://www.postnl.nl/\">Koninklijke PostNL</a>."
            },
            {
              "value": "POSTNL",
              "description": "PostNL."
            },
            {
              "value": "POSTNL_INT",
              "description": "PostNl International."
            },
            {
              "value": "POSTNORD_LOGISTICS_DK",
              "description": "PostNord Logistics Denmark."
            },
            {
              "value": "POSTNORD_LOGISTICS_SE",
              "description": "PostNord Logistics Sweden."
            },
            {
              "value": "POSTNORD_LOGISTICS_GLOBAL",
              "description": "PostNord Logistics."
            },
            {
              "value": "POSTA_RO",
              "description": "Posta Romana."
            },
            {
              "value": "POSTE_ITALIANE",
              "description": "Poste Italiane."
            },
            {
              "value": "POSTEN_NORGE",
              "description": "Posten Norge."
            },
            {
              "value": "PROFESSIONAL_COURIERS",
              "description": "Professional Couriers."
            },
            {
              "value": "RAF_PH",
              "description": "RAF Philippines."
            },
            {
              "value": "RL_US",
              "description": "RL Carriers."
            },
            {
              "value": "RPD_2_MAN",
              "description": "RPD2man Deliveries."
            },
            {
              "value": "RPX_ID",
              "description": "RPX Indonesia."
            },
            {
              "value": "REDEXPRESS",
              "description": "Red Express."
            },
            {
              "value": "REDUR_ES",
              "description": "Redur Spain."
            },
            {
              "value": "REGISTER_MAIL_IT",
              "description": "Registered Mail Italy."
            },
            {
              "value": "RELAIS_COLIS_FR",
              "description": "Relais Colis."
            },
            {
              "value": "ROCKET_PARCEL",
              "description": "Rocket Parcel International."
            },
            {
              "value": "SDA_IT",
              "description": "SDA Italy."
            },
            {
              "value": "SF_EXPRESS",
              "description": "<a href=\"https://www.sf-express.com/us/en/\">SF Express</a>."
            },
            {
              "value": "SFC_EXPRESS",
              "description": "SFC Express."
            },
            {
              "value": "SGT_IT",
              "description": "SGT Corriere Espresso."
            },
            {
              "value": "SRE_KOREA",
              "description": "SRE Korea."
            },
            {
              "value": "SAGAWA",
              "description": "Sagawa."
            },
            {
              "value": "SAGAWA_JP",
              "description": "Sagawa."
            },
            {
              "value": "POST_SERBIA_CS",
              "description": "Serbia Post."
            },
            {
              "value": "SINGPOST",
              "description": "Singapore Post."
            },
            {
              "value": "SIODEMKA",
              "description": "Siodemka."
            },
            {
              "value": "SKYNET_WORLDWIDE",
              "description": "<a href=\"https://www.skynetworldwide.com/\">SkyNet Worldwide Express</a>."
            },
            {
              "value": "SKYNET_MY",
              "description": "Skynet Malaysia."
            },
            {
              "value": "SKYNET_UAE",
              "description": "<a href=\"https://www.skynetworldwide.net/\">SkyNet Worldwide Express Dubai, UAE</a>."
            },
            {
              "value": "SKYNET_UK",
              "description": "<a href=\"https://www.skynetworldwide.com/\">SkyNet Worldwide Express UK</a>."
            },
            {
              "value": "SEUR_ES",
              "description": "<a href=\"https://www.seur.com/es/\">Seur Spain</a>."
            },
            {
              "value": "STARTRACK_EXPRESS",
              "description": "Star Track Express."
            },
            {
              "value": "STARTRACK",
              "description": "Star Track."
            },
            {
              "value": "SWISS_POST",
              "description": "Swiss Post."
            },
            {
              "value": "TNT_AU",
              "description": "TNT Australia."
            },
            {
              "value": "TNT_CN",
              "description": "TNT China."
            },
            {
              "value": "TNT_CLICK_IT",
              "description": "TNT Click Italy."
            },
            {
              "value": "TNT_FR",
              "description": "TNT France."
            },
            {
              "value": "TNT_DE",
              "description": "TNT Germany."
            },
            {
              "value": "TNT_IT",
              "description": "TNT Italy."
            },
            {
              "value": "TNT_JP",
              "description": "TNT Japan."
            },
            {
              "value": "TNT_NL",
              "description": "TNT Netherlands."
            },
            {
              "value": "TNT_PL",
              "description": "TNT Poland."
            },
            {
              "value": "TNT_ES",
              "description": "TNT Spain."
            },
            {
              "value": "TNT_UK",
              "description": "TNT UK."
            },
            {
              "value": "TPG",
              "description": "<a href=\"https://tpg.ir/en/tracking\">TPG International & Domestic Express</a>."
            },
            {
              "value": "TAIWAN_POST_TW",
              "description": "Taiwan Post."
            },
            {
              "value": "TAQBIN_HK",
              "description": "TA-Q-BIN Parcel Hong Kong."
            },
            {
              "value": "TAQBIN_MY",
              "description": "TA-Q-BIN Parcel Malaysia."
            },
            {
              "value": "TAQBIN_SG",
              "description": "TA-Q-BIN Parcel Singapore."
            },
            {
              "value": "TAXIPOST",
              "description": "TaxiPost."
            },
            {
              "value": "TELIWAY",
              "description": "Teliway."
            },
            {
              "value": "THAILAND_POST",
              "description": "Thailand Post."
            },
            {
              "value": "THE_COURIER_GUY",
              "description": "The Courier Guy."
            },
            {
              "value": "TIKI_ID",
              "description": "Tiki."
            },
            {
              "value": "TOLL_IPEC",
              "description": "Toll IPEC."
            },
            {
              "value": "TWO_GO",
              "description": "2GO."
            },
            {
              "value": "TRANSMISSION",
              "description": "Transmission Netherlands."
            },
            {
              "value": "UK_MAIL",
              "description": "UK Mail."
            },
            {
              "value": "UPS_MI",
              "description": "UPS Mail Innovations."
            },
            {
              "value": "VIETNAM_POST",
              "description": "Vietnam Post."
            },
            {
              "value": "WAHANA_ID",
              "description": "<a href=\"https://www.wahana.com/\">Wahana Express Indonesia</a>."
            },
            {
              "value": "XEND_EXPRESS_PH",
              "description": "Xend Express."
            },
            {
              "value": "XPRESSBEES",
              "description": "Xpress Bees."
            },
            {
              "value": "YAMATO",
              "description": "Yamato Japan."
            },
            {
              "value": "YANWEN_CN",
              "description": "Yanwen China."
            },
            {
              "value": "YODEL",
              "description": "Yodel."
            },
            {
              "value": "UPS_CANADA",
              "description": "UPS Canada."
            },
            {
              "value": "UPS_MAIL_INNOVATIONS",
              "description": "UPS Mail Innovations."
            },
            {
              "value": "DE_DELTEC",
              "description": "Deltec Germany."
            },
            {
              "value": "DE_INTERNATIONALSEUR",
              "description": "International Seur Germany."
            },
            {
              "value": "FR_DPD",
              "description": "DPD France."
            },
            {
              "value": "FR_IMX",
              "description": "IMX France."
            },
            {
              "value": "IT_IMX",
              "description": "IMX Italy."
            },
            {
              "value": "AU_DTDC",
              "description": "DTDC Australia."
            },
            {
              "value": "AU_SENDLE",
              "description": "Sendle Australia."
            },
            {
              "value": "AU_SKYNET",
              "description": "Skynet Australia."
            },
            {
              "value": "ES_GLS",
              "description": "<a href=\"https://gls-group.eu/\">General Logistics Systems (GLS) Spain</a>."
            },
            {
              "value": "ES_INTERNATIONALSEUR",
              "description": "<a href=\"https://www.seur.com/es/\">Seur International Spain</a>."
            },
            {
              "value": "ES_IMX",
              "description": "IMX Spain."
            },
            {
              "value": "CN_HUAHANEXPRESS",
              "description": "Huahan Express China."
            },
            {
              "value": "LOCAL_PICKUP",
              "description": "Local Pickup."
            },
            {
              "value": "HK_DPEX",
              "description": "<a href=\"https://dpex.com/\">DPEX Worldwide Hong Kong</a>."
            },
            {
              "value": "HK_KERRYEXPRESS",
              "description": "Kerry Express Hong Kong."
            },
            {
              "value": "HK_LOGISTICSWORLDWIDEEXPRESS",
              "description": "Logistics Worldwide Express Hong Kong."
            },
            {
              "value": "HK_RPX",
              "description": "RPX Hong Kong."
            },
            {
              "value": "HK_SPREADEL",
              "description": "Spreadel Hong Kong."
            },
            {
              "value": "IN_SPREADEL",
              "description": "Spreadel IN."
            },
            {
              "value": "TH_CJ",
              "description": "CJ Thailand."
            },
            {
              "value": "KR_LOGISTICSWORLDWIDE",
              "description": "<a href=\"https://www.logisticsworldwide.com/\">Logistics Worldwide Korea</a>."
            },
            {
              "value": "AT_DHL",
              "description": "DHL Austria."
            },
            {
              "value": "BE_IMX",
              "description": "IMX Belgium."
            },
            {
              "value": "MY_LOGISTICSWORLDWIDE",
              "description": "<a href=\"https://www.logisticsworldwide.com/\">Logistics Worldwide Malaysia</a>."
            },
            {
              "value": "MY_JETSHIP",
              "description": "Jetship Malaysia."
            },
            {
              "value": "SG_DHL",
              "description": "DHL Singapore."
            },
            {
              "value": "SG_SPREADEL",
              "description": "Spreadel Singapore."
            },
            {
              "value": "POSTAROMANA",
              "description": "<a href=\"https://www.posta-romana.ro/en\">Romanian Post</a>."
            },
            {
              "value": "US_PUROLATOR",
              "description": "<a href=\"https://www.purolator.com/en/ship-track/shipping-services/delivery-services/us-delivery-services.page\">Purolator US</a>."
            },
            {
              "value": "US_FASTWAY",
              "description": "Fastway US."
            },
            {
              "value": "CHRONOPOST",
              "description": "<a href=\"https://www.chronopost.fr/en#/step-home\">Chronopost</a>."
            },
            {
              "value": "CORREOS_DE_ESPANA",
              "description": "<a href=\"https://www.correos.es/ss/Satellite/site/pagina-inicio/info\">Correos de Espana</a>."
            },
            {
              "value": "DEUTSCHE_POST_DHL",
              "description": "<a href=\"https://www.deutschepost.de/en/home.html\">Deutsche Post DHL</a>."
            },
            {
              "value": "EBOOST_SDA",
              "description": "<a href=\"https://www.sda.it/SITO_SDA-INSIDEX-WEB/pages/Home_it/119\">Posteitaliane</a>."
            },
            {
              "value": "HONGKONG_POST",
              "description": "Hong Kong Post."
            },
            {
              "value": "INTANGIBLE_DIGITAL_SERVICES",
              "description": "Intangible Digital Services."
            },
            {
              "value": "LA_POSTE",
              "description": "<a href=\"https://www.laposte.fr/particulier\">La Poste</a>."
            },
            {
              "value": "LA_POSTE_SUIVI",
              "description": "<a href=\"https://www.csuivi.courrier.laposte.fr/suivi\">La Poste Suivi</a>."
            },
            {
              "value": "NEKO_YAMATO_UNYUU",
              "description": "<a href=\"https://www.kuronekoyamato.co.jp/en/\">Yamato Transport Co.</a>."
            },
            {
              "value": "NITTSU_PELICAN_BIN",
              "description": "<a href=\"https://www.nittsu.com/epelicangen2/secure/login.aspx\">Nippon Express</a>."
            },
            {
              "value": "POSTE_ITALIA",
              "description": "<a href=\"https://www.poste.it/\">Posteitaliane</a>."
            },
            {
              "value": "SAGAWA_KYUU_BIN",
              "description": "<a href=\"https://www.sagawa-exp.co.jp/english/service/standard/service04.html\">Sagawa Express Co.</a>."
            },
            {
              "value": "STAR_TRACK_EXPRESS",
              "description": "<a href=\"https://startrack.com.au/services/receiving/track-and-trace\">Star Track Express</a>."
            },
            {
              "value": "US_DTDC",
              "description": "DTDC US."
            },
            {
              "value": "US_STARTRACK",
              "description": "Star Track US."
            },
            {
              "value": "ISR_ISRAEL_POST",
              "description": "<a href=\"https://www.israelpost.co.il/\">Israel Post</a>."
            },
            {
              "value": "BE_MONDIAL",
              "description": "Mondial Belgium."
            },
            {
              "value": "B_2_CEUROPE",
              "description": "<a href=\"https://www.b2ceurope.eu/\">B2C Europe</a>."
            },
            {
              "value": "PHL_2_GO",
              "description": "2GO Shipping Philippines."
            },
            {
              "value": "PHL_AIR_21",
              "description": "Air 21 Philippines."
            },
            {
              "value": "PT_SPANISH_SEUR",
              "description": "<a href=\"https://www.seur.com/en/\">Internationational Seur Spanish Portugal</a>."
            },
            {
              "value": "ES_SPANISH_SEUR",
              "description": "<a href=\"https://www.seur.com/es/\">Seur Spain</a>."
            },
            {
              "value": "SG_DPEX",
              "description": "<a href=\"https://dpex.com/\">DPEX Worldwide Singapore</a>."
            },
            {
              "value": "CH_IMX",
              "description": "IMX Switzerland."
            },
            {
              "value": "DHLG",
              "description": "DHLG."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "carrier_name_other": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The name of carrier in free-form text for unavailable carriers. This field is mandatory when <code>carrier_name</code> is <code>OTHER</code>.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "tracking_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to track the dispute-related transaction shipment.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tracking_number": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The number to track the dispute-related transaction shipment.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "carrier_name",
        "tracking_number"
      ],
      "x-publicDocsSchemaName": "response_tracking_info"
    },
    "response-action_info.json": {
      "type": "object",
      "title": "Evidence Extensions",
      "description": "The extended properties for a evidence. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "action": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+$",
          "description": "The action for which the evidence was requested or submitted.",
          "x-enum": [
            {
              "value": "ACKNOWLEDGE_RETURN_ITEM",
              "description": "The evidence corresponds to action `acknowledge_return_item`."
            },
            {
              "value": "ACCEPT_CLAIM",
              "description": "The evidence corresponds to action `accept_claim`."
            },
            {
              "value": "PROVIDE_EVIDENCE",
              "description": "The evidence corresponds to action `provide_evidence`."
            },
            {
              "value": "APPEAL",
              "description": "The evidence corresponds to action `appeal`."
            },
            {
              "value": "CANCEL",
              "description": "The evidence corresponds to action `cancel`."
            },
            {
              "value": "CHANGE_REASON",
              "description": "The evidence corresponds to action `change_reason`."
            },
            {
              "value": "ESCALATE",
              "description": "The evidence corresponds to action `escalate`."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "response_option": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+$",
          "description": "The response option for the corresponding action. Possible values:<ul><li><a href=\"/docs/api/customer-disputes/v1/#definition-acknowledgement_type\">Acknowledgement Types</a></li><li><a href=\"/docs/api/customer-disputes/v1/#definition-response-accept_claim_type\">Accept Claim types</a></li></ul>.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "mandatory": {
          "type": "boolean",
          "description": "Indicates whether the evidence is mandatory for the corresponding action and response option.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "action_info"
    },
    "response-history.json": {
      "type": "object",
      "title": "History",
      "description": "The history of the dispute.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "date": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the event occurred, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "actor": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The event-related actor.",
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The actor is the customer."
            },
            {
              "value": "SELLER",
              "description": "The actor is the merchant."
            },
            {
              "value": "PAYPAL",
              "description": "The actor is PayPal."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "event_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The type of the history event.",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The dispute was created in PayPal system."
            },
            {
              "value": "OPEN",
              "description": "The customer opened the dispute with PayPal."
            },
            {
              "value": "WAITING_FOR_BUYER_RESPONSE",
              "description": "The dispute moved to waiting for customer's response."
            },
            {
              "value": "WAITING_FOR_SELLER_RESPONSE",
              "description": "The dispute moved to waiting for merchant's response."
            },
            {
              "value": "UNDER_REVIEW",
              "description": "The dispute moved to a state where it is being reviewed by PayPal."
            },
            {
              "value": "RESOLVED",
              "description": "The dispute was resolved."
            },
            {
              "value": "OTHER",
              "description": "The dispute status moved to the <code>OTHER</code> status."
            },
            {
              "value": "EMAIL_SENT_TO_BUYER",
              "description": "The customer was notified about dispute through email."
            },
            {
              "value": "EMAIL_SENT_TO_SELLER",
              "description": "The merchant was notified about dispute through email."
            },
            {
              "value": "EVIDENCE_PROVIDED_BUYER",
              "description": "The customer provided an evidence document for the dispute."
            },
            {
              "value": "EVIDENCE_PROVIDED_SELLER",
              "description": "The merchant provided an evidence document for the dispute."
            },
            {
              "value": "APPEALED_BUYER",
              "description": "The customer appealed the dispute outcome."
            },
            {
              "value": "APPEALED_SELLER",
              "description": "The merchant appealed the dispute outcome."
            },
            {
              "value": "REASON_CHANGED",
              "description": "The customer changed the reason for the dispute."
            },
            {
              "value": "ESCALATED",
              "description": "The dispute was escalated for PayPal's review."
            },
            {
              "value": "ACCEPTED_CLAIM",
              "description": "The merchant accepted the claim and refunded the customer."
            },
            {
              "value": "CANCELLED",
              "description": "The customer cancelled the dispute."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "history"
    },
    "response-dispute_flow.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The flow ID for the dispute ID.",
      "x-enum": [
        {
          "value": "ACH_RETURNS",
          "description": "ACH returns."
        },
        {
          "value": "ACCOUNT_ISSUES",
          "description": "Account issues."
        },
        {
          "value": "ADMIN_FRAUD_REVERSAL",
          "description": "Admin fraud reversal."
        },
        {
          "value": "BILLING",
          "description": "Billing."
        },
        {
          "value": "CHARGEBACKS",
          "description": "Charge back."
        },
        {
          "value": "COMPLAINT_RESOLUTION",
          "description": "Complaint resolution."
        },
        {
          "value": "CORRECTION",
          "description": "Correction."
        },
        {
          "value": "DEBIT_CARD_CHARGEBACK",
          "description": "Debit card charge back."
        },
        {
          "value": "FAX_ROUTING",
          "description": "FAX routing."
        },
        {
          "value": "MIPS_COMPLAINT_ITEM",
          "description": "MIPS complaint item."
        },
        {
          "value": "MIPS_COMPLAINT",
          "description": "MIPS complaint."
        },
        {
          "value": "OPS_VERIFICATION_FLOW",
          "description": "OPS verification flow."
        },
        {
          "value": "PAYPAL_DISPUTE_RESOLUTION",
          "description": "PayPal dispute resolution."
        },
        {
          "value": "PINLESS_DEBIT_RETURN",
          "description": "Pin-less debit return."
        },
        {
          "value": "PRICING_ADJUSTMENT",
          "description": "Pricing adjustment."
        },
        {
          "value": "SPOOF_UNAUTH_CHILD",
          "description": "Spoof unauthorized child."
        },
        {
          "value": "SPOOF_UNAUTH_PARENT",
          "description": "Spoof unauthorized parent."
        },
        {
          "value": "THIRD_PARTY_CLAIM",
          "description": "Third-party claim."
        },
        {
          "value": "THIRD_PARTY_DISPUTE",
          "description": "Third-party dispute."
        },
        {
          "value": "TICKET_RETRIEVAL",
          "description": "Ticket retrieval."
        },
        {
          "value": "UK_EXPRESS_RETURNS",
          "description": "UK Express returns."
        },
        {
          "value": "UNKNOWN_FAXES",
          "description": "Unknown faxes."
        },
        {
          "value": "VETTING",
          "description": "Vetting."
        },
        {
          "value": "OTHER",
          "description": "Other."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "dispute_flow",
      "properties": {}
    },
    "response-offer.json": {
      "type": "object",
      "title": "Offer",
      "description": "The merchant-proposed offer for a dispute.",
      "properties": {
        "buyer_requested_amount": {
          "description": "The customer-requested refund for this dispute.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        },
        "seller_offered_amount": {
          "description": "The merchant-offered refund for this dispute.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        },
        "offer_type": {
          "$ref": "#/definitions/response-offer_type.json",
          "x-publicDocsSchemaName": "offer_type"
        },
        "history": {
          "type": "array",
          "description": "An array of history information for an offer.",
          "items": {
            "$ref": "#/definitions/response-offer_history.json",
            "x-publicDocsSchemaName": "offer_history"
          }
        }
      },
      "x-publicDocsSchemaName": "offer"
    },
    "response-offer_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Offer Type",
      "description": "The merchant-proposed offer type for the dispute.",
      "x-enum": [
        {
          "value": "REFUND",
          "description": "The merchant must refund the customer without any item replacement or return. This offer type is valid in the inquiry phase and occurs when a merchant is willing to refund a specific amount. Buyer acceptance is needed for partial refund offers and dispute is auto closed for full refunds. Include the <code>offer_amount</code> but omit the <code>return_shipping_address</code> parameters from the make offer request."
        },
        {
          "value": "REFUND_WITH_RETURN",
          "description": "The customer must return the item to the merchant and then merchant will refund the money. This offer type is valid in the inquiry phase and occurs when a merchant is willing to refund a specific amount and requires the customer to return the item. Include the <code>return_shipping_address</code> parameter and the <code>offer_amount</code> parameter in the make offer request."
        },
        {
          "value": "REFUND_WITH_REPLACEMENT",
          "description": "The merchant must do a refund and then send a replacement item to the customer. This offer type is valid in the inquiry phase when a merchant is willing to refund a specific amount and send the replacement item. Include the <code>offer_amount</code> parameter in the make offer request."
        },
        {
          "value": "REPLACEMENT_WITHOUT_REFUND",
          "description": "The merchant must send a replacement item to the customer with no additional refunds. This offer type is valid in the inquiry phase when a merchant is willing to replace the item without any refund. Omit the <code>offer_amount</code> parameter from the make offer request."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "offer_type",
      "properties": {}
    },
    "response-offer_history.json": {
      "type": "object",
      "title": "Offer History",
      "description": "The offer history.",
      "properties": {
        "offer_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the event occurred, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "actor": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The event-related actor.",
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The actor is the customer."
            },
            {
              "value": "SELLER",
              "description": "The actor is the merchant."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "event_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The type of the history event.",
          "x-enum": [
            {
              "value": "PROPOSED",
              "description": "The merchant or customer proposed an offer."
            },
            {
              "value": "ACCEPTED",
              "description": "The merchant or customer accepted the offer."
            },
            {
              "value": "DENIED",
              "description": "The merchant or customer rejected the offer."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "offer_type": {
          "$ref": "#/definitions/response-offer_type.json",
          "x-publicDocsSchemaName": "offer_type"
        },
        "offer_amount": {
          "description": "The offer amount.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "notes": {
          "type": "string",
          "readOnly": true,
          "description": "The user submitted notes.",
          "minLength": 1,
          "maxLength": 2000,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "dispute_life_cycle_stage": {
          "readOnly": true,
          "description": "The dispute life cycle stage during the offer event.",
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json"
        }
      },
      "x-publicDocsSchemaName": "offer_history"
    },
    "response-refund_details.json": {
      "type": "object",
      "title": "Refund Details",
      "description": "The refund details.",
      "properties": {
        "allowed_refund_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The maximum refundable amount.",
          "x-visibility": {
            "extent": "EXTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "refunds": {
          "type": "array",
          "description": "An array of refund objects.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "$ref": "#/definitions/response-refund.json",
            "x-publicDocsSchemaName": "refund"
          }
        }
      },
      "x-publicDocsSchemaName": "response_refund_details"
    },
    "response-refund.json": {
      "type": "object",
      "title": "Refund",
      "description": "The refund details.",
      "properties": {
        "gross_amount": {
          "description": "The gross amount of the refund.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "transaction_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time of the refund.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The ID of the transaction for the refund, as it appears to the merchant.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "invoice_number": {
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "pattern": "^[A-Za-z0-9:\\-|]+$",
          "description": "The ID of the invoice for the refund.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Z_]+$",
          "description": "The status of the refund.",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The refund was successful."
            },
            {
              "value": "FAILED",
              "description": "The refund had failed."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "refund"
    },
    "response-communication_details.json": {
      "type": "object",
      "title": "Contact Details",
      "description": "The contact details that a merchant provides to the customer to use to share their evidence documents.",
      "properties": {
        "email": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-email_address.json",
          "description": "The email address that is provided by the merchant where the customer can share the evidences.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The merchant provided notes that are visible to both the customer and PayPal.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "time_posted": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the contact details were posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "communication_details"
    },
    "response-partner_action.json": {
      "type": "object",
      "title": "Partner Action",
      "description": "A PayPal-requested or partner action for the dispute.",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9_-]+$",
          "readOnly": true,
          "description": "The ID for the action.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The action name.",
          "x-enum": [
            {
              "value": "PROVIDE_PROVISIONAL_CREDIT",
              "description": "The partner must provide the consumer with provisional credit."
            },
            {
              "value": "DENY_DISPUTE",
              "description": "The partner denies dispute and must reverse the provisional credit, if it was already given."
            },
            {
              "value": "ACCEPT_DISPUTE",
              "description": "The partner accepts dispute and must provide permanent provisional credit to the consumer, if it was already given or recover the money."
            },
            {
              "value": "WRITE_OFF",
              "description": "The partner must write off the dispute."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "description": "The reason for the partner action.",
          "$ref": "#/definitions/response-adjudication_reason.json"
        },
        "create_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the action was initiated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the action was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "due_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time before which the action must be performed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The status of the action.",
          "x-enum": [
            {
              "value": "PENDING",
              "description": "The action is pending and awaits partner processing. For this type of action, the partner must update the action's status after they complete the required actions."
            },
            {
              "value": "COMPLETED",
              "description": "The partner has processed the action."
            },
            {
              "value": "FAILED",
              "description": "The partner could not perform the action. The partner may send the `COMPLETED` status once the action is processed successfully."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "readOnly": true,
          "description": "The amount associated with the partner action, either it is recommended by PayPal for which the partner need to take action or it is taken by the partner at their end.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "crypto_details": {
          "description": "The details of the crypto-currency trade associated with the partner action for the crypto involved disputes.",
          "$ref": "#/definitions/response-crypto_details.json"
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "create_time"
      ],
      "x-publicDocsSchemaName": "partner_action"
    },
    "response-adjudication_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The reason for the adjudication type.",
      "x-enum": [
        {
          "value": "AMOUNT_DIFFERENCE_EXPECTED_DUE_TO_FEES",
          "description": "Seller submitted proof of correct charge."
        },
        {
          "value": "BILLING_AGREEMENT_CHANGE_DISCLOSED",
          "description": "Seller had disclosed billing agreement changes upfront."
        },
        {
          "value": "BILLING_AGREEMENT_CHANGE_NOT_DISCLOSED",
          "description": "Seller had not disclosed billing agreement changes upfront."
        },
        {
          "value": "BILLING_AGREEMENT_DATE_CHANGE_DISCLOSED",
          "description": "Seller had shared change in billing agreement date upfront."
        },
        {
          "value": "BILLING_AGREEMENT_DATE_CHANGE_NOT_DISCLOSED",
          "description": "Seller had not shared change in billing agreement date upfront."
        },
        {
          "value": "BUYER_ATTEMPTED_RETURN",
          "description": "Buyer has attempted to return the item."
        },
        {
          "value": "BUYER_BILLED_ONLY_ONCE",
          "description": "Buyer was charged only once and did not submit sufficient evidence of duplicate charge."
        },
        {
          "value": "BUYER_CANCELLED_CASE",
          "description": "Buyer cancelled the case."
        },
        {
          "value": "BUYER_CANCELLED_SERVICE",
          "description": "Buyer cancelled the service or recurring transaction."
        },
        {
          "value": "BUYER_FAILED_TO_DESCRIBE_ISSUE",
          "description": "Buyer did not describe the issue to justify the refund."
        },
        {
          "value": "BUYER_HAS_POSSESSION_OF_THE_MERCHANDISE_OR_SERVICE",
          "description": "Buyer continues to possess the item or has received the service."
        },
        {
          "value": "BUYER_MADE_NO_ATTEMPT_TO_RESOLVE_WITH_SELLER",
          "description": "Buyer did not attempt to resolve the issue with the seller."
        },
        {
          "value": "BUYER_NOT_IN_POSSESSION_OF_ITEM_TO_RETURN",
          "description": "Buyer is not in possession of the item to be returned."
        },
        {
          "value": "BUYER_PROVIDED_CREDIT_RECEIPT",
          "description": "Buyer provided credit receipt or relevant documentation."
        },
        {
          "value": "BUYER_RECEIVED_DUPLICATE_REFUND",
          "description": "Buyer received the refund twice."
        },
        {
          "value": "CANCELLED_PER_TERMS_OF_BILLING_AGREEMENT",
          "description": "Billing agreement was cancelled as per agreed terms."
        },
        {
          "value": "CARD_NOT_STOLEN",
          "description": "Buyer in possession of the card which was reported as stolen or lost."
        },
        {
          "value": "CARD_NOT_STOLEN_BEFORE_AUTH",
          "description": "Buyer reported card as lost or stolen after the authorization date."
        },
        {
          "value": "CUSTOMER_RECOGNIZES_TRANSACTION",
          "description": "Buyer recognizes the transaction as valid."
        },
        {
          "value": "DECISION_BASED_ON_AVAILABLE_INFORMATION",
          "description": "Case decision was made as per available information when specific reasons are not applicable."
        },
        {
          "value": "DELIVERY_AFTER_EXPECTED_DELIVERY_DATE",
          "description": "Item or service was delivered after the expected delivery date had passed."
        },
        {
          "value": "DELIVERY_DUE_WITHIN_EXPECTED_DELIVERY_DATE",
          "description": "Delivery of the item or service is due within the expected delivery date."
        },
        {
          "value": "DELIVERY_OR_SERVICE_REFUSED",
          "description": "Seller refused delivery or service of the item."
        },
        {
          "value": "DOCUMENTATION_MATCHES_AMOUNT_CHARGED",
          "description": "Documentation provided supports the amount that was charged."
        },
        {
          "value": "DOCUMENTATION_MATCHES_AMOUNT_IN_PAYPAL_ACCOUNT",
          "description": "Documentation provided supports the amount charged on buyer's account."
        },
        {
          "value": "DUPLICATE_ADD_FUNDS",
          "description": "Buyer submitted sufficient proof of duplicate charge."
        },
        {
          "value": "EFFORTLESS_SELLER_PROTECTION",
          "description": "The case is decided based on Protection Policy."
        },
        {
          "value": "IN_PERSON_DELIVERY",
          "description": "Seller delivered the item in person."
        },
        {
          "value": "INELIGIBLE_BUYER_PROTECTION_POLICY",
          "description": "The pattern identified does not meet buyer protection eligibility."
        },
        {
          "value": "INELIGIBLE_SELLER_PROTECTION_POLICY",
          "description": "The pattern identified does not meet seller protection eligibility."
        },
        {
          "value": "INQUIRY_OFFER_ITEM_REPLACED",
          "description": "Seller agreed to replace the item."
        },
        {
          "value": "INQUIRY_OFFER_PARTIAL_REFUND",
          "description": "Seller agreed to issue a partial refund to the buyer."
        },
        {
          "value": "INQUIRY_OFFER_REFUND_WITH_ITEM_RETURN",
          "description": "Seller agreed to issue a refund for item return."
        },
        {
          "value": "INQUIRY_OFFER_REFUND_WITH_REPLACEMENT",
          "description": "Seller agreed to replace the damaged item along with refunds applicable."
        },
        {
          "value": "INVALID_APPEAL_REASON",
          "description": "Seller appealed twice for the same reason with invalid reason."
        },
        {
          "value": "INVALID_CHARGEBACK_SELLER_FAVOUR",
          "description": "The case is decided as invalid based on external network policy."
        },
        {
          "value": "INVALID_DELIVERY_PROOF",
          "description": "Seller provided invalid proof of delivery."
        },
        {
          "value": "INVALID_DELIVERY_PROOF_SIGNATURE",
          "description": "Buyer's signature confirmation missing in proof of delivery."
        },
        {
          "value": "INVALID_DOCUMENTATION",
          "description": "The documentation provided is not valid."
        },
        {
          "value": "INVALID_PROOF_OF_SHIPMENT",
          "description": "Seller provided invalid proof of shipment."
        },
        {
          "value": "INVALID_REFUND_PROOF",
          "description": "Seller provided invalid proof of refund."
        },
        {
          "value": "INVALID_RETURN_DELIVERY_NO_SIGNATURE_PROOF",
          "description": "Seller's signature confirmation missing in proof of return."
        },
        {
          "value": "INVALID_RETURN_DELIVERY_PROOF",
          "description": "Buyer provided invalid proof of return."
        },
        {
          "value": "INVALID_TRACKING",
          "description": "Seller provided invalid tracking information."
        },
        {
          "value": "ITEM_ALTERED_REPAIRED",
          "description": "Item was altered or repaired while in buyer's possession."
        },
        {
          "value": "ITEM_NOT_AS_ADVERTISED",
          "description": "Item or service provided didn’t match as it was advertised."
        },
        {
          "value": "ITEM_NOT_AS_DESCRIBED",
          "description": "Item or service provided didn’t match as it was described."
        },
        {
          "value": "ITEM_NOT_DAMAGED",
          "description": "Item or service provided was not damaged or missing any parts."
        },
        {
          "value": "ITEM_NOT_DELIVERED",
          "description": "Seller did not deliver the item to the buyer."
        },
        {
          "value": "ITEM_NOT_RETURNED_TO_SELLER",
          "description": "Item was not returned to seller."
        },
        {
          "value": "ITEM_NOT_SHIPPED",
          "description": "Seller did not provide verified proof of shipment or delivery."
        },
        {
          "value": "ITEM_OF_DIFFERENT_QUALITY_OR_QUANTITY",
          "description": "Item sent to the buyer was of different quality, quantity, color, or size."
        },
        {
          "value": "ITEM_OUT_OF_STOCK_AND_NOT_DELIVERED",
          "description": "Item was not delivered as it was no longer in stock."
        },
        {
          "value": "ITEM_RETURNED_TO_SELLER",
          "description": "Buyer returned the item to seller."
        },
        {
          "value": "ITEM_SERVICE_MISREPRESENTED",
          "description": "Seller's listing misrepresented the item."
        },
        {
          "value": "ITEM_SERVICE_NOT_MISREPRESENTED",
          "description": "Seller's listing accurately represented the item."
        },
        {
          "value": "ITEM_SERVICE_RECEIVED_BY_BUYER",
          "description": "Buyer received the item or service from the seller."
        },
        {
          "value": "ITEM_SOLD_AS_DESCRIBED",
          "description": "Item was sold in the condition as described by the seller."
        },
        {
          "value": "ITEM_VALUE_UNAFFECTED",
          "description": "Item value or usability was not affected significantly."
        },
        {
          "value": "MULTIPLE_APPEALS_WITH_SAME_REASON",
          "description": "Seller appealed multiple times for the same reason with no additional compelling evidence."
        },
        {
          "value": "NO_DOCUMENTATION_FROM_BUYER",
          "description": "No documentation received from buyer."
        },
        {
          "value": "NO_DOCUMENTATION_SUPPORTING_DUE_OF_CREDIT",
          "description": "No documentation given to support that credit is due to buyer."
        },
        {
          "value": "NO_PROOF_OF_DELIVERY",
          "description": "Seller did not provide proof of delivery."
        },
        {
          "value": "NO_PROOF_OF_DELIVERY_INTANGIBLE",
          "description": "Seller did not provide proof of fulfillment for a service or digital good."
        },
        {
          "value": "NO_PROTECTION_FOR_DIGITAL_GOODS_SERVICE",
          "description": "Digital goods, services, or other Intangibles not covered under Protection Policies."
        },
        {
          "value": "NO_RESPONSE_FROM_BUYER",
          "description": "No response from buyer."
        },
        {
          "value": "NO_RESPONSE_FROM_BUYER_FOR_ADDITIONAL_INFO_REQUEST",
          "description": "No response from buyer to the request for additional information."
        },
        {
          "value": "NO_SELLER_RESPONSE",
          "description": "No response from seller."
        },
        {
          "value": "NO_SELLER_RESPONSE_FOR_ADDITIONAL_INFO_REQUEST",
          "description": "No response from seller to the request for additional information."
        },
        {
          "value": "NO_VALID_SHIPMENT_PROOF",
          "description": "Seller did not provide valid proof of shipment."
        },
        {
          "value": "NOT_A_BILLING_ERROR",
          "description": "No evidence of a billing error."
        },
        {
          "value": "NOT_AN_UNAUTHORIZED_TRANSACTION",
          "description": "No evidence of unauthorized account access was found."
        },
        {
          "value": "NOT_DUPLICATE_FUNDS_ADDED_ONCE",
          "description": "Funds only added once and no duplication."
        },
        {
          "value": "NOT_DUPLICATE_FUNDS_WITHDRAWN_ONCE",
          "description": "Funds only withdrawn once and no duplication."
        },
        {
          "value": "NOT_SHIPPED_TO_CORRECT_ADDRESS",
          "description": "Seller did not ship to correct address."
        },
        {
          "value": "PARTIAL_REFUND_ISSUED_FOR_MISSING_ITEMS",
          "description": "Seller issued refund for missing items."
        },
        {
          "value": "PARTIAL_REFUND_OFFER_ACCEPTED",
          "description": "Buyer accepted the partial refund offer."
        },
        {
          "value": "PAYMENT_REVERSED_ALREADY",
          "description": "Payment was previously refunded or reversed."
        },
        {
          "value": "POS_SUBMITTED_INSTEAD_OF_POD",
          "description": "Seller submitted proof of shipment instead of proof of delivery."
        },
        {
          "value": "PREAUTH_INSTALLMENT_DUE",
          "description": "Pre-authorized installment or balance is due to seller."
        },
        {
          "value": "PROOF_OF_BILLING_AFTER_CANCELLATION_ACCEPTED",
          "description": "Buyer submitted proof of being billed after the billing agreement was cancelled."
        },
        {
          "value": "PROOF_OF_DUPLICATE_DENIED_OR_INSUFFICIENT",
          "description": "Buyer submitted proof that this was paid by another payment method."
        },
        {
          "value": "PROOF_OF_INCORRECT_TRANSACTION_AMOUNT_ACCEPTED",
          "description": "Bank or Credit does not match withdrawal amount on PayPal."
        },
        {
          "value": "PROOF_OF_PAID_BY_OTHER_MEANS_NOT_SUBMITTED",
          "description": "Buyer did not provide sufficient proof of paying by other means."
        },
        {
          "value": "PROOF_OF_TRACKING_NOT_SUBMITTED",
          "description": "Buyer did not provide sufficient proof of tracking for returns."
        },
        {
          "value": "PROTECTED_BY_PAYPAL",
          "description": "This case is covered under Seller protection program."
        },
        {
          "value": "REPRESENTED_BY_PAYPAL",
          "description": "Paypal covered the cost of the case as decided by policy."
        },
        {
          "value": "SELLER_ACCEPTED_MULTIPLE_PAYMENTS",
          "description": "Seller received multiple payments for the same purchase."
        },
        {
          "value": "SELLER_AGREED_REFUND_WITHOUT_RETURN",
          "description": "Seller chose to issue a refund without requiring item to be returned."
        },
        {
          "value": "SELLER_AGREED_TO_ISSUE_CREDIT",
          "description": "Seller agreed to refund the buyer."
        },
        {
          "value": "SELLER_ISSUED_CREDIT_TO_BUYER",
          "description": "Seller has earlier issued a credit to the buyer for the same transaction."
        },
        {
          "value": "SELLER_ISSUED_REFUND",
          "description": "Seller has issued a refund."
        },
        {
          "value": "SELLER_NOT_REACHABLE",
          "description": "Seller could not be reached to resolve case."
        },
        {
          "value": "SELLER_RECEIVED_PAYMENT_TWICE_OR_FOR_REPLACEMENT",
          "description": "Seller received the payment twice or received payment for a replacement item."
        },
        {
          "value": "SELLER_REFUSED_REFUND",
          "description": "Seller declined to issue a refund."
        },
        {
          "value": "SELLER_REFUSED_RETURN",
          "description": "Seller declined to accept return of the item."
        },
        {
          "value": "SELLER_SURCHARGED_BUYER",
          "description": "Surcharge was assessed to the buyer."
        },
        {
          "value": "SERVICE_NOT_COMPLETED_AS_AGREED",
          "description": "Service was not completed by seller as per description in the agreement."
        },
        {
          "value": "SHIPPING_COMPANY_WONT_SHIP",
          "description": "Shipping company refused to ship the item."
        },
        {
          "value": "TRACKING_PROOF_NOT_ENOUGH",
          "description": "For an item which was significantly not as described, seller cannot appeal with tracking information."
        },
        {
          "value": "TRANSACTION_AUTHORIZED_BY_CARDHOLDER",
          "description": "Card holder authorized the use of card for the transaction."
        },
        {
          "value": "TRANSACTION_CANCELLED_AFTER_AUTHORIZATION_DATE",
          "description": "Transaction was cancelled after the authorization date."
        },
        {
          "value": "TRANSACTION_CANCELLED_BEFORE_SHIPMENT_SERVICE_DATE",
          "description": "Transaction was cancelled before the shipment or service date."
        },
        {
          "value": "TRANSACTION_MATCHES_BUYER_SPENDING_PATTERN",
          "description": "Transaction similar to recent spending patterns of buyer."
        },
        {
          "value": "TRANSACTION_PROCESSED_CORRECTLY",
          "description": "Transaction processed correctly."
        },
        {
          "value": "TRUSTED_BUYER_PAYOUT",
          "description": "Payout to the buyer decided based on their profile and policy."
        },
        {
          "value": "UNUSED_SHIPPING_LABEL",
          "description": "Shipping label provided was unused."
        },
        {
          "value": "VALID_PROOF_OF_DELIVERY",
          "description": "Seller provided valid proof of delivery."
        },
        {
          "value": "VALID_PROOF_OF_DELIVERY_WITH_SIGNATURE",
          "description": "Seller provided valid proof of delivery with signature confirmation."
        },
        {
          "value": "VALID_PROOF_OF_REFUND",
          "description": "Seller provided valid proof of refund."
        },
        {
          "value": "VALID_PROOF_SUPPORTING_CLAIM",
          "description": "Buyer provided valid documents to support claim."
        },
        {
          "value": "VALID_RETURN_DELIVERY_PROOF",
          "description": "Buyer provided valid proof of return delivery."
        },
        {
          "value": "VALID_RETURN_DELIVERY_PROOF_WITH_SIGNATURE",
          "description": "Buyer provided valid proof of return delivery with signature confirmation."
        },
        {
          "value": "VALID_SHIPMENT_PROOF",
          "description": "Seller provided valid proof of shipment."
        },
        {
          "value": "VALUE_AFFECTED_SIGNIFICANTLY",
          "description": "The value of item or usability was affected significantly."
        },
        {
          "value": "PROTECTION_POLICY_APPLIES",
          "description": "The case is decided based on Protection Policy."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "adjudication_reason",
      "properties": {}
    },
    "response-crypto_details.json": {
      "type": "object",
      "title": "Crypto trade details",
      "description": "The Crypto trade details.",
      "properties": {
        "trade_id": {
          "readOnly": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The Trade id for the crypto-currency order.",
          "pattern": "^[A-Za-z0-9]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      }
    },
    "response-supporting_info.json": {
      "type": "object",
      "title": "Supporting Info",
      "description": "A merchant- or customer-submitted supporting information.",
      "properties": {
        "notes": {
          "type": "string",
          "readOnly": true,
          "description": "Any supporting notes.",
          "minLength": 1,
          "maxLength": 2000,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "documents": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "readOnly": true,
          "description": "An array of metadata for the documents which were uploaded as supporting information for the dispute.",
          "items": {
            "$ref": "#/definitions/response-document.json",
            "x-publicDocsSchemaName": "document"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "source": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The source of the Information.",
          "x-enum": [
            {
              "value": "SUBMITTED_BY_BUYER",
              "description": "Information was submitted by the customer."
            },
            {
              "value": "SUBMITTED_BY_SELLER",
              "description": "Information was submitted by the merchant."
            },
            {
              "value": "SUBMITTED_BY_PARTNER",
              "description": "Information was submitted by the partner."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "provided_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the information was received, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_life_cycle_stage": {
          "readOnly": true,
          "description": "The dispute life cycle stage for the supporting info.",
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json"
        }
      },
      "x-publicDocsSchemaName": "supporting_info"
    },
    "common_components-v3-schema-json-openapi-2.0-error.json": {
      "type": "object",
      "title": "Error",
      "description": "The error details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The human-readable, unique name of the error."
        },
        "message": {
          "type": "string",
          "description": "The message that describes the error."
        },
        "debug_id": {
          "type": "string",
          "description": "The PayPal internal ID. Used for correlation purposes."
        },
        "information_link": {
          "type": "string",
          "description": "The information link, or URI, that shows detailed information about this error for the developer.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of additional details about the error.",
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-error_details.json",
            "x-publicDocsSchemaName": "error_details"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          }
        }
      },
      "required": [
        "name",
        "message",
        "debug_id"
      ]
    },
    "common_components-v3-schema-json-openapi-2.0-error_details.json": {
      "title": "Error Details",
      "type": "object",
      "description": "The error details. Required for client-side `4XX` errors.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
        },
        "value": {
          "type": "string",
          "description": "The value of the field that caused the error."
        },
        "location": {
          "type": "string",
          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
          "default": "body"
        },
        "issue": {
          "type": "string",
          "description": "The unique, fine-grained application-level error code."
        },
        "description": {
          "type": "string",
          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
        }
      },
      "required": [
        "issue"
      ]
    },
    "response-dispute_create.json": {
      "type": "object",
      "title": "Dispute Create Response",
      "description": "The create dispute response.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "refund_info": {
          "description": "The refund details for the dispute.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/response-refund.json"
        },
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "dispute_create"
    },
    "response-dispute.json": {
      "type": "object",
      "title": "Dispute Details",
      "description": "The dispute details.",
      "properties": {
        "dispute_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9-]+$",
          "readOnly": true,
          "description": "The ID of the dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "disputed_transactions": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of transactions for which disputes were created.",
          "items": {
            "$ref": "#/definitions/response-transaction_info.json",
            "x-publicDocsSchemaName": "transaction_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "disputed_account_activities": {
          "type": "array",
          "minItems": 0,
          "maxItems": 1000,
          "description": "An array of merchant account activities.",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "items": {
            "x-publicDocsSchemaName": "account_activity",
            "$ref": "#/definitions/response-account_activity.json",
            "x-visibility": {
              "extent": "INTERNAL"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/response-dispute_reason.json",
          "x-publicDocsSchemaName": "dispute_reason"
        },
        "status": {
          "readOnly": true,
          "$ref": "#/definitions/response-status.json",
          "x-publicDocsSchemaName": "status"
        },
        "dispute_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "fee_policy": {
          "readOnly": true,
          "description": "Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.",
          "$ref": "#/definitions/response-fee_policy.json"
        },
        "external_reason_code": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The code that identifies the reason for the credit card chargeback. Each card issuer follows their own standards for defining reason type, code, and its format. For more details about the external reason code, see the card issue site. Available for only unbranded transactions.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "dispute_outcome": {
          "readOnly": true,
          "$ref": "#/definitions/response-dispute_outcome.json",
          "x-publicDocsSchemaName": "dispute_outcome"
        },
        "adjudications": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "The Teammate Adjudication details for the dispute.",
          "items": {
            "$ref": "#/definitions/response-adjudication.json",
            "x-publicDocsSchemaName": "adjudication"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "money_movements": {
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "description": "The Money movement details for the dispute.",
          "items": {
            "$ref": "#/definitions/response-money_movement.json",
            "x-publicDocsSchemaName": "money_movement"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_life_cycle_stage": {
          "readOnly": true,
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json",
          "x-publicDocsSchemaName": "dispute_lifecycle_stage"
        },
        "dispute_channel": {
          "$ref": "#/definitions/response-dispute_channel.json",
          "x-publicDocsSchemaName": "dispute_channel"
        },
        "messages": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of customer- or merchant-posted messages for the dispute.",
          "items": {
            "$ref": "#/definitions/response-message.json",
            "x-publicDocsSchemaName": "message"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "Intrinsic"
          }
        },
        "extensions": {
          "$ref": "#/definitions/response-extensions.json",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "evidences": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of evidence documents.",
          "items": {
            "$ref": "#/definitions/response-evidence.json",
            "x-publicDocsSchemaName": "response_evidence"
          }
        },
        "buyer_response_due_date": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time by when the customer must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the customer does not respond by this date and time, the dispute is closed in the merchant's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "seller_response_due_date": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time by when the merchant must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the merchant does not respond by this date and time, the dispute is closed in the customer's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "actions_eligibility": {
          "readOnly": true,
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of actions with their eligibility criteria.",
          "items": {
            "x-publicDocsSchemaName": "action_eligibility",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "$ref": "#/definitions/response-action_eligibility.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "history": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of history objects.",
          "x-publicDocsSchemaName": "history_list",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/response-history.json",
            "x-publicDocsSchemaName": "history"
          }
        },
        "dispute_flow": {
          "readOnly": true,
          "$ref": "#/definitions/response-dispute_flow.json",
          "x-publicDocsSchemaName": "dispute_flow",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "offer": {
          "readOnly": true,
          "$ref": "#/definitions/response-offer.json",
          "x-publicDocsSchemaName": "offer"
        },
        "refund_details": {
          "readOnly": true,
          "$ref": "#/definitions/response-refund_details.json",
          "x-publicDocsSchemaName": "response_refund_details",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "communication_details": {
          "$ref": "#/definitions/response-communication_details.json",
          "x-publicDocsSchemaName": "communication_details"
        },
        "supporting_info": {
          "type": "array",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of all the supporting information that are associated to this dispute.",
          "items": {
            "$ref": "#/definitions/response-supporting_info.json",
            "x-publicDocsSchemaName": "supporting_info"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "allowed_response_options": {
          "readOnly": true,
          "$ref": "#/definitions/response-allowed_response_options.json",
          "x-publicDocsSchemaName": "allowed_response_options"
        },
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/provide-evidence",
          "rel": "provide_evidence",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/appeal",
          "rel": "appeal",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/cancel",
          "rel": "cancel",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/cancel",
          "rel": "cancel_unauthorized_transaction",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/accept-claim",
          "rel": "accept_claim",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/make-offer",
          "rel": "make-offer",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/send-message",
          "rel": "send-message",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/escalate",
          "rel": "escalate",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}/provide-supporting-info",
          "rel": "provide_supporting_info",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}",
          "rel": "parent",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/disputes/{dispute_id}",
          "rel": "associated",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "dispute"
    },
    "response-fee_policy.json": {
      "type": "object",
      "title": "Fee Policy",
      "description": "Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.",
      "properties": {
        "transaction_fee": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "Transaction fee policy.",
          "x-enum": [
            {
              "value": "RETAIN_NO_FEE",
              "description": "No fee needs to be retained."
            },
            {
              "value": "RETAIN_ALL_FEE",
              "description": "All fees need to be retained."
            },
            {
              "value": "RETAIN_FIXED_FEE",
              "description": "Fixed fee associated to the transaction needs to be retained and all other fees need to be returned."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_fee": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "Dispute fee policy.",
          "x-enum": [
            {
              "value": "CHARGE_STANDARD_TIER_FEE",
              "description": "Standard tier dispute fee needs to be charged."
            },
            {
              "value": "CHARGE_HIGH_TIER_FEE",
              "description": "High tier dispute fee needs to be charged."
            },
            {
              "value": "CHARGE_CHARGEBACK_FEE",
              "description": "Chargeback fee needs to be charged."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      }
    },
    "response-adjudication.json": {
      "type": "object",
      "title": "Adjudication",
      "description": "The Adjudication details for the dispute.",
      "properties": {
        "type": {
          "description": "The type of adjudication.",
          "$ref": "#/definitions/response-adjudication_type.json"
        },
        "adjudication_time": {
          "description": "The date and time when the adjudication was done, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "description": "The reason for the adjudication type.",
          "$ref": "#/definitions/response-adjudication_reason.json"
        },
        "dispute_life_cycle_stage": {
          "description": "The dispute life cycle stage during the adjudication.",
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json"
        }
      },
      "required": [
        "type",
        "adjudication_time"
      ],
      "x-publicDocsSchemaName": "adjudication"
    },
    "response-adjudication_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The type of adjudication.",
      "x-enum": [
        {
          "value": "DENY_BUYER",
          "description": "The decision is to deny the buyer for the dispute."
        },
        {
          "value": "PAYOUT_TO_BUYER",
          "description": "The decision is to payout to the buyer."
        },
        {
          "value": "PAYOUT_TO_SELLER",
          "description": "The decision is to payout to the seller if the seller was debited earlier."
        },
        {
          "value": "RECOVER_FROM_SELLER",
          "description": "The decision is to charge the seller for the dispute if the seller was not debited already."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "adjudication_type",
      "properties": {}
    },
    "response-money_movement.json": {
      "type": "object",
      "title": "Money movement",
      "description": "The Money movement details with party.",
      "properties": {
        "affected_party": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The affected party in the money movement.",
          "x-enum": [
            {
              "value": "SELLER",
              "description": "The money movement is related to the seller."
            },
            {
              "value": "BUYER",
              "description": "The money movement is related to the buyer."
            },
            {
              "value": "PAYMENT_PROCESSOR",
              "description": "The money movement is related to the payment processing tenants such as PayPal, Venmo, Braintree etc."
            }
          ],
          "x-enumVisibility": {
            "SELLER": {
              "extent": "EXTERNAL"
            },
            "BUYER": {
              "extent": "EXTERNAL"
            },
            "PAYMENT_PROCESSOR": {
              "extent": "INTERNAL"
            }
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "description": "The amount transferred as part of the money movement.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "initiated_time": {
          "description": "The date and time when the money movement was initiated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The type of the money movement.",
          "x-enum": [
            {
              "value": "DEBIT",
              "description": "The money movement is a debit transaction."
            },
            {
              "value": "CREDIT",
              "description": "The money movement is a credit transaction."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "description": "The reason for the money movement.",
          "$ref": "#/definitions/response-money_movement_reason.json"
        }
      },
      "x-publicDocsSchemaName": "money_movement"
    },
    "response-money_movement_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The reason for the money movement.",
      "x-enum": [
        {
          "value": "DISPUTE_SETTLEMENT_FEE",
          "description": "The fee is for dispute settlement."
        },
        {
          "value": "DISPUTE_SETTLEMENT",
          "description": "The money movement is for dispute settlement."
        },
        {
          "value": "DISPUTE_FEE",
          "description": "The money movement is for dispute fee which PayPal charges to sellers for facilitating the online dispute resolution process for transactions that are processed either through a buyer’s PayPal account or through a PayPal guest checkout."
        },
        {
          "value": "CHARGEBACK_FEE",
          "description": "The money movement is for chargeback fee which PayPal charges to sellers for facilitating the chargeback process for transactions that are not processed either through a buyer’s PayPal account or through a guest checkout, and where the buyer pursues a chargeback for the transaction with their card issuer."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "money_movement_reason",
      "properties": {}
    },
    "response-action_eligibility.json": {
      "type": "object",
      "title": "Action eligibility details",
      "description": "Details about when an actor becomes eligible to perform an action.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "action_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The action which the actor can perform after given date and time.",
          "x-enum": [
            {
              "value": "ESCALATE",
              "description": "The dispute case escalation action."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "actor": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The actor which is allowed to perform the action after the eligible date and time.",
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The customer can perform the action after the eligible date and time."
            },
            {
              "value": "SELLER",
              "description": "The merchant can perform the action after the eligible date and time."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "eligible_after_time": {
          "description": "The date and time after which the actor will be eligible to perform the given action, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json"
        }
      },
      "x-publicDocsSchemaName": "action_eligibility"
    },
    "response-allowed_response_options.json": {
      "type": "object",
      "title": "Allowed Response Options",
      "description": "The allowed response options for the buyer/seller update actions.",
      "properties": {
        "acknowledge_return_item": {
          "$ref": "#/definitions/response-acknowledge_return_item_response_options.json",
          "x-publicDocsSchemaName": "acknowledge_return_item"
        },
        "accept_claim": {
          "x-publicDocsSchemaName": "accept_claim",
          "$ref": "#/definitions/response-accept_claim_response_options.json"
        },
        "make_offer": {
          "x-publicDocsSchemaName": "make_offer",
          "$ref": "#/definitions/response-make_offer_response_options.json"
        }
      },
      "x-publicDocsSchemaName": "allowed_response_options"
    },
    "response-acknowledge_return_item_response_options.json": {
      "type": "object",
      "title": "Acknowledge Return Item Response Options",
      "description": "The allowed response options when the seller acknowledges that the buyer has returned an item for the dispute.",
      "properties": {
        "acknowledgement_types": {
          "type": "array",
          "description": "The types of response when the merchant acknowledges a returned item.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/response-acknowledgement_type.json"
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          },
          "x-publicDocsSchemaName": "acknowledgement_types"
        }
      },
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "acknowledge_return_item"
    },
    "response-acknowledgement_type.json": {
      "type": "string",
      "title": "Allowed Acknowledgement Type",
      "description": "The type of acknowledgement allowed for the merchant after the customer has returned the item. The merchant can update whether the item was received and is as expected or if the item was not received.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "readOnly": true,
      "x-enum": [
        {
          "value": "ITEM_RECEIVED",
          "description": "The merchant has received the item returned by the customer."
        },
        {
          "value": "ITEM_NOT_RECEIVED",
          "description": "The merchant has not received the item."
        },
        {
          "value": "DAMAGED",
          "description": "The items returned by the customer were damaged."
        },
        {
          "value": "EMPTY_PACKAGE_OR_DIFFERENT",
          "description": "The package was empty or the goods were different from what was expected."
        },
        {
          "value": "MISSING_ITEMS",
          "description": "The package did not have all the items that were expected."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "acknowledgement_type",
      "properties": {}
    },
    "response-accept_claim_response_options.json": {
      "type": "object",
      "title": "Accept Claim Response Options",
      "description": "The allowed response options when the merchant is accepting the claim.",
      "properties": {
        "accept_claim_types": {
          "type": "array",
          "description": "The types of refund the merchant can provide the customer.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/response-accept_claim_type.json"
          },
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "accept_claim"
    },
    "response-accept_claim_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Accept Claim Type",
      "description": "The refund type proposed by the merchant for the dispute.",
      "x-enum": [
        {
          "value": "REFUND",
          "description": "The merchant must refund the customer without any item replacement or return. This type is applicable when a merchant is willing to refund the entire dispute amount without any further action from customer. Omit the <code>refund_amount</code> and <code>return_shipping_address</code> parameters from the <a href=\"/docs/api/customer-disputes/v1/#disputes-actions_accept-claim\">accept claim</a> call."
        },
        {
          "value": "REFUND_WITH_RETURN",
          "description": "The customer must return the item to the merchant and then merchant will refund the money. This type is applicable when a merchant is willing to refund the dispute amount and requires the customer to return the item. Include the <code>return_shipping_address</code> parameter in but omit the <code>refund_amount</code> parameter from the <a href=\"/docs/api/customer-disputes/v1/#disputes-actions_accept-claim\">accept claim</a> call."
        },
        {
          "value": "PARTIAL_REFUND",
          "description": "The merchant proposes a partial refund for the dispute.This type is applicable when a merchant is willing to refund an amount lesser than dispute amount. Include the <code>refund_amount</code> parameter."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "properties": {}
    },
    "response-make_offer_response_options.json": {
      "type": "object",
      "title": "Make Offer Response Options",
      "description": "The allowed response options when the merchant makes offer to the customer.",
      "properties": {
        "offer_types": {
          "type": "array",
          "description": "The types of offer the merchant can offer the customer.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/response-offer_type.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "make_offer"
    },
    "response-subsequent_action.json": {
      "title": "Subsequent Action",
      "type": "object",
      "description": "The subsequent action.",
      "properties": {
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "subsequent_action"
    },
    "common_components-v3-schema-json-openapi-2.0-patch_request.json": {
      "type": "array",
      "title": "Patch Request",
      "description": "An array of JSON patch objects to apply partial updates to resources.",
      "items": {
        "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-patch.json",
        "x-publicDocsSchemaName": "patch"
      },
      "properties": {}
    },
    "common_components-v3-schema-json-openapi-2.0-patch.json": {
      "type": "object",
      "title": "Patch",
      "description": "The JSON patch object to apply partial updates to resources.",
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation.",
          "x-enum": [
            {
              "value": "add",
              "description": "Depending on the target location reference, completes one of these functions:<ul><li><strong>The target location is an array index</strong>. Inserts a new value into the array at the specified index.</li><li><strong>The target location is an object parameter that does not already exist</strong>. Adds a new parameter to the object.</li><li><strong>The target location is an object parameter that does exist</strong>. Replaces that parameter's value.</li></ul>The <code>value</code> parameter defines the value to add. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.1\">4.1. add</a>."
            },
            {
              "value": "remove",
              "description": "Removes the value at the target location. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.2\">4.2. remove</a>."
            },
            {
              "value": "replace",
              "description": "Replaces the value at the target location with a new value. The operation object must contain a <code>value</code> parameter that defines the replacement value. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.3\">4.3. replace</a>."
            },
            {
              "value": "move",
              "description": "Removes the value at a specified location and adds it to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to move the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.4\">4.4. move</a>."
            },
            {
              "value": "copy",
              "description": "Copies the value at a specified location to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to copy the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.5\">4.5. copy</a>."
            },
            {
              "value": "test",
              "description": "Tests that a value at the target location is equal to a specified value. The operation object must contain a <code>value</code> parameter that defines the value to compare to the target location's value. For the operation to succeed, the target location must be equal to the <code>value</code> value. For test, <code>equal</code> indicates that the value at the target location and the value that <code>value</code> defines are of the same JSON type. The data type of the value determines how equality is defined:<table><thead align=\"left\"><tr><th>Type</th><th>Considered equal if both values</th></tr></thead><tbody align=\"left\"><tr><td><strong>strings</strong></td><td>Contain the same number of Unicode characters and their code points are byte-by-byte equal.</td></tr><tr><td><strong>numbers</strong></td><td>Are numerically equal.</td></tr><tr><td><strong>arrays</strong></td><td>Contain the same number of values, and each value is equal to the value at the corresponding position in the other array, by using these type-specific rules.</td></tr><tr><td><strong>objects</strong></td><td>Contain the same number of parameters, and each parameter is equal to a parameter in the other object, by comparing their keys (as strings) and their values (by using these type-specific rules).</td></tr><tr><td><strong>literals (<code>false</code>, <code>true</code>, and <code>null</code>)</strong></td><td>Are the same. The comparison is a logical comparison. For example, whitespace between the parameter values of an array is not significant. Also, ordering of the serialization of object parameters is not significant.</td></tr></tbody></table>For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.6\">4.6. test</a>."
            }
          ]
        },
        "path": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location at which to complete the operation."
        },
        "value": {
          "type": [
            "number",
            "integer",
            "string",
            "boolean",
            "null",
            "array",
            "object"
          ],
          "title": "Patch Value",
          "description": "The value to apply. The <code>remove</code> operation does not require a value."
        },
        "from": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation."
        }
      },
      "required": [
        "op"
      ]
    },
    "request-evidences.json": {
      "title": "Provide Evidence Request",
      "description": "A merchant or customer request to provide evidence for a dispute.",
      "type": "object",
      "properties": {
        "evidences": {
          "type": "array",
          "description": "An array of evidences for the dispute.",
          "minItems": 0,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/response-evidence.json",
            "x-publicDocsSchemaName": "evidence"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "return_shipping_address": {
          "description": "The return address for the item.<br/><br/>Required when the customer must return an item to the merchant for the <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#merchandise_or_service_not_as_described\"><code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code></a> dispute reason..",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable.json",
          "x-publicDocsSchemaName": "address_portable",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-securityClassification": {
        "data_class": "class3",
        "data_category": "ConsumerPersonal"
      },
      "x-publicDocsSchemaName": "evidences"
    },
    "request-accept_claim.json": {
      "type": "object",
      "title": "Accept Claim Request",
      "description": "A request by a merchant to accept a customer's merchandise claim.",
      "properties": {
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The merchant's notes about the claim. PayPal can, but the customer cannot, view these notes.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "accept_claim_reason": {
          "$ref": "#/definitions/request-accept_claim_reason.json"
        },
        "invoice_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "description": "The merchant-provided ID of the invoice for the refund. This optional value is used to map the refund to an invoice ID in the merchant's system.",
          "pattern": "^[A-Za-z0-9:\\-|]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "return_shipping_address": {
          "description": "The return address for the item.<br/><br/>Required when the customer must return an item to the merchant for the <code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code> dispute reason, especially if the refund amount is less than the dispute amount.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "refund_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "To accept a customer's claim, the amount that the merchant agrees to refund the customer. The subsequent action depends on the amount:<ul><li>If this amount is less than the customer-requested amount, the dispute updates to require customer acceptance.</li><li>If this amount is equal to or greater than the customer-requested amount, this amount is automatically refunded to the customer and the dispute closes.</li></ul>",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "accept_claim_type": {
          "description": "The refund type proposed by the merchant for the dispute.",
          "$ref": "#/definitions/response-accept_claim_type.json"
        }
      },
      "required": [
        "note"
      ],
      "x-publicDocsSchemaName": "accept_claim"
    },
    "request-accept_claim_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The merchant's reason for acceptance of the customer's claim.",
      "x-enum": [
        {
          "value": "DID_NOT_SHIP_ITEM",
          "description": "Merchant is accepting customer's claim as they could not ship the item back to the customer"
        },
        {
          "value": "TOO_TIME_CONSUMING",
          "description": "Merchant is accepting customer's claim as it is taking too long for merchant to fulfil the order"
        },
        {
          "value": "LOST_IN_MAIL",
          "description": "Merchant is accepting customer's claim as the item is lost in mail or transit"
        },
        {
          "value": "NOT_ABLE_TO_WIN",
          "description": "Merchant is accepting customer's claim as the merchant is not able to find sufficient evidence to win this dispute"
        },
        {
          "value": "COMPANY_POLICY",
          "description": "Merchant is accepting customer’s claims to follow their internal company policy"
        },
        {
          "value": "REASON_NOT_SET",
          "description": "This is the default value merchant can use if none of the above reasons apply"
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "properties": {}
    },
    "request-cancel.json": {
      "type": "object",
      "title": "Cancel Request",
      "description": "The cancel dispute request details.",
      "properties": {
        "note": {
          "type": "string",
          "description": "The note, if any, about why the merchant canceled the dispute.",
          "minLength": 1,
          "maxLength": 1048576,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "transaction_ids": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of encrypted transaction IDs for a canceled unauthorized dispute. If you omit this ID for unauthorized disputes, the issue is automatically canceled. Optional for other dispute types.",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The encrypted transaction ID for a canceled unauthorized dispute. If you omit this ID for unauthorized disputes, the issue is automatically canceled. Optional for other dispute types.",
            "pattern": "^[0-9A-Z_]+$",
            "x-publicDocsSchemaName": "transaction_id",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancellation_reason": {
          "$ref": "#/definitions/request-cancellation_reason.json"
        }
      },
      "x-publicDocsSchemaName": "cancel"
    },
    "request-cancellation_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The reason the customer cancelled the dispute.",
      "x-enum": [
        {
          "value": "ITEM_RECEIVED",
          "description": "The customer already received the item."
        },
        {
          "value": "REFUND_RECEIVED",
          "description": "The customer already received a refund for the item."
        },
        {
          "value": "OTHER",
          "description": "The customer cancelled the dispute for another reason. If OTHER is specified, customer needs to specify more information in the notes field."
        },
        {
          "value": "SHIPMENT_INFO_RECEIVED",
          "description": "The customer received the provided shipping tracking information and agrees to cancel."
        },
        {
          "value": "REPLACEMENT_RECEIVED",
          "description": "The customer received the item replacement and agrees to cancel."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "properties": {}
    },
    "response-disputes_change_reason.json": {
      "type": "object",
      "title": "Disputes Change Reason Response",
      "description": "The change reason response.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "disputes_change_reason"
    },
    "request-change_reason.json": {
      "type": "object",
      "title": "Change Reason Request",
      "description": "A request to change the reason for a dispute.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "reason": {
          "$ref": "#/definitions/response-dispute_reason.json"
        },
        "note": {
          "type": "string",
          "description": "A note.",
          "minLength": 1,
          "maxLength": 1048576,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "extensions": {
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/response-extensions.json"
        },
        "disputed_account_activities": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of customer-reported unauthorized account activities.",
          "items": {
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "$ref": "#/definitions/response-account_activity.json",
            "description": "A customer-reported unauthorized account activity.",
            "x-publicDocsSchemaName": "account_activity"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "transaction_ids": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of transaction IDs to add to the unauthorized issue.",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The encrypted transaction ID.",
            "pattern": "^[0-9A-Z_]+$",
            "x-publicDocsSchemaName": "transaction_id",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "buyer_requested_amount": {
          "description": "The customer requested refund amount for this dispute. Applicable when the customer changes the dispute reason to <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#merchandise_or_service_not_as_described\"><code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code></a>.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        },
        "item_info": {
          "description": "The customer purchased items in a disputed transaction.Applicable when the customer changes the dispute reason to <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#merchandise_or_service_not_as_described\"><code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code></a>.",
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "x-publicDocsSchemaName": "items_info",
          "items": {
            "$ref": "#/definitions/response-item_info.json",
            "description": "The information for a purchased item in a disputed transaction.",
            "x-publicDocsSchemaName": "item_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "change_reason"
    },
    "request-adjudicate.json": {
      "type": "object",
      "title": "Settle Request",
      "description": "A request to settle a dispute in either the customer's or merchant's favor.",
      "properties": {
        "adjudication_outcome": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The outcome of the adjudication.",
          "x-enum": [
            {
              "value": "BUYER_FAVOR",
              "description": "Resolves the case in the customer's favor. Outcome is set to <code>RESOLVED_BUYER_FAVOR</code>."
            },
            {
              "value": "SELLER_FAVOR",
              "description": "Resolves the case in the merchant's favor. Outcome is set to <code>RESOLVED_SELLER_FAVOR</code>."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "adjudication_outcome"
      ],
      "x-publicDocsSchemaName": "adjudicate"
    },
    "request-require_evidence.json": {
      "type": "object",
      "title": "Require Evidence Request",
      "description": "Sandbox only. Updates the state of a dispute, by ID, to either <code>WAITING_FOR_BUYER_RESPONSE</code> or <code>WAITING_FOR_SELLER_RESPONSE</code>. This state change enables either the customer or merchant to submit evidence for the dispute. Specify an <code>action</code> value in the JSON request body to indicate whether the state change enables the customer or merchant to submit evidence.",
      "properties": {
        "action": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The action. Indicates whether the state change enables the customer or merchant to submit evidence.",
          "x-enum": [
            {
              "value": "BUYER_EVIDENCE",
              "description": "Changes the status of the dispute to <code>WAITING_FOR_BUYER_RESPONSE</code>."
            },
            {
              "value": "SELLER_EVIDENCE",
              "description": "Changes the status of the dispute to <code>WAITING_FOR_SELLER_RESPONSE</code>."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "action"
      ],
      "x-publicDocsSchemaName": "require_evidence_request"
    },
    "request-escalate.json": {
      "type": "object",
      "title": "Escalate Claim Request",
      "description": "A merchant request to escalate a dispute, by ID, to a PayPal claim.",
      "properties": {
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The notes about the escalation of the dispute to a claim.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "buyer_escalation_reason": {
          "$ref": "#/definitions/request-buyer_escalation_reason.json"
        },
        "buyer_requested_amount": {
          "description": "The customer-requested refund amount for this dispute.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "required": [
        "note"
      ],
      "x-publicDocsSchemaName": "escalate"
    },
    "request-buyer_escalation_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The customer's reason for escalation.",
      "x-enum": [
        {
          "value": "SHIPMENT_NOT_ARRIVED",
          "description": "The merchant indicates that shipment would have arrived by now."
        },
        {
          "value": "FRAUDULENT_SELLER",
          "description": "The customer has evidence that the merchant might be fraudulent."
        },
        {
          "value": "FAILED_NEGOTIATION",
          "description": "The customer already failed to reach a resolution with the merchant before filing this dispute."
        },
        {
          "value": "INCONCLUSIVE_NEGOTIATION",
          "description": "The customer thinks he or she cannot reach a resolution with the merchant."
        },
        {
          "value": "REFUND_NOT_RECEIVED",
          "description": "The customer didn't receive refund as mentioned by merchant."
        },
        {
          "value": "REFUND_AMOUNT_IS_DIFFERENT",
          "description": "The customer received lesser refund amount than expected."
        },
        {
          "value": "TRACKING_ID_INVALID",
          "description": "Tracking id received from merchant is invalid."
        },
        {
          "value": "OTHER",
          "description": "The customer has other reasons, which are described in the comments. If OTHER is specified, customer needs to specify more information in the notes field."
        }
      ],
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "properties": {}
    },
    "request-send_message.json": {
      "type": "object",
      "title": "Send Message",
      "description": "The merchant request to send a message to the other party.",
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The message sent by the merchant to the other party.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "required": [
        "message"
      ],
      "x-publicDocsSchemaName": "send_message"
    },
    "request-make_offer.json": {
      "type": "object",
      "title": "Make Offer Request",
      "description": "A merchant request to make an offer to resolve a dispute.",
      "properties": {
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The merchant's notes about the offer.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "offer_amount": {
          "description": "The amount proposed to resolve the dispute.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "ConsumerPersonal"
          }
        },
        "return_shipping_address": {
          "description": "The return address for the item. Required when the customer must return an item to the merchant for the <code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code> dispute reason, especially if the refund amount is less than the dispute amount.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-address_portable.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "invoice_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "description": "The merchant-provided ID of the invoice for the refund. This optional value maps the refund to an invoice ID in the merchant's system.",
          "pattern": "^[A-Za-z0-9:\\-|]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "offer_type": {
          "$ref": "#/definitions/response-offer_type.json",
          "x-publicDocsSchemaName": "offer_type"
        }
      },
      "required": [
        "note",
        "offer_type"
      ],
      "x-publicDocsSchemaName": "make_offer"
    },
    "request-accept_offer.json": {
      "type": "object",
      "title": "Accept Offer Request",
      "description": "A customer request to accept the offer made by the merchant.",
      "properties": {
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The customer notes about accepting of offer. PayPal can but the merchant cannot view these notes.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "accept_offer"
    },
    "request-deny_offer.json": {
      "type": "object",
      "title": "Deny Offer Request",
      "description": "A customer request to deny the offer made by the merchant.",
      "properties": {
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The customer notes about the denial of offer. PayPal can but the merchant cannot view these notes.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "required": [
        "note"
      ],
      "x-publicDocsSchemaName": "deny_offer"
    },
    "request-acknowledge_return_item.json": {
      "type": "object",
      "title": "Acknowledge Return Item Request",
      "description": "A merchant request to acknowledge receipt of the disputed item that the customer returned.",
      "properties": {
        "acknowledgement_type": {
          "description": "The type of acknowledgement given by the merchant.",
          "$ref": "#/definitions/response-acknowledgement_type.json"
        },
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The merchant provided notes. PayPal can but the consumer cannot view these notes.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "evidences": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of evidence documents.",
          "items": {
            "x-publicDocsSchemaName": "acknowledge_return_item_evidence",
            "$ref": "#/definitions/request-acknowledge_return_item_evidence.json"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "acknowledge_return_item"
    },
    "request-acknowledge_return_item_evidence.json": {
      "type": "object",
      "title": "Acknowledge Return Item Evidence",
      "description": "An evidence submitted by the merchant when acknowledging a returned item.",
      "properties": {
        "evidence_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The evidence type.",
          "x-enum": [
            {
              "value": "PROOF_OF_DAMAGE",
              "description": "Documentation supporting the claim that the item is damaged."
            },
            {
              "value": "THIRDPARTY_PROOF_FOR_DAMAGE_OR_SIGNIFICANT_DIFFERENCE",
              "description": "Proof should be provided by an unbiased third-party, such as a dealer, appraiser or another individual or organisation that's qualified in the area of the item in question (other than yourself), and detail the extent of the damage or clearly explain how the item received significantly differs from the item advertised."
            },
            {
              "value": "DECLARATION",
              "description": "Signed declaration about the information provided."
            },
            {
              "value": "PROOF_OF_MISSING_ITEMS",
              "description": "Image of open box with returned items and shipping label clearly visible."
            },
            {
              "value": "PROOF_OF_EMPTY_PACKAGE_OR_DIFFERENT_ITEM",
              "description": "Image of empty box or returned items that are different from what were expected and shipping label clearly visible."
            },
            {
              "value": "PROOF_OF_ITEM_NOT_RECEIVED",
              "description": "Any proof about the non receipt of the item, such as screenshot of tracking info."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "documents": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "required": true,
          "description": "An array of evidence documents.",
          "items": {
            "x-publicDocsSchemaName": "document",
            "$ref": "#/definitions/response-document.json"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "acknowledge_return_item_evidence"
    },
    "request-provide_supporting_info.json": {
      "title": "Provide Supporting Information",
      "description": "The provide supporting information request details.",
      "type": "object",
      "properties": {
        "notes": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The notes that describe the defense.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "required": [
        "notes"
      ],
      "x-publicDocsSchemaName": "provide_supporting_info_request"
    },
    "response-dispute_eligibility.json": {
      "type": "object",
      "title": "Dispute Eligibility Response",
      "description": "The eligible and ineligible disputes with reasons.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "seller_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The seller transaction ID that is associated with the encrypted transaction ID that is passed in the request. The dispute creation is allowed on the buyer transaction ID, which must be passed in the create dispute call.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "buyer_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The buyer transaction ID that is associated with the `encrypted_transaction_id` passed in the request.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "eligible_dispute_reasons": {
          "type": "array",
          "description": "An array of the eligible disputes with reasons.",
          "x-publicDocsSchemaName": "eligible_dispute_reasons",
          "minItems": 0,
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/response-eligible_dispute_reason.json",
            "x-publicDocsSchemaName": "eligible_dispute_reason"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "ineligible_dispute_reasons": {
          "type": "array",
          "description": "An array of the ineligible disputes with ineligibility reasons.",
          "minItems": 0,
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/response-ineligible_dispute_reason.json",
            "x-publicDocsSchemaName": "ineligible_dispute_reason"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "recommended_dispute_reason": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "$ref": "#/definitions/response-dispute_reason.json",
          "x-publicDocsSchemaName": "dispute_reason"
        }
      },
      "x-publicDocsSchemaName": "dispute_eligibility"
    },
    "response-eligible_dispute_reason.json": {
      "type": "object",
      "title": "Eligible Dispute Reason",
      "description": "The eligible dispute reason.",
      "x-publicDocsSchemaName": "eligible_dispute_reason",
      "properties": {
        "dispute_reason": {
          "$ref": "#/definitions/response-dispute_reason.json",
          "x-publicDocsSchemaName": "dispute_reason"
        },
        "allowable_life_cycle": {
          "type": "object",
          "title": "Allowable Lifecycle",
          "description": "The details about the allowable lifecycle stage and the reason why it is allowed.",
          "properties": {
            "stage": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "readOnly": true,
              "pattern": "^[0-9A-Z_]+$",
              "description": "The stage in the dispute life cycle where the dispute creation is allowed.",
              "x-enum": [
                {
                  "value": "INQUIRY",
                  "description": "Dispute is allowed in the <code>INQUIRY</code> lifecycle stage."
                },
                {
                  "value": "CHARGEBACK",
                  "description": "Dispute is allowed in the <code>CHARGEBACK</code> lifecycle stage."
                }
              ],
              "x-securityClassification": {
                "data_class": "class5",
                "data_category": "Intrinsic"
              }
            },
            "reason": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2000,
              "readOnly": true,
              "description": "The reason why dispute creation is allowed in this lifecycle stage. Value is `SELLER_OPTED_OUT_OF_DISPUTE`, `LOCKED_SELLER`, `RESTRICTED_SELLER`, or `DISPUTE_DISABLED_PARTNER`.",
              "x-securityClassification": {
                "data_class": "class5",
                "data_category": "Intrinsic"
              }
            }
          }
        }
      }
    },
    "response-ineligible_dispute_reason.json": {
      "type": "object",
      "title": "Ineligible Dispute Reason",
      "description": "The ineligible dispute with the reason for ineligibility.",
      "x-publicDocsSchemaName": "ineligible_dispute_reason",
      "properties": {
        "dispute_reason": {
          "$ref": "#/definitions/response-dispute_reason.json",
          "x-publicDocsSchemaName": "dispute_reason"
        },
        "ineligibility_reason": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[A-Za-z_]+$",
          "description": "The reason that the dispute cannot be created.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      }
    },
    "request-eligibility_request.json": {
      "type": "object",
      "title": "Eligibility Request",
      "description": "For a new case, lists the eligible and ineligible dispute reasons. For an existing dispute, lists the eligible and ineligible dispute reasons; the eligible reasons are the ones that the customer can use to update the dispute. To check the eligibility of case creation, specify the encrypted transaction ID. To check the eligibility of dispute reason modification, specify the dispute ID.",
      "properties": {
        "encrypted_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The encrypted transaction ID. The response lists the eligible and ineligible dispute reasons.",
          "pattern": "^[0-9A-Z_]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The ID of the dispute. The response lists the eligible and ineligible dispute reasons. The customer can use the eligible reasons to update the dispute.",
          "pattern": "^[0-9A-Z-]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "buyer_note": {
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "Customer provided description of the issue.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "eligibility"
    },
    "response-metrics.json": {
      "type": "object",
      "title": "Metrics Response",
      "description": "The computed metrics for disputes.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "metrics": {
          "type": "array",
          "minItems": 0,
          "maxItems": 50,
          "description": "An array of dimension and measurement metrics for disputes.",
          "items": {
            "$ref": "#/definitions/response-metric.json",
            "x-publicDocsSchemaName": "metric"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "response_metrics"
    },
    "response-metric.json": {
      "type": "object",
      "title": "Metric",
      "description": "A metric.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The group name for a dimension.",
          "pattern": "^[A-Z]+$",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "count": {
          "type": "integer",
          "description": "The count of items in a group.",
          "minimum": 0,
          "maximum": 500000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "type": "array",
          "minItems": 1,
          "maxItems": 200,
          "description": "An array of the sums of amounts for each currency.",
          "items": {
            "description": "The sum of amounts for each currency.",
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
            "x-publicDocsSchemaName": "amount_item",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "metric"
    },
    "request-metrics_request.json": {
      "type": "object",
      "title": "Metrics Request",
      "description": "List disputes with metrics.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "dimension": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The dimension for which to list metrics.",
          "x-enum": [
            {
              "value": "STATUS",
              "description": "Shows the results of metrics by the <code>STATUS</code> dimension. For example, if the measure is <code>COUNT</code>, shows the count of disputes by different status."
            },
            {
              "value": "REASON",
              "description": "Shows the results of metrics by the <code>REASON</code> dimension. For example if the measure is <code>COUNT</code>, shows the count of disputes by different reason."
            },
            {
              "value": "DISPUTE_OUTCOME",
              "description": "Shows the results of metrics by the <code>OUTCOME</code> dimension. For example if the measure is <code>COUNT</code>, shows the count of disputes by different outcome."
            },
            {
              "value": "DISPUTE_STATE",
              "description": "Shows the results of metrics by the <code>DISPUTE_STATE</code> dimension. For example if the measure is <code>COUNT</code>, shows the count of disputes by different dispute states."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "measure": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The measure for the dimension for which to list metrics.",
          "x-enum": [
            {
              "value": "COUNT",
              "description": "Shows the count of disputes by the dimension in the request."
            },
            {
              "value": "DISPUTE_AMOUNT_SUM",
              "description": "Shows the sum of dispute amount of the disputes by the dimension in the request."
            },
            {
              "value": "TRANSACTION_AMOUNT_SUM",
              "description": "Shows the sum of transaction amount of associated disputes by the dimension in the request."
            },
            {
              "value": "REFUND_AMOUNT_SUM",
              "description": "Shows the sum of refund amount of associated disputes by the dimension in the request."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "filter": {
          "$ref": "#/definitions/request-filter.json"
        }
      },
      "x-publicDocsSchemaName": "request_metrics"
    },
    "request-filter.json": {
      "type": "object",
      "title": "Filter",
      "description": "A set of filters that you can use to filter the disputes in the response.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "email": {
          "description": "Filters the disputes in the response by an email.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-email_address.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[^~!@#$%^*()_{}:|\t\n/]+$",
          "description": "Filters the disputes in the response by the full name of a counter party.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "reasons": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^([0-9A-Z_]+,?)+$",
          "description": "Filters the disputes in the response by one or more reasons. Use a comma to separate multiple reasons. The response lists disputes that belong to any of the specified reasons.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "statuses": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^([0-9A-Z_]+,?)+$",
          "description": "Filters the disputes in the response by one or more statuses. Use a comma to separate multiple statuses. The response lists disputes with any of the specified statuses.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "create_time_before": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "Filters the disputes in the response to those that were created before this date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time_after": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "Filters the disputes in the response to those that were created after this date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time_before": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "Filters the disputes in the response to those that were updated before this date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time_after": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "Filters the disputes in the response to those that were updated after this date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "response_due_date_before": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "Filters the disputes in the response to those that are due before this date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "response_due_date_after": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "Filters the disputes in the response to those that are due after this date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_amount_gte": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "Filters the disputes in the response to those that have a dispute amount that is greater than or equal to this amount.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_amount_lte": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "Filters the disputes in the response to those that have a dispute amount that is less than or equal to this amount.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "filter"
    },
    "response-suggestion_response.json": {
      "type": "object",
      "title": "Dispute Search Suggestion Response",
      "description": "Arrays of auto-complete and DidYouMean values. Includes links that enable you to navigate through the response.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "suggestions": {
          "type": "array",
          "readOnly": true,
          "description": "An array of auto complete values for the given search_text if present.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "string",
            "description": "An auto complete value for the given search text.",
            "minLength": 1,
            "maxLength": 255,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "corrected_search_text": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[^~!#$%^*(){}:|]+$",
          "readOnly": true,
          "description": "The possible DidYouMean value if there are no suggestions for given search_text.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "minItems": 1,
          "maxItems": 10,
          "readOnly": true,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "rel": "self",
          "href": "https://api-m.paypal.com/v1/customer/disputes/search-suggestions?search_text={search_text}&search_field={search_field}"
        }
      ]
    },
    "referred-referred_eligibility_response.json": {
      "type": "object",
      "title": "Dispute Eligibility Response",
      "description": "The eligible and ineligible disputes with reasons. Disputes and refund information are returned, if applicable.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "eligible": {
          "type": "boolean",
          "description": "Indicates whether the transaction can be disputed.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "allowable_life_cycle": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The details about the allowable life cycle stage and the reason why it is allowed.",
          "x-enum": [
            {
              "value": "INQUIRY",
              "description": "A customer and merchant interact in an attempt to resolve a dispute without escalation to PayPal. Occurs when a customer has not received goods or a service, the goods or service are not as described, or the customer needs additional details on a transaction, such as a copy of the transaction or a receipt"
            },
            {
              "value": "CHARGEBACK",
              "description": "This stage occurs when a customer or merchant escalates an inquiry to a claim. Claims give PayPal the authority to investigate the case and determine an outcome if the dispute channel is `INTERNAL`. This state is a PayPal dispute lifecycle stage and is not to be interpreted as a credit card or debit card charge back"
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "ineligibility_reason": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The reason that the dispute could not be created.",
          "x-enum": [
            {
              "value": "ITEM_CATEGORY_NOT_DISPUTABLE",
              "description": "The item category passed in is not disputable."
            },
            {
              "value": "TRANSACTION_TYPE_NOT_DISPUTABLE",
              "description": "Transaction Type is not disputable."
            },
            {
              "value": "COUNTERPARTY_NOT_DISPUTABLE",
              "description": "Counterparty transaction is not disputable"
            },
            {
              "value": "DISPUTE_ALREADY_EXISTS",
              "description": "Dispute already exists for a Transaction."
            },
            {
              "value": "INVALID_TRANSACTION_STATUS",
              "description": "Invalid Transaction Status."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "existing_disputes": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of details about the disputes on the transaction.",
          "items": {
            "$ref": "#/definitions/referred-existing_dispute.json",
            "x-publicDocsSchemaName": "existing_dispute"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "existing_refunds": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of details about the refunds on the disputed transaction, if applicable.",
          "items": {
            "$ref": "#/definitions/referred-existing_refund.json",
            "x-publicDocsSchemaName": "refund_transaction"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "eligibility_response"
    },
    "referred-existing_dispute.json": {
      "type": "object",
      "title": "Paypal Dispute",
      "description": "The dispute details.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z-]+$",
          "description": "The ID of the PayPal-side dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/referred-existing_reason.json",
          "description": "The reason of the dispute."
        },
        "status": {
          "$ref": "#/definitions/referred-referred_status.json",
          "x-publicDocsSchemaName": "dispute_status",
          "description": "The status of the dispute."
        }
      },
      "x-publicDocsSchemaName": "existing_dispute"
    },
    "referred-existing_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Existing Reason",
      "description": "The reason for the dispute.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "x-enum": [
        {
          "value": "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
          "description": "The customer did not receive the merchandise or service."
        },
        {
          "value": "MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED",
          "description": "The customer reports that the merchandise or service is not as described."
        },
        {
          "value": "UNAUTHORISED",
          "description": "The customer did not authorize purchase of the merchandise or service."
        },
        {
          "value": "CREDIT_NOT_PROCESSED",
          "description": "The refund or credit was not processed for the customer."
        },
        {
          "value": "DUPLICATE_TRANSACTION",
          "description": "The transaction was a duplicate."
        },
        {
          "value": "INCORRECT_AMOUNT",
          "description": "The customer was charged an incorrect amount."
        },
        {
          "value": "PAYMENT_BY_OTHER_MEANS",
          "description": "The customer paid for the transaction through other means."
        },
        {
          "value": "CANCELED_RECURRING_BILLING",
          "description": "The customer was being charged for a subscription or a recurring transaction that was canceled."
        },
        {
          "value": "PROBLEM_WITH_REMITTANCE",
          "description": "A problem occurred with the remittance."
        },
        {
          "value": "OTHER",
          "description": "This represents an internal PayPal dispute scenario. You need to contact PayPal for more information in this dispute."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "existing_reason",
      "properties": {}
    },
    "referred-referred_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Dispute Status",
      "description": "The dispute status.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "x-enum": [
        {
          "value": "OPEN",
          "description": "The dispute is open."
        },
        {
          "value": "CLOSED",
          "description": "The dispute is resolved."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "referred_status",
      "properties": {}
    },
    "referred-existing_refund.json": {
      "type": "object",
      "title": "Refund Transaction",
      "description": "The refund transaction.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The ID of the PayPal refund transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The transaction status.",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "Refund transaction is newly created."
            },
            {
              "value": "DENIED",
              "description": "The refund transaction was denied."
            },
            {
              "value": "FAILED",
              "description": "The refund transaction failed."
            },
            {
              "value": "HELD",
              "description": "The refund transaction is on hold."
            },
            {
              "value": "PENDING",
              "description": "The refund transaction is waiting to be processed."
            },
            {
              "value": "PROCESSING",
              "description": "The refund transaction is getting processed."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "The payment for the transaction was partially refunded."
            },
            {
              "value": "REFUNDED",
              "description": "The payment for the transaction was successfully refunded."
            },
            {
              "value": "REVERSED",
              "description": "The payment for the refund transaction was reversed."
            },
            {
              "value": "CANCELED",
              "description": "The payment for the transaction was canceled."
            },
            {
              "value": "OTHER",
              "description": "The refund transaction is in some unknown status."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "gross_amount": {
          "description": "The gross amount of the transaction.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the refund transaction was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "refund_transaction"
    },
    "referred-referred_eligibility_request.json": {
      "type": "object",
      "title": "Eligibility Request",
      "description": "For a new third-party case, lists the eligible and ineligible dispute reasons. The customer can use the eligible reasons to create a dispute. To check the eligibility of case creation, specify the encrypted transaction ID.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The encrypted transaction ID.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "disputed_items": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of the items in the disputed transaction.",
          "items": {
            "$ref": "#/definitions/referred-referred_eligibility_request_item.json",
            "x-publicDocsSchemaName": "eligibility_request_item"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "transaction_id"
      ],
      "x-publicDocsSchemaName": "eligibility_request"
    },
    "referred-referred_eligibility_request_item.json": {
      "type": "object",
      "title": "Eligibility Request Items",
      "description": "Information about the items in the transaction.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The ID of the item.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "category": {
          "$ref": "#/definitions/referred-referred_item_category.json",
          "x-publicDocsSchemaName": "category"
        }
      },
      "x-publicDocsSchemaName": "eligibility_request_item"
    },
    "referred-referred_item_category.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Item Category",
      "description": "The category of the item in dispute.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "x-enum": [
        {
          "value": "COMPUTERS",
          "description": "Computer or related accessories."
        },
        {
          "value": "HOME",
          "description": "Home appliances."
        },
        {
          "value": "JEWELRY",
          "description": "Decorative items, ornaments, and so on."
        },
        {
          "value": "ANTIQUES",
          "description": "Antiques and collectible items."
        },
        {
          "value": "ENTERTAINMENT",
          "description": "Entertainment goods, such as video games, DVDs, and so on."
        },
        {
          "value": "OTHER_TANGIBLES",
          "description": "Other material goods."
        },
        {
          "value": "TRAVEL",
          "description": "Travel items and travel needs."
        },
        {
          "value": "SERVICE",
          "description": "Services, such as installation, repair, and so on."
        },
        {
          "value": "VIRTUAL_GOODS",
          "description": "Non-physical objects, such as online games."
        },
        {
          "value": "OTHER_INTANGIBLES",
          "description": "Other intangible goods."
        },
        {
          "value": "TICKETS",
          "description": "Tickets for events, such as sports, concerts, and so on."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "category",
      "properties": {}
    },
    "referred-referred_dispute_create_response.json": {
      "type": "object",
      "title": "Dispute Create Response",
      "description": "The create dispute response.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-publicDocsSchemaName": "link_description"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "dispute_create_response"
    },
    "referred-referred_dispute_create_request.json": {
      "type": "object",
      "title": "Dispute Create Request",
      "description": "The referred dispute details.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "dispute_flow": {
          "$ref": "#/definitions/referred-referred_dispute_flow.json"
        },
        "extensions": {
          "$ref": "#/definitions/referred-referred_extensions.json",
          "x-publicDocsSchemaName": "referred_extensions",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "transaction": {
          "description": "The details about the transactions that are part of the referred dispute.",
          "$ref": "#/definitions/referred-referred_transaction.json"
        },
        "reference_dispute": {
          "$ref": "#/definitions/referred-reference_dispute.json"
        },
        "evidences": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of partner-submitted evidence documents, such as tracking information.",
          "items": {
            "$ref": "#/definitions/referred-referred_evidence.json",
            "x-publicDocsSchemaName": "referred_evidence"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "reason": {
          "$ref": "#/definitions/referred-referred_dispute_reason.json"
        },
        "sub_reason": {
          "$ref": "#/definitions/referred-referred_sub_reason.json"
        },
        "messages": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1000,
          "description": "An array of customer- or merchant-posted messages.",
          "items": {
            "$ref": "#/definitions/referred-referred_message.json",
            "x-publicDocsSchemaName": "referred_message"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "required": [
        "transaction",
        "reference_dispute"
      ],
      "x-publicDocsSchemaName": "dispute_create_request"
    },
    "referred-referred_dispute_flow.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Dispute Flow",
      "description": "The flow ID for the dispute being created.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "x-enum": [
        {
          "value": "THIRD_PARTY_CLAIM",
          "description": "Third-party claim information that the dispute requires custom handling."
        },
        {
          "value": "THIRD_PARTY_DISPUTE",
          "description": "Third-party claim information that the dispute does not require any special handling. Defaults to default procedures."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "dispute_flow",
      "properties": {}
    },
    "referred-referred_extensions.json": {
      "type": "object",
      "title": "Referred Extensions",
      "description": "The extended properties for the dispute. Includes additional information for a dispute category, such as billing disputes, the original transaction ID, correct amount, and so on.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "transaction_hold_info": {
          "type": "object",
          "title": "Transaction Hold Information",
          "description": "The transaction hold information.",
          "properties": {
            "hold_required": {
              "type": "boolean",
              "description": "Indicates whether a temporary hold must be placed on the transaction.",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "description": "The temporary hold ID.",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "reason": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2000,
              "description": "The reason for the temporary hold on the dispute.",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            }
          }
        },
        "transaction_risk_info": {
          "type": "object",
          "title": "Transaction Risk Information",
          "description": "The transaction risk information.",
          "properties": {
            "high_risk": {
              "type": "boolean",
              "description": "Indicates whether the transaction is high risk and money must be recovered.",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "description": "The recoup ID.",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "reason": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2000,
              "description": "The reason for recoup for the dispute.",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            }
          }
        }
      },
      "x-publicDocsSchemaName": "referred_extensions"
    },
    "referred-referred_transaction.json": {
      "type": "object",
      "title": "Referred Transaction",
      "description": "The transaction for which to create a case.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The ID of the PayPal transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "items": {
          "type": "array",
          "description": "An array of items in the transaction in the dispute.",
          "items": {
            "$ref": "#/definitions/referred-referred_item_info.json",
            "x-publicDocsSchemaName": "referred_item_info"
          }
        },
        "status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The transaction status.",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The transaction processing is complete."
            },
            {
              "value": "UNCLAIMED",
              "description": "The items in the transaction are unclaimed. If they are not claimed within 30 days, the funds are returned to the sender."
            },
            {
              "value": "DENIED",
              "description": "The transaction was denied."
            },
            {
              "value": "FAILED",
              "description": "The transaction failed."
            },
            {
              "value": "HELD",
              "description": "The transaction is on hold."
            },
            {
              "value": "PENDING",
              "description": "The transaction is waiting to be processed."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "The payment for the transaction was partially refunded."
            },
            {
              "value": "REFUNDED",
              "description": "The payment for the transaction was successfully refunded."
            },
            {
              "value": "REVERSED",
              "description": "The payment for the transaction was reversed due to a chargeback or another type of reversal."
            },
            {
              "value": "CANCELED",
              "description": "The payment for the transaction was canceled."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "gross_amount": {
          "description": "The gross amount of the transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "create_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the transaction was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "transaction"
    },
    "referred-referred_item_info.json": {
      "type": "object",
      "title": "Item Information",
      "description": "The information for a purchased item in a disputed transaction.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The ID of the item.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "category": {
          "$ref": "#/definitions/referred-referred_item_category.json",
          "x-publicDocsSchemaName": "category"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The description of the item.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "partner_transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9]+$",
          "description": "The ID of the transaction in the partner system. The partner transaction ID is returned at an item level because the partner might show different transactions for different items in the cart.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/referred-referred_dispute_reason.json"
        },
        "sub_reason": {
          "$ref": "#/definitions/referred-referred_sub_reason.json"
        },
        "amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount of the item in the dispute."
        },
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "Any notes provided with the item.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "referred_item_info"
    },
    "referred-referred_dispute_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Dispute Reason",
      "description": "The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "x-enum": [
        {
          "value": "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
          "description": "The customer did not receive the merchandise or service."
        },
        {
          "value": "MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED",
          "description": "The customer reports that the merchandise or service is not as described."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "dispute_reason",
      "properties": {}
    },
    "referred-referred_sub_reason.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "title": "Dispute Sub-Reason",
      "description": "The dispute sub-reason.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "x-enum": [
        {
          "value": "INCOMPLETE_ORDER",
          "description": "The order is incomplete. It has missing parts or an incorrect quantity."
        },
        {
          "value": "DAMAGED",
          "description": "The goods are damaged."
        },
        {
          "value": "FAKE",
          "description": "The item is fake."
        },
        {
          "value": "MATERIALLY_DIFFERENT",
          "description": "The item is materially different. It is a different item, the wrong size or model,the wrong color, or used instead of new."
        },
        {
          "value": "UNUSABLE",
          "description": "The item is unusable or ruined."
        },
        {
          "value": "EXCESSIVE_SURCHARGE",
          "description": "The surcharge is incorrect."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "sub_reason",
      "properties": {}
    },
    "referred-reference_dispute.json": {
      "type": "object",
      "title": "Reference Dispute",
      "description": "The details about the partner dispute.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The dispute ID of the partner dispute for which a PayPal dispute is created.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was created at the partner site, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "reference_dispute"
    },
    "referred-referred_evidence.json": {
      "type": "object",
      "title": "Evidence",
      "description": "A merchant- or customer-submitted evidence document.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "evidence_info": {
          "$ref": "#/definitions/referred-referred_evidence_info.json",
          "x-publicDocsSchemaName": "referred_evidence_info"
        },
        "documents": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of evidence documents.",
          "items": {
            "$ref": "#/definitions/referred-referred_document.json",
            "x-publicDocsSchemaName": "referred_document"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "notes": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "Any notes about the evidence.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "referred_evidence"
    },
    "referred-referred_evidence_info.json": {
      "type": "object",
      "title": "Evidence Information",
      "description": "The evidence-related information.",
      "properties": {
        "tracking_info": {
          "type": "array",
          "description": "An array of relevant tracking information for the transaction involved in this dispute.",
          "items": {
            "$ref": "#/definitions/referred-referred_tracking_info.json",
            "x-publicDocsSchemaName": "tracking_info_item"
          }
        }
      },
      "x-publicDocsSchemaName": "referred_evidence_info"
    },
    "referred-referred_tracking_info.json": {
      "type": "object",
      "title": "Tracking Info Item",
      "description": "The tracking information item.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "carrier_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[A-Z]+$",
          "description": "The name of the carrier for the shipment of the transaction for this dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tracking_url": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "format": "uri",
          "description": "The URL to track the item shipment.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tracking_number": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9-]+$",
          "description": "The tracking number for the dispute-related transaction shipment.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tracking_status": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "Each Tracking info sent to PP should be mapped to tracking status.",
          "x-enum": [
            {
              "value": "INVALID",
              "description": "The tracking information is invalid."
            },
            {
              "value": "NO_TRACKING",
              "description": "The tracking information is not available."
            },
            {
              "value": "IN_TRANSIT",
              "description": "The disputed item is in transit."
            },
            {
              "value": "LOST",
              "description": "The disputed item is lost."
            },
            {
              "value": "DELIVERED",
              "description": "The disputed item was delivered to the customer."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "note": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "Any notes about the tracking information.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "posted_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the message was posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "tracking_info_item"
    },
    "referred-referred_document.json": {
      "type": "object",
      "title": "Document",
      "description": "The tracking document details.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9-]+$",
          "description": "The tracking document ID.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^.+\\..+$",
          "description": "The tracking document name.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The tracking document description.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "url": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "format": "uri",
          "readOnly": true,
          "description": "The tracking document URI.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "referred_document"
    },
    "referred-referred_message.json": {
      "type": "object",
      "title": "Message",
      "description": "The customer- or merchant-provided messages about the dispute.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "posted_by": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The customer or merchant who posted the message.",
          "readOnly": true,
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The customer posted the message."
            },
            {
              "value": "SELLER",
              "description": "The merchant posted the message."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "posted_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the message was posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "content": {
          "type": "string",
          "description": "The customer- or merchant-posted content.",
          "maxLength": 2000,
          "minLength": 0,
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "required": [
        "posted_by",
        "content"
      ],
      "x-publicDocsSchemaName": "referred_message"
    },
    "referred-referred_disputes.json": {
      "type": "object",
      "title": "Referred Dispute Search Response",
      "description": "An array of disputes. Includes links that enable you to navigate through the response.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "items": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of disputes that match the filter criteria. Sorted in latest to earliest creation time order.",
          "x-publicDocsSchemaName": "disputes",
          "items": {
            "x-publicDocsSchemaName": "dispute_summary",
            "$ref": "#/definitions/referred-referred_dispute_summary.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_items": {
          "type": "integer",
          "readOnly": true,
          "description": "The total number of items/Disputes available for the given search criteria.",
          "minimum": 0,
          "maximum": 5000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_pages": {
          "type": "integer",
          "readOnly": true,
          "description": "The total number of pages in the response.",
          "minimum": 0,
          "maximum": 100,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "readOnly": true
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "rel": "prev",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&create_time_before={create_time_before}&create_time_after={create_time_after}&page_token={page_token}"
        },
        {
          "rel": "self",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&create_time_before={create_time_before}&create_time_after={create_time_after}&page_token={page_token}"
        },
        {
          "rel": "next",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&create_time_before={create_time_before}&create_time_after={create_time_after}&page_token={page_token}"
        },
        {
          "rel": "first",
          "href": "https://api-m.paypal.com/v1/customer/disputes?page_size={page_size}&create_time_before={create_time_before}&create_time_after={create_time_after}"
        }
      ]
    },
    "referred-referred_dispute_summary.json": {
      "type": "object",
      "title": "Referred Dispute",
      "description": "The dispute details.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "dispute_id": {
          "type": "string",
          "readOnly": true,
          "minLength": 6,
          "maxLength": 20,
          "pattern": "^[0-9A-Z-]+$",
          "description": "The ID of the PayPal-side dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reference_disputes": {
          "type": "array",
          "description": "The details about the partner disputes.",
          "minItems": 1,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/referred-reference_dispute.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_amount": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/referred-referred_dispute_reason.json"
        },
        "status": {
          "$ref": "#/definitions/referred-referred_status.json",
          "description": "The status of the dispute.",
          "x-publicDocsSchemaName": "referred_status",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "dispute_flow": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The dispute flow name.",
          "x-enum": [
            {
              "value": "THIRD_PARTY_CLAIM",
              "description": "A third-party claim. The dispute requires custom handling."
            },
            {
              "value": "THIRD_PARTY_DISPUTE",
              "description": "A third-party dispute. The dispute does not require any special handling. Defaults to default procedures."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/customer/referred-disputes/{dispute_id}",
          "rel": "self",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "dispute_summary"
    },
    "referred-referred_dispute.json": {
      "type": "object",
      "title": "Referred Dispute Details",
      "description": "The dispute details.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z-]+$",
          "readOnly": true,
          "description": "The ID of the PayPal-side dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "readOnly": true,
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_flow": {
          "$ref": "#/definitions/referred-referred_dispute_flow.json",
          "description": "The flow ID for the dispute being created."
        },
        "reference_disputes": {
          "type": "array",
          "description": "The details about the partner disputes.",
          "minItems": 1,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/referred-reference_dispute.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "transaction": {
          "description": "The details about the transactions in the referred dispute.",
          "$ref": "#/definitions/referred-referred_transaction.json"
        },
        "extensions": {
          "$ref": "#/definitions/referred-referred_extensions.json",
          "x-publicDocsSchemaName": "referred_extensions",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "reason": {
          "$ref": "#/definitions/referred-referred_dispute_reason.json"
        },
        "sub_reason": {
          "$ref": "#/definitions/referred-referred_sub_reason.json"
        },
        "status": {
          "$ref": "#/definitions/referred-referred_status.json",
          "x-publicDocsSchemaName": "referred_status",
          "description": "The status of the dispute."
        },
        "evidences": {
          "type": "array",
          "description": "The partner-submitted evidence documents, such as tracking information.",
          "minItems": 1,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/referred-referred_evidence.json",
            "x-publicDocsSchemaName": "referred_evidence"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "refund_info": {
          "$ref": "#/definitions/referred-referred_refund_info.json"
        },
        "outcome": {
          "description": "The outcome of the case.",
          "$ref": "#/definitions/referred-referred_outcome.json"
        },
        "messages": {
          "type": "array",
          "description": "An array of customer- or merchant-posted messages.",
          "minItems": 1,
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/referred-referred_message.json",
            "x-publicDocsSchemaName": "referred_message"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/customer/referred-disputes/{dispute_id}",
          "rel": "self"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/referred-disputes/{dispute_id}/process-refund-event",
          "rel": "process-refund-event",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/customer/referred-disputes/{dispute_id}/process-adjudication-event",
          "rel": "process-adjudication-event",
          "method": "POST"
        }
      ],
      "x-publicDocsSchemaName": "referred_dispute"
    },
    "referred-referred_refund_info.json": {
      "type": "object",
      "title": "Refund Information",
      "description": "The payout details for the referred dispute.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "recipient": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The payout recipient information.",
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The customer received the refund."
            },
            {
              "value": "SELLER",
              "description": "The merchant received the refund."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "description": "The amount of the payout for the dispute.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "create_time": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the payout is made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
        },
        "transaction_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The encrypted transaction ID, if available.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payout_type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The type of payout.",
          "x-enum": [
            {
              "value": "REVERSAL",
              "description": "The payout was made with the reversal of the original transaction, from the merchant to the customer."
            },
            {
              "value": "COURTESY_CREDIT",
              "description": "The payout was made through a courtesy credit."
            },
            {
              "value": "SELLER_PROTECTION_COVERAGE",
              "description": "The payout was made through Seller Protection coverage."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "seller_protection_eligible": {
          "type": "boolean",
          "description": "Indicates whether the merchant is eligible for protection on the disputed transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "transaction_source": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The site where the transaction occurred.",
          "x-enum": [
            {
              "value": "PAYPAL",
              "description": "The transaction occurred on PayPal."
            },
            {
              "value": "OTHER",
              "description": "The transaction occurred on a third-party site other than PayPal."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "recipient",
        "amount",
        "create_time",
        "payout_type",
        "seller_protection_eligible",
        "transaction_source"
      ],
      "x-publicDocsSchemaName": "refund_info"
    },
    "referred-referred_outcome.json": {
      "type": "object",
      "title": "Case Outcome",
      "description": "The outcome of the dispute case.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "faulty_party": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "description": "The party that was at fault.",
          "x-enum": [
            {
              "value": "BUYER",
              "description": "The customer is at fault."
            },
            {
              "value": "SELLER",
              "description": "The merchant is at fault."
            },
            {
              "value": "PARTNER",
              "description": "The partner is at fault."
            },
            {
              "value": "NONE",
              "description": "No specific party is at fault."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "adjudication_reason": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The reason for the decision.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "resolution_date": {
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "description": "The date and time when the case was closed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "faulty_party",
        "adjudication_reason"
      ],
      "x-publicDocsSchemaName": "outcome"
    },
    "referred-referred_subsequent_action.json": {
      "type": "object",
      "title": "Subsequent Actions",
      "description": "A list of subsequent actions.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "links": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-securityClassification": {
        "data_class": "class4",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "referred_subsequent_actions"
    },
    "referred-referred_adjudication_info.json": {
      "type": "object",
      "title": "Adjudication Details",
      "description": "The partner-provided details that were used for adjudication on the partner's side.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "properties": {
        "dispute_amount": {
          "description": "The actual amount that was disputed on the third-party site.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "items": {
          "type": "array",
          "description": "An array of items in the transaction that is in dispute.",
          "minItems": 1,
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/referred-referred_item_info.json",
            "x-publicDocsSchemaName": "referred_item_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "outcome": {
          "description": "The outcome of the case.",
          "$ref": "#/definitions/referred-referred_outcome.json"
        },
        "extensions": {
          "$ref": "#/definitions/referred-referred_extensions.json",
          "x-publicDocsSchemaName": "referred_extensions",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "evidences": {
          "type": "array",
          "description": "An array of partner-submitted evidences, such as tracking information.",
          "minItems": 1,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/referred-referred_evidence.json",
            "x-publicDocsSchemaName": "referred_evidence"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "dispute_reason": {
          "description": "The reason for the dispute, if the reason has changed during the dispute lifecycle.",
          "$ref": "#/definitions/referred-referred_dispute_reason.json"
        },
        "closure_reason": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The reason that the dispute was closed.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "messages": {
          "type": "array",
          "description": "An array of customer- or merchant-posted messages.",
          "minItems": 1,
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/referred-referred_message.json",
            "x-publicDocsSchemaName": "referred_message"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "adjudication_info"
    },
    "event-dispute_cloud_event.json": {
      "type": "object",
      "title": "The Cloudevent envelope",
      "description": "The Cloudevent envelope as specified in https://cloudevents.io/.",
      "properties": {
        "specversion": {
          "type": "string",
          "description": "The CloudEvent specification version that this event uses, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#specversion).",
          "minLength": 1,
          "maxLength": 10,
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "datacontenttype": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The Content type of the data attribute value, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#datacontenttype).",
          "x-enum": [
            {
              "value": "application/json",
              "description": "The supported content type of the dispute event."
            }
          ],
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "data": {
          "description": "The event payload, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#event-data).",
          "$ref": "#/definitions/event-dispute_event.json"
        },
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The identifier of the event, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#id).",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "time": {
          "description": "The timestamp of the event occurrence, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#time).",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "dataschema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "format": "uri",
          "description": "The schema that data adheres to, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#dataschema).",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "subject": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "description": "The subject of the event, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#subject).",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "description": "The value describing the type of event related to the originating occurrence, as defined in the [CloudEvents Specification](https://github.com/cloudevents/spec/blob/v1.0/spec.md#type). Supported type : <br> `com.paypal.customer.disputes.created` - The dispute with the specified `dispute_id` has been created. <br> `com.paypal.customer.disputes.reason-changed` - The `reason` of the dispute has been changed <br> `com.paypal.customer.disputes.cancelled` - The dispute has been cancelled. <br> `com.paypal.customer.disputes.claim-accepted` - The merchant has accepted the claim. <br> `com.paypal.customer.disputes.offer-made` - The merchant has made an offer. <br> `com.paypal.customer.disputes.offer-accepted` - The customer has accepted the offer. <br> `com.paypal.customer.disputes.offer-denied` - The customer / merchant has provided a supporting info. <br> `com.paypal.customer.disputes.escalated` - The dispute has been escalated. <br> `com.paypal.customer.disputes.message-sent` - The customer / merchant has posted a message. <br> `com.paypal.customer.disputes.item-return-acknowledged` - The merchant has acknowledged the item returned. <br> `com.paypal.customer.disputes.evidence-provided` - The customer / merchant has provided an evidence. <br> `com.paypal.customer.disputes.supporting-info-provided` - The customer / merchant has provided supporting information. <br> `com.paypal.customer.disputes.appealed` - The customer / merchant has appealed the adjudication. <br> `com.paypal.customer.disputes.evidence-requested` - The customer / merchant has been requested the evidence. <br>  `com.paypal.customer.disputes.adjudicated` - The dispute has been adjudicated. <br> `com.paypal.customer.disputes.resolved` - The dispute has been resolved.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        },
        "source": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "format": "uri",
          "description": "The event source, as defined in https://github.com/cloudevents/spec/blob/v1.0/spec.md#source-1.",
          "x-securityClassification": {
            "data_class": "class5",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "specversion",
        "id",
        "type",
        "source",
        "datacontenttype",
        "data"
      ]
    },
    "event-dispute_event.json": {
      "type": "object",
      "title": "Dispute Event Details",
      "description": "The dispute event details.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "dispute_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z-]+$",
          "description": "The ID of the dispute.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "description": "The amount associated with the event.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "notes": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The notes associated with the event.",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "disputed_transactions": {
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "description": "An array of transactions for which disputes were created.",
          "items": {
            "$ref": "#/definitions/event-txn_info.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "description": "The date and time when the dispute event was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason": {
          "$ref": "#/definitions/response-dispute_reason.json"
        },
        "external_reason_code": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The code that identifies the reason for the credit card chargeback. Each card issuer follows their own standards for defining reason type, code, and its format. For more details about the external reason code, see the card issue site. Available for only unbranded transactions.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "response_due_date": {
          "description": "The date and time by when the response needs to be available for the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
          "$ref": "#/definitions/common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "dispute_outcome": {
          "$ref": "#/definitions/response-dispute_outcome.json"
        },
        "dispute_life_cycle_stage": {
          "$ref": "#/definitions/response-dispute_lifecycle_stage.json"
        },
        "dispute_channel": {
          "$ref": "#/definitions/response-dispute_channel.json"
        },
        "dispute_extensions": {
          "$ref": "#/definitions/response-extensions.json"
        },
        "event_extensions": {
          "$ref": "#/definitions/event-event_extensions.json"
        },
        "event_channel": {
          "$ref": "#/definitions/event-event_channel.json"
        }
      },
      "x-publicDocsSchemaName": "dispute-events"
    },
    "event-txn_info.json": {
      "type": "object",
      "title": "Transaction Information",
      "description": "The information about the disputed transaction.",
      "properties": {
        "reference_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Za-z]+$",
          "description": "The transaction reference ID, for the disputed transaction.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "items": {
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "readOnly": true,
          "description": "An array of items that were purchased as part of the transaction.",
          "items": {
            "$ref": "#/definitions/response-item_info.json",
            "x-publicDocsSchemaName": "item_info"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "transaction_information"
    },
    "event-event_extensions.json": {
      "type": "object",
      "title": "Event Extensions",
      "description": "The extended properties for the event. Includes additional information for a dispute event, such as accept-claim event, the accept claim type and reason.",
      "properties": {
        "evidences": {
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "description": "Customer or merchant posted evidences for the dispute.",
          "items": {
            "$ref": "#/definitions/response-evidence.json"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "supporting_info": {
          "type": "array",
          "minItems": 1,
          "maxItems": 50,
          "description": "Customer or merchant posted supporting information for the dispute.",
          "items": {
            "$ref": "#/definitions/response-supporting_info.json"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "messages": {
          "minItems": 1,
          "maxItems": 50,
          "type": "array",
          "description": "Customer or merchant posted messages for the dispute.",
          "items": {
            "$ref": "#/definitions/response-message.json",
            "x-publicDocsSchemaName": "message"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "adjudications": {
          "minItems": 1,
          "maxItems": 10,
          "type": "array",
          "description": "The adjudication details for the dispute.",
          "items": {
            "$ref": "#/definitions/response-adjudication.json"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "Intrinsic"
          }
        },
        "make_offer_type": {
          "$ref": "#/definitions/response-offer_type.json"
        },
        "accept_claim_type": {
          "$ref": "#/definitions/response-accept_claim_type.json"
        },
        "accept_claim_reason": {
          "$ref": "#/definitions/request-accept_claim_reason.json"
        },
        "cancellation_reason": {
          "$ref": "#/definitions/request-cancellation_reason.json"
        },
        "buyer_escalation_reason": {
          "$ref": "#/definitions/request-buyer_escalation_reason.json"
        },
        "acknowledgement_type": {
          "$ref": "#/definitions/response-acknowledgement_type.json"
        },
        "invoice_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 127,
          "pattern": "^[A-Za-z0-9:\\-|]+$",
          "description": "The merchant-provided ID of the invoice for the refund. This optional value is used to map the refund to an invoice ID in the merchant's system.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      }
    },
    "event-event_channel.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "The channel through which the dispute event was triggered in the source.",
      "x-enum": [
        {
          "value": "RESOLUTION_CENTER",
          "description": "The Resolution center channel."
        },
        {
          "value": "FRONT_OFFICE",
          "description": "The Front office teammates channel."
        },
        {
          "value": "BACK_OFFICE",
          "description": "The Back office teammates channel."
        },
        {
          "value": "CRM_TOOL",
          "description": "The customer relationship management tool channel."
        }
      ],
      "x-securityClassification": {
        "data_class": "class5",
        "data_category": "Intrinsic"
      },
      "x-publicDocsSchemaName": "event_channel",
      "properties": {}
    }
  },
  "x-errors": [
    {
      "name": "ACTION_NOT_ALLOWED_IN_CURRENT_DISPUTE_STATE",
      "message": "This action is not allowed for this dispute ID. For the allowed actions, see the HATEOAS link in [show dispute details](/docs/api/customer-disputes/v1/#disputes_get).",
      "description": "You cannot complete this action for this dispute ID."
    },
    {
      "name": "AMOUNT_SHOULD_NOT_BE_PASSED",
      "message": "For `MERCHANDISE_OR_SERVICE_NOT_RECEIVED` dsiputes, refund amount cannot be specified in accept claim as this feature is not yet supported in PayPal Dispute system.",
      "description": "You cannot specify the refund amount in an accept claim call."
    },
    {
      "name": "AUTHORIZATION_ERROR",
      "message": "Authorization error occurred.",
      "description": "An authorization error occurred. Check your credentials."
    },
    {
      "name": "DATE_CAN_NOT_BE_IN_FUTURE",
      "message": "The `start_time` is incorrect. The `start_time` must be earlier than the current date and time stamp.",
      "description": "The specified start time is in the future."
    },
    {
      "name": "DISPUTE_REASON_NOT_ELIGIBLE",
      "message": "This dispute reason is not allowed for this transaction. To review the allowed reasons for this transaction, call validate transaction eligibility. Then, retry with one of the allowed reasons.",
      "description": "The specified dispute reason is not valid."
    },
    {
      "name": "INSUFFICIENT_FUNDS",
      "message": "You have insufficient funds in your account to accept a claim for this dispute. Add the appropriate balance to your PayPal account before you accept a claim for this case.",
      "description": "Your account has insufficient funds for this claim."
    },
    {
      "name": "INTANGIBLE_ITEM_CANNOT_BE_RETURNED",
      "message": "Return shipping address cannot be specified in accept claim for intangible item related disputes as this applies only for tangible item related transactions.",
      "description": "You cannot specify the shipping address in an accept claim call for intangible item-related disputes."
    },
    {
      "name": "INTERNAL_SERVICE_ERROR",
      "message": "An internal service error has occurred.",
      "description": "Resend the request at another time."
    },
    {
      "name": "INVALID_EVIDENCE_FILE",
      "message": "The evidence file is not valid. The user can upload up to 50 MB of files for a case. Individual files must be smaller than 10 MB. The supported file formats are JPG, GIF, PNG, and PDF. Correct and retry the request.",
      "description": "The evidence file is not valid."
    },
    {
      "name": "INVALID_EVIDENCE_TYPE_PROOF_OF_FULFILLMENT",
      "message": "The `PROOF_OF_FULFILLMENT` evidence type is not a valid evidence type for this dispute reason and status. Retry the request with a different evidence type.",
      "description": "This evidence type is not valid for this dispute reason and status."
    },
    {
      "name": "INVALID_PAGE_SIZE",
      "message": "The `page_size` is outside the allowed range. A valid `page_size` is from 1 to 50. Retry the request.",
      "description": "The page size is outside the allowed range."
    },
    {
      "name": "INVALID_RETURN_SHIPPING_ADDRESS_FORMAT",
      "message": "The format specified for the return shipping address is not valid. Correct the format and retry. See [accept claim](/docs/api/customer-disputes/v1/#disputes-actions_accept-claim).",
      "description": "The shipping address format is not valid."
    },
    {
      "name": "INVALID_START_TIME_FORMAT",
      "message": "The `start_time` is not in the correct date and time format. The `start_time` must be in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, <em><code>yyyy</code></em>-<em><code>MM</code></em>-<em><code>dd</code></em><code>T</code><em><code>HH</code></em>:<em><code>mm</code></em>:<em><code>ss</code></em>.<em><code>SSS</code></em><code>Z</code>. Retry the request with the correct date and time format.",
      "description": "The start time is not in the correct date and time format."
    },
    {
      "name": "INVALID_START_TIME_RANGE",
      "message": "The `start_time` is outside the allowed range. The `start_time` must be within the last 180 days. Retry the request with a valid `start_time`.",
      "description": "The start time is outside the allowed range."
    },
    {
      "name": "ITEM_ID_IS_MANDATORY_FOR_MULTIPLE_EVIDENCES",
      "message": "An item ID is required for this dispute. Provide an item ID for each evidence document. For details, see [provide evidence](/docs/api/customer-disputes/v1/#disputes-actions_provide-evidence).",
      "description": "An item ID is required."
    },
    {
      "name": "MANDATORY_PARAMETER_MISSING",
      "message": "When you create a dispute, a `buyer_transaction_id` is required but it is missing. Retry with a valid `buyer_transaction_id`.",
      "description": "The customer transaction ID, or <code>buyer_transaction_id</code>, is missing."
    },
    {
      "name": "MISSING_EVIDENCE_INFO",
      "message": "The evidence information is required but it is missing for this dispute. Retry the request with valid evidence information. For details, see [provide evidence](/docs/api/customer-disputes/v1/#disputes-actions_provide-evidence).",
      "description": "The evidence information is missing."
    },
    {
      "name": "MISSING_EVIDENCE_TYPE",
      "message": "The evidence type is required but it is missing for this dispute. Retry the request with a valid evidence type. For details, see [provide evidence](/docs/api/customer-disputes/v1/#disputes-actions_provide-evidence).",
      "description": "The evidence type is missing."
    },
    {
      "name": "MISSING_REFUND_ID",
      "message": "For `PROOF_OF_REFUND`, at least one refund ID is required but it is missing. Retry the request with a valid refund ID. For information, For details, see [provide evidence](/docs/api/customer-disputes/v1/#disputes-actions_provide-evidence).",
      "description": "A refund ID is missing. You specify <code>PROOF_OF_REFUND</code> in the <code>evidence_type</code> parameter of a <a href=\"/docs/api/customer-disputes/v1/#disputes-actions_provide-evidence\">provide evidence</a> call."
    },
    {
      "name": "MISSING_REASON_CODE",
      "message": "To add or update a reason code, you must provide a reason code but it is missing. Retry the request with a valid reason code.",
      "description": "A reason code is missing."
    },
    {
      "name": "MISSING_RETURN_SHIPPING_ADDRESS",
      "message": "For `MERCHANDISE_OR_SERVICE_NOT_RECEIVED` cases, return shipping address cannot be specified in accept claim as this applies only for `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` disputes.",
      "description": "You cannot specify the return shipping address in an accept claim call because the shipping address applies to only `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` disputes."
    },
    {
      "name": "MISSING_TRACKING_INFO",
      "message": "For `PROOF_OF_FULFILLMENT`, the tracking number and carrier name are required but they are missing. Retry the request. For information, see [`response_tracking_info`](/docs/api/customer-disputes/v1/#definition-response_tracking_info).",
      "description": "The tracking number and carrier name are missing. You specify <code>PROOF_OF_FULFILLMENT</code> in the <code>evidence_type</code> parameter of a <a href=\"/docs/api/customer-disputes/v1/#disputes-actions_provide-evidence\">provide evidence</a> call."
    },
    {
      "name": "PERMISSION_DENIED",
      "message": "You do not have the correct permission for the requested operation.",
      "description": "You do not have the correct permissions to make this request."
    },
    {
      "name": "REFUND_DECLINED_BY_COMPLIANCE_SCANNING",
      "message": "The refund has been declined by compliance scanning.",
      "description": "Refund declined by Compliance Scanning."
    },
    {
      "name": "RESOURCE_NOT_FOUND_ERROR",
      "message": "Resource not found.",
      "description": "The requested resource is not found in the system."
    },
    {
      "name": "SHIPPING_ADDRESS_SHOULD_NOT_BE_PASSED",
      "message": "If seller proposed offer is less than buyer requested refund amount, shipping address must be specified for `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` disputes. PayPal may use this in case buyer denies the offer and requests buyer to return the item to resolve the dispute.",
      "description": "You must specify the shipping address for `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` disputes."
    },
    {
      "name": "UNKNOWN_ERROR",
      "message": "Unknown exception occurred.",
      "description": "An unknown error occurred."
    },
    {
      "name": "VALIDATION_ERROR",
      "message": "Invalid request - see details.",
      "description": "One or more validation errors occurred. See the details for specific validation errors."
    }
  ],
  "x-requestValidationIssues": [
    {
      "name": "InvalidAccountActivityId",
      "message": "Not a valid account activity ID.",
      "details": "Provide a valid account activity ID. The activity ID passed does not exist."
    },
    {
      "name": "InvalidDateTimeFormat",
      "message": "Must be a date_time string of form yyyy-mm-ddThh:mm:ss(.sss)?Z.",
      "details": "Provide a properly formatted `date_time`."
    },
    {
      "name": "InvalidDisputeReason",
      "message": "Not a valid dispute reason.",
      "details": "Ensure that the dispute reason is one of the following: MERCHANDISE_OR_SERVICE_NOT_RECEIVED, MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED, UNAUTHORISED, CREDIT_NOT_PROCESSED, DUPLICATE_TRANSACTION, INCORRECT_AMOUNT, PAYMENT_BY_OTHER_MEANS, CANCELLED_RECURRING_BILLING."
    },
    {
      "name": "InvalidDisputeStatus",
      "message": "Not a valid dispute status.",
      "details": "Ensure that the dispute status is one of the following: OPEN, WAITING_FOR_BUYER_RESPONSE, WAITING_FOR_SELLER_RESPONSE, UNDER_REVIEW, RESOLVED."
    },
    {
      "name": "InvalidTransactionId",
      "message": "Not a valid transaction ID.",
      "details": "Provide a valid transaction ID. The transaction ID passed does not exist."
    },
    {
      "name": "MustNotBeBlank",
      "message": "Must not be blank.",
      "details": "Ensure that fields send in the request are not empty."
    },
    {
      "name": "ReadonlyField",
      "message": "Not valid to specify this field in a request.",
      "details": "This field is only provided as part of a response and cannot be included in a request."
    },
    {
      "name": "RequiredFieldMissing",
      "message": "Required field missing/",
      "details": "Ensure that all required fields are present and resend the request."
    }
  ]
}