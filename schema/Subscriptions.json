{
  "swagger": "2.0",
  "info": {
    "title": "Subscriptions",
    "x-publicDocsPath": "subscriptions",
    "x-serviceName": "subscriptionmgmtserv",
    "description": "You can use billing plans and subscriptions to create subscriptions that process recurring PayPal payments for physical or digital goods, or services. A plan includes pricing and billing cycle information that defines the amount and frequency of charge for a subscription. You can also define a fixed plan, such as a $5 basic plan or a volume- or graduated-based plan with pricing tiers based on the quantity purchased. For more information, see <a href=\"/docs/subscriptions/\">Subscriptions Overview</a>.",
    "version": "1.6"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "host": "api-m.paypal.com",
  "basePath": "/v1/billing",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "tokenUrl": "https://api-m.paypal.com/v1/oauth2/token",
      "flow": "application",
      "scopes": {
        "https://uri.paypal.com/services/subscriptions": "Manage plan & subscription"
      }
    }
  },
  "paths": {
    "/plans": {
      "post": {
        "summary": "Create plan",
        "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
        "operationId": "plans.create",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows billing plan details.",
            "schema": {
              "$ref": "#/definitions/plan.json"
            }
          },
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that shows billing plan details.",
            "schema": {
              "$ref": "#/definitions/plan.json",
              "example": {
                "id": "P-5ML4271244454362WXNWU5NQ",
                "product_id": "PROD-XXCD1234QWER65782",
                "name": "Video Streaming Service Plan",
                "description": "Video Streaming Service basic plan",
                "status": "ACTIVE",
                "billing_cycles": [
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 1,
                    "total_cycles": 2,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "3",
                        "currency_code": "USD"
                      },
                      "version": 1,
                      "create_time": "2020-05-27T12:13:51Z",
                      "update_time": "2020-05-27T12:13:51Z"
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 2,
                    "total_cycles": 3,
                    "pricing_scheme": {
                      "fixed_price": {
                        "currency_code": "USD",
                        "value": "6"
                      },
                      "version": 1,
                      "create_time": "2020-05-27T12:13:51Z",
                      "update_time": "2020-05-27T12:13:51Z"
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "REGULAR",
                    "sequence": 3,
                    "total_cycles": 12,
                    "pricing_scheme": {
                      "fixed_price": {
                        "currency_code": "USD",
                        "value": "10"
                      },
                      "version": 1,
                      "create_time": "2020-05-27T12:13:51Z",
                      "update_time": "2020-05-27T12:13:51Z"
                    }
                  }
                ],
                "payment_preferences": {
                  "auto_bill_outstanding": true,
                  "setup_fee": {
                    "value": "10",
                    "currency_code": "USD"
                  },
                  "setup_fee_failure_action": "CONTINUE",
                  "payment_failure_threshold": 3
                },
                "taxes": {
                  "percentage": "10",
                  "inclusive": false
                },
                "create_time": "2020-05-27T12:13:51Z",
                "update_time": "2020-05-27T12:13:51Z",
                "links": [
                  {
                    "href": "https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ",
                    "rel": "self",
                    "method": "GET"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ/deactivate",
                    "rel": "deactivate",
                    "method": "POST"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/plans/P-5ML4271244454362WXNWU5NQ/update-pricing-schemes",
                    "rel": "edit",
                    "method": "POST"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 72 hours.",
            "required": false,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "plan_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan_request_POST.json",
              "example": {
                "product_id": "PROD-XXCD1234QWER65782",
                "name": "Video Streaming Service Plan",
                "description": "Video Streaming Service basic plan",
                "status": "ACTIVE",
                "billing_cycles": [
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 1,
                    "total_cycles": 2,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "3",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 2,
                    "total_cycles": 3,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "6",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "REGULAR",
                    "sequence": 3,
                    "total_cycles": 12,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "10",
                        "currency_code": "USD"
                      }
                    }
                  }
                ],
                "payment_preferences": {
                  "auto_bill_outstanding": true,
                  "setup_fee": {
                    "value": "10",
                    "currency_code": "USD"
                  },
                  "setup_fee_failure_action": "CONTINUE",
                  "payment_failure_threshold": 3
                },
                "taxes": {
                  "percentage": "10",
                  "inclusive": false
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      },
      "get": {
        "summary": "List plans",
        "description": "Lists billing plans.",
        "operationId": "plans.list",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists billing plans.",
            "schema": {
              "$ref": "#/definitions/plan_collection.json"
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>name</code>, <code>description</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "PayPal-Subject-Account",
            "in": "header",
            "type": "string",
            "description": "An internal only header to pass a target account number to API. The value of the header is a CSV (aka Comma separated values).",
            "format": "ppaas_payer_id_v3",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "required": false,
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Filters the response by a Product ID.",
            "type": "string",
            "required": false,
            "minLength": 6,
            "maxLength": 50,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "plan_ids",
            "in": "query",
            "description": "Filters the response by list of plan IDs. Filter supports upto 10 plan IDs.",
            "type": "string",
            "required": false,
            "minimum": 3,
            "maximum": 270,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to return in the response.",
            "default": 10,
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "A non-zero integer which is the start index of the entire list of items to return in the response. The combination of `page=1` and `page_size=20` returns the first 20 items. The combination of `page=2` and `page_size=20` returns the next 20 items.",
            "default": 1,
            "type": "integer",
            "minimum": 1,
            "maximum": 100000,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "total_required",
            "in": "query",
            "description": "Indicates whether to show the total count in the response.",
            "default": false,
            "type": "boolean",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort the plans result. Valid values are create_time and status. If not set, the result will be sorted by create_time.",
            "required": false,
            "default": "create_time",
            "type": "string",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-enum": [
              {
                "value": "create_time",
                "description": "Sort plans result by create_time."
              },
              {
                "value": "status",
                "description": "Sort plans result by status."
              }
            ]
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order of the plans that are returned in the response. Valid values are asc and desc.",
            "required": false,
            "type": "string",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-enum": [
              {
                "value": "asc",
                "description": "Ascending order of the plans returned in the response."
              },
              {
                "value": "desc",
                "description": "Descending order of the plans returned in the response."
              }
            ]
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Filters the response by list of plan statuses.",
            "type": "string",
            "required": false,
            "minimum": 1,
            "maximum": 24,
            "pattern": "^[A-Z_,]+$",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-enum": [
              {
                "value": "CREATED",
                "description": "Filters the response with plan status CREATED."
              },
              {
                "value": "INACTIVE",
                "description": "Filters the response with plan status INACTIVE."
              },
              {
                "value": "ACTIVE",
                "description": "Filters the response with plan status ACTIVE."
              }
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}": {
      "get": {
        "summary": "Show plan details",
        "description": "Shows details for a plan, by ID.",
        "operationId": "plans.get",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows plan details.",
            "schema": {
              "$ref": "#/definitions/plan.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "PayPal-Subject-Account",
            "in": "header",
            "type": "string",
            "description": "An internal only header to pass a target account number to API. The value of the header is a CSV (aka Comma separated values).",
            "format": "ppaas_payer_id_v3",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "required": false,
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "The version of the plan.",
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields that are to be returned in the response. Possible value for field is <code>Product</code>.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      },
      "patch": {
        "summary": "Update plan",
        "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
        "operationId": "plans.patch",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "replace",
                  "path": "/payment_preferences/payment_failure_threshold",
                  "value": 7
                },
                {
                  "op": "replace",
                  "path": "/name",
                  "value": "Updated Video Streaming Service Plan"
                }
              ]
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      },
      "put": {
        "summary": "Replace plan",
        "description": "Replaces an entire plan with the `CREATED` status.",
        "operationId": "plans.replace",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "plan",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/plan.json",
              "example": {
                "product_id": "PROD-XXCD1234QWER65782",
                "name": "Video Streaming Service Plan",
                "description": "Video Streaming Service basic plan",
                "status": "ACTIVE",
                "billing_cycles": [
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "TRIAL",
                    "sequence": 1,
                    "total_cycles": 1,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "10",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "frequency": {
                      "interval_unit": "MONTH",
                      "interval_count": 1
                    },
                    "tenure_type": "REGULAR",
                    "sequence": 2,
                    "total_cycles": 12,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "100",
                        "currency_code": "USD"
                      }
                    }
                  }
                ],
                "payment_preferences": {
                  "auto_bill_outstanding": true,
                  "setup_fee": {
                    "value": "10",
                    "currency_code": "USD"
                  },
                  "setup_fee_failure_action": "CONTINUE",
                  "payment_failure_threshold": 3
                },
                "taxes": {
                  "percentage": "10",
                  "inclusive": false
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.1
        },
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}/activate": {
      "post": {
        "summary": "Activate plan",
        "description": "Activates a plan, by ID.",
        "operationId": "plans.activate",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}/deactivate": {
      "post": {
        "summary": "Deactivate plan",
        "description": "Deactivates a plan, by ID.",
        "operationId": "plans.deactivate",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the plan.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/plans/{id}/update-pricing-schemes": {
      "post": {
        "summary": "Update pricing",
        "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
        "operationId": "plans.update-pricing-schemes",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID for the plan.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "update-pricing-schemes_list_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/update_pricing_schemes_list_request.json",
              "example": {
                "pricing_schemes": [
                  {
                    "billing_cycle_sequence": 1,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "50",
                        "currency_code": "USD"
                      }
                    }
                  },
                  {
                    "billing_cycle_sequence": 2,
                    "pricing_scheme": {
                      "fixed_price": {
                        "value": "100",
                        "currency_code": "USD"
                      },
                      "pricing_model": "VOLUME",
                      "tiers": [
                        {
                          "starting_quantity": "1",
                          "ending_quantity": "1000",
                          "amount": {
                            "value": "150",
                            "currency_code": "USD"
                          }
                        },
                        {
                          "starting_quantity": "1001",
                          "amount": {
                            "value": "250",
                            "currency_code": "USD"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "plans"
        ]
      }
    },
    "/subscriptions": {
      "post": {
        "summary": "Create subscription",
        "description": "Creates a subscription.",
        "operationId": "subscriptions.create",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription.json"
            }
          },
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription.json",
              "example": {
                "id": "I-BW452GLLEP1G",
                "status": "APPROVAL_PENDING",
                "status_update_time": "2018-12-10T21:20:49Z",
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "plan_overridden": false,
                "start_time": "2018-11-01T00:00:00Z",
                "quantity": "20",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "subscriber": {
                  "name": {
                    "given_name": "John",
                    "surname": "Doe"
                  },
                  "email_address": "customer@example.com",
                  "payer_id": "2J6QB8YJQSJRJ",
                  "shipping_address": {
                    "name": {
                      "full_name": "John Doe"
                    },
                    "address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "Building 17",
                      "admin_area_2": "San Jose",
                      "admin_area_1": "CA",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  }
                },
                "create_time": "2018-12-10T21:20:49Z",
                "links": [
                  {
                    "href": "https://www.paypal.com/webapps/billing/subscriptions?ba_token=BA-2M539689T3856352J",
                    "rel": "approve",
                    "method": "GET"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "self",
                    "method": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "type": "string",
            "description": "The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul>",
            "required": false,
            "default": "return=minimal",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 72 hours.",
            "required": false,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_request_post.json",
              "example": {
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "start_time": "2018-11-01T00:00:00Z",
                "quantity": "20",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "subscriber": {
                  "name": {
                    "given_name": "John",
                    "surname": "Doe"
                  },
                  "email_address": "customer@example.com",
                  "shipping_address": {
                    "name": {
                      "full_name": "John Doe"
                    },
                    "address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "Building 17",
                      "admin_area_2": "San Jose",
                      "admin_area_1": "CA",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  }
                },
                "application_context": {
                  "brand_name": "walmart",
                  "locale": "en-US",
                  "shipping_preference": "SET_PROVIDED_ADDRESS",
                  "user_action": "SUBSCRIBE_NOW",
                  "payment_method": {
                    "payer_selected": "PAYPAL",
                    "payee_preferred": "IMMEDIATE_PAYMENT_REQUIRED"
                  },
                  "return_url": "https://example.com/returnUrl",
                  "cancel_url": "https://example.com/cancelUrl"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      },
      "get": {
        "summary": "List subscriptions",
        "description": "List all subscriptions for merchant account.",
        "operationId": "subscriptions.list",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the subscriptions.",
            "schema": {
              "$ref": "#/definitions/subscription_collection.json",
              "example": {
                "subscriptions": [
                  {
                    "status": "ACTIVE",
                    "id": "I-X5CK2V5CR245",
                    "auto_renewal": false,
                    "create_time": "2020-12-24T11:28:09Z",
                    "links": [
                      {
                        "href": "https://msmaster.qa.paypal.com:19472/v1/billing/subscriptions/I-X5CK2V5CR245",
                        "rel": "self",
                        "method": "GET"
                      }
                    ]
                  },
                  {
                    "status": "ACTIVE",
                    "id": "I-1VM7B0TV24J8",
                    "auto_renewal": false,
                    "create_time": "2020-12-24T11:28:08Z",
                    "links": [
                      {
                        "href": "https://msmaster.qa.paypal.com:19472/v1/billing/subscriptions/I-1VM7B0TV24J8",
                        "rel": "self",
                        "method": "GET"
                      }
                    ]
                  },
                  {
                    "status": "ACTIVE",
                    "id": "I-7MKBR4PDE2YU",
                    "auto_renewal": false,
                    "create_time": "2020-12-24T11:28:07Z",
                    "links": [
                      {
                        "href": "https://msmaster.qa.paypal.com:19472/v1/billing/subscriptions/I-7MKBR4PDE2YU",
                        "rel": "self",
                        "method": "GET"
                      }
                    ]
                  }
                ],
                "links": [
                  {
                    "href": "https://msmaster.qa.paypal.com:19472/v1/billing/subscriptions?page=1&total_required=false&page_size=10",
                    "rel": "self",
                    "method": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "plan_ids",
            "in": "query",
            "description": "Filters the response by list of plan IDs. Filter supports upto <code>70</code> plan IDs. URLs should not exceed a length of <code>2000</code> characters.",
            "type": "string",
            "required": false,
            "minimum": 3,
            "maximum": 1890,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "type": "string",
            "description": "Filters the response by list of subscription statuses.",
            "minLength": 1,
            "maxLength": 70,
            "pattern": "^[A-Z_,]+$",
            "x-enum": [
              {
                "value": "ACTIVE",
                "description": "Active state of the subscription."
              },
              {
                "value": "SUSPENDED",
                "description": "Suspended state of the subscription."
              },
              {
                "value": "CANCELLED",
                "description": "Cancelled state of the subscription."
              },
              {
                "value": "EXPIRED",
                "description": "Expired state of the subscription."
              }
            ],
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "description": "Filters the response by subscription creation start time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "description": "Filters the response by subscription creation end time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "status_updated_before",
            "in": "query",
            "required": false,
            "description": "Filters the response by status update start time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "status_updated_after",
            "in": "query",
            "required": false,
            "description": "Filters the response by status update end time for a range of subscriptions.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the response using complex expressions that could use comparison operators like ge, gt, le, lt and logical operators such as 'and' and 'or'.",
            "type": "string",
            "required": false,
            "minLength": 0,
            "maxLength": 100,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items to return in the response.",
            "default": 10,
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "A non-zero integer which is the start index of the entire list of items to return in the response. The combination of `page=1` and `page_size=20` returns the first 20 items. The combination of `page=2` and `page_size=20` returns the next 20 items.",
            "default": 1,
            "type": "integer",
            "minimum": 1,
            "maximum": 10000000,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "total_required",
            "in": "query",
            "description": "Indicates whether to show the total count in the response.",
            "default": false,
            "type": "boolean",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "payer_ids",
            "in": "query",
            "required": false,
            "description": "Filters the response by list of payer IDs.",
            "type": "string",
            "format": "ppaas_payer_id_v3",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^[2-9A-HJ-NP-Z]{13}$",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort the subscriptions result. Valid or default value is create_time. If not set, the result will be sorted by create_time.",
            "required": false,
            "default": "create_time",
            "type": "string",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-enum": [
              {
                "value": "create_time",
                "description": "Sort subscriptions result by create_time."
              }
            ]
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order of the subscriptions that are returned in the response. Valid values are asc and desc.",
            "required": false,
            "type": "string",
            "x-visibility": {
              "extent": "INTERNAL"
            },
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            },
            "x-enum": [
              {
                "value": "asc",
                "description": "Ascending order of the subscriptions returned in the response."
              },
              {
                "value": "desc",
                "description": "Descending order of the subscriptions returned in the response."
              }
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "summary": "Show subscription details",
        "description": "Shows details for a subscription, by ID.",
        "operationId": "subscriptions.get",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription.json",
              "example": {
                "id": "I-BW452GLLEP1G",
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "start_time": "2019-04-10T07:00:00Z",
                "quantity": "20",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.0"
                },
                "subscriber": {
                  "shipping_address": {
                    "name": {
                      "full_name": "John Doe"
                    },
                    "address": {
                      "address_line_1": "2211 N First Street",
                      "address_line_2": "Building 17",
                      "admin_area_2": "San Jose",
                      "admin_area_1": "CA",
                      "postal_code": "95131",
                      "country_code": "US"
                    }
                  },
                  "name": {
                    "given_name": "John",
                    "surname": "Doe"
                  },
                  "email_address": "customer@example.com",
                  "payer_id": "2J6QB8YJQSJRJ"
                },
                "billing_info": {
                  "outstanding_balance": {
                    "currency_code": "USD",
                    "value": "1.0"
                  },
                  "cycle_executions": [
                    {
                      "tenure_type": "TRIAL",
                      "sequence": 1,
                      "cycles_completed": 0,
                      "cycles_remaining": 2,
                      "total_cycles": 2
                    },
                    {
                      "tenure_type": "TRIAL",
                      "sequence": 2,
                      "cycles_completed": 0,
                      "cycles_remaining": 3,
                      "total_cycles": 3
                    },
                    {
                      "tenure_type": "REGULAR",
                      "sequence": 3,
                      "cycles_completed": 0,
                      "cycles_remaining": 12,
                      "total_cycles": 12
                    }
                  ],
                  "last_payment": {
                    "amount": {
                      "currency_code": "USD",
                      "value": "1.15"
                    },
                    "time": "2019-04-09T10:27:20Z"
                  },
                  "next_billing_time": "2019-04-10T10:00:00Z",
                  "failed_payments_count": 0
                },
                "create_time": "2019-04-09T10:26:04Z",
                "update_time": "2019-04-09T10:27:27Z",
                "links": [
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/cancel",
                    "rel": "cancel",
                    "method": "POST"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "self",
                    "method": "GET"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/suspend",
                    "rel": "suspend",
                    "method": "POST"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/capture",
                    "rel": "capture",
                    "method": "POST"
                  }
                ],
                "status": "ACTIVE",
                "status_update_time": "2019-04-09T10:27:27Z"
              }
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields that are to be returned in the response. Possible value for fields are last_failed_payment and plan.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "summary": "Update subscription",
        "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can’t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
        "operationId": "subscriptions.patch",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the `Authorization` header with the `Bearer` authentication scheme. The value is `Bearer <Access-Token>` or `Basic <client_id>:<secret>`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID for the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "patch_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json",
              "example": [
                {
                  "op": "replace",
                  "path": "/plan/billing_cycles/@sequence==1/pricing_scheme/fixed_price",
                  "value": {
                    "currency_code": "USD",
                    "value": "50.00"
                  }
                },
                {
                  "op": "replace",
                  "path": "/plan/billing_cycles/@sequence==2/pricing_scheme/tiers",
                  "value": [
                    {
                      "starting_quantity": "1",
                      "ending_quantity": "1000",
                      "amount": {
                        "value": "500",
                        "currency_code": "USD"
                      }
                    },
                    {
                      "starting_quantity": "1001",
                      "amount": {
                        "value": "2000",
                        "currency_code": "USD"
                      }
                    }
                  ]
                },
                {
                  "op": "replace",
                  "path": "/plan/payment_preferences/auto_bill_outstanding",
                  "value": true
                },
                {
                  "op": "replace",
                  "path": "/plan/payment_preferences/payment_failure_threshold",
                  "value": 1
                },
                {
                  "op": "replace",
                  "path": "/plan/taxes/percentage",
                  "value": "10"
                }
              ]
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/revise": {
      "post": {
        "summary": "Revise plan or quantity of subscription",
        "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
        "operationId": "subscriptions.revise",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/subscription_revise_response.json",
              "example": {
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "plan_overridden": false,
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "shipping_address": {
                  "name": {
                    "full_name": "John Doe"
                  },
                  "address": {
                    "address_line_1": "2211 N First Street",
                    "address_line_2": "Building 17",
                    "admin_area_2": "San Jose",
                    "admin_area_1": "CA",
                    "postal_code": "95131",
                    "country_code": "US"
                  }
                },
                "links": [
                  {
                    "href": "https://www.paypal.com/webapps/billing/subscriptions/update?ba_token=BA-2M539689T3856352J",
                    "rel": "approve",
                    "method": "GET"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "edit",
                    "method": "PATCH"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G",
                    "rel": "self",
                    "method": "GET"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/cancel",
                    "rel": "cancel",
                    "method": "POST"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/suspend",
                    "rel": "suspend",
                    "method": "POST"
                  },
                  {
                    "href": "https://api-m.paypal.com/v1/billing/subscriptions/I-BW452GLLEP1G/capture",
                    "rel": "capture",
                    "method": "POST"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_revise_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_revise_request.json",
              "example": {
                "plan_id": "P-5ML4271244454362WXNWU5NQ",
                "shipping_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "shipping_address": {
                  "name": {
                    "full_name": "John Doe"
                  },
                  "address": {
                    "address_line_1": "2211 N First Street",
                    "address_line_2": "Building 17",
                    "admin_area_2": "San Jose",
                    "admin_area_1": "CA",
                    "postal_code": "95131",
                    "country_code": "US"
                  }
                },
                "application_context": {
                  "brand_name": "walmart",
                  "locale": "en-US",
                  "shipping_preference": "SET_PROVIDED_ADDRESS",
                  "payment_method": {
                    "payer_selected": "PAYPAL",
                    "payee_preferred": "IMMEDIATE_PAYMENT_REQUIRED"
                  },
                  "return_url": "https://example.com/returnUrl",
                  "cancel_url": "https://example.com/cancelUrl"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/save": {
      "post": {
        "summary": "Save subscription",
        "description": "Internal API to be consumed by PayPal applications and not by merchants. Used to commit the changes to SOR after the buyer approves the changes made to the subscription.",
        "operationId": "subscriptions.save",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_save_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_save_request.json",
              "example": {
                "token_id": "BA-65235000D8208803V"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "INTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/suspend": {
      "post": {
        "summary": "Suspend subscription",
        "description": "Suspends the subscription.",
        "operationId": "subscriptions.suspend",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_suspend_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_suspend_request.json",
              "example": {
                "reason": "Item out of stock"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/cancel": {
      "post": {
        "summary": "Cancel subscription",
        "description": "Cancels the subscription.",
        "operationId": "subscriptions.cancel",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_cancel_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_cancel_request.json",
              "example": {
                "reason": "Not satisfied with the service"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/activate": {
      "post": {
        "summary": "Activate subscription",
        "description": "Activates the subscription.",
        "operationId": "subscriptions.activate",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_activate_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_activate_request.json",
              "example": {
                "reason": "Reactivating the subscription"
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/capture": {
      "post": {
        "summary": "Capture authorized payment on subscription",
        "description": "Captures an authorized payment from the subscriber on the subscription.",
        "operationId": "subscriptions.capture",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/transaction.json"
            }
          },
          "202": {
            "description": "Request Accepted."
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "PayPal-Request-Id",
            "in": "header",
            "type": "string",
            "description": "The server stores keys for 72 hours.",
            "required": false,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "subscription_capture_request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/subscription_capture_request.json",
              "example": {
                "note": "Charging as the balance reached the limit",
                "capture_type": "OUTSTANDING_BALANCE",
                "amount": {
                  "currency_code": "USD",
                  "value": "100"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/{id}/transactions": {
      "get": {
        "summary": "List transactions for subscription",
        "description": "Lists transactions for a subscription.",
        "operationId": "subscriptions.transactions",
        "x-slo": {
          "response_time_95th_percentile": 500,
          "error_rate": 0.001
        },
        "x-serviceName": "subscriptionmgmtserv",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows subscription details.",
            "schema": {
              "$ref": "#/definitions/transactions_list.json"
            }
          },
          "400": {
            "description": "Bad Request. Request is not well-formed, syntactically incorrect, or violates schema.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "401": {
            "description": "Authentication failed due to missing authorization header, or invalid authentication credentials.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          },
          "default": {
            "description": "The error response.",
            "schema": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json"
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "To make REST API calls, include the bearer token in the <code>Authorization</code> header with the <code>Bearer</code> authentication scheme. The value is <code>Bearer &lt;Access-Token&gt;</code> or <code>Basic &lt;client_id&gt;:&lt;secret&gt;</code>.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class3",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "description": "The media type. Required for operations with a request body. The value is `application/<format>`, where the `format` is `json`.",
            "required": true,
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subscription.",
            "type": "string",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "description": "The start time of the range of transactions to list.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "description": "The end time of the range of transactions to list.",
            "type": "string",
            "format": "ppaas_date_time_v3",
            "minLength": 20,
            "maxLength": 64,
            "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
            "x-securityClassification": {
              "data_class": "class4",
              "data_category": "Intrinsic"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/subscriptions"
            ]
          }
        ],
        "x-visibility": {
          "extent": "EXTERNAL"
        },
        "tags": [
          "subscriptions"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "plans",
      "description": "Use the `/billing/plans` resource to create and manage plans."
    },
    {
      "name": "subscriptions",
      "description": "Use the `/billing/subscriptions` resource to create and manage subscriptions."
    }
  ],
  "externalDocs": {
    "url": "../doc/USERGUIDE.md"
  },
  "definitions": {
    "plan.json": {
      "title": "Plan",
      "description": "The plan details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique PayPal-generated ID for the plan.",
          "minLength": 3,
          "maxLength": 50,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "version": {
          "type": "integer",
          "description": "The version of the plan.",
          "minimum": 1,
          "maximum": 10,
          "readOnly": true,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "product_id": {
          "type": "string",
          "description": "The ID for the product.",
          "minLength": 6,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "description": "The plan name.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "description": "The plan status.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The plan was created. You cannot create subscriptions for a plan in this state."
            },
            {
              "value": "INACTIVE",
              "description": "The plan is inactive."
            },
            {
              "value": "ACTIVE",
              "description": "The plan is active. You can only create subscriptions for a plan in this state."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "description": {
          "type": "string",
          "description": "The detailed description of the plan.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "usage_type": {
          "type": "string",
          "description": "The type of the plan, which indicates the billing pattern.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "LICENSED",
          "x-enum": [
            {
              "value": "LICENSED",
              "description": "A licensed plan."
            },
            {
              "value": "METERED",
              "description": "A metered plan."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "billing_cycles": {
          "type": "array",
          "description": "An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/billing_cycle.json",
            "x-publicDocsSchemaName": "billing_cycle"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_preferences": {
          "$ref": "#/definitions/payment_preferences.json",
          "x-publicDocsSchemaName": "payment_preferences",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "taxes": {
          "$ref": "#/definitions/taxes.json",
          "x-publicDocsSchemaName": "taxes",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "quantity_supported": {
          "type": "boolean",
          "description": "Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.",
          "default": false,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payee": {
          "readOnly": true,
          "$ref": "#/definitions/customized_x_unsupported_5294_merchant.CommonComponentsSpecification-v1-schema-payee.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "BusinessCompany"
          }
        },
        "product": {
          "description": "Product details associated to the plan.",
          "readOnly": true,
          "$ref": "#/definitions/customized_x_unsupported_4198_merchant.CommonComponentsSpecification-v1-schema-product.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "create_time": {
          "description": "The date and time when the plan was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "description": "The date and time when the plan was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
            "readOnly": true,
            "x-publicDocsSchemaName": "link_description"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}/update-pricing-schemes",
          "rel": "edit",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}/activate",
          "rel": "activate",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}/deactivate",
          "rel": "deactivate",
          "method": "POST"
        },
        {
          "href": "https://www.paypal.com/webapps/billing/plans/subscribe?plan_id={id}",
          "rel": "subscribe",
          "method": "GET",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      ],
      "x-publicDocsSchemaName": "plan"
    },
    "billing_cycle.json": {
      "title": "Billing Cycle",
      "description": "The billing cycle details.",
      "type": "object",
      "properties": {
        "pricing_scheme": {
          "description": "The active pricing scheme for this billing cycle. A free trial billing cycle does not require a pricing scheme.",
          "$ref": "#/definitions/pricing_scheme.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "frequency": {
          "description": "The frequency details for this billing cycle.",
          "$ref": "#/definitions/frequency.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tenure_type": {
          "type": "string",
          "description": "The tenure type of the billing cycle. In case of a plan having trial cycle, only 2 trial cycles are allowed per plan.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "REGULAR",
              "description": "A regular billing cycle."
            },
            {
              "value": "TRIAL",
              "description": "A trial billing cycle."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "sequence": {
          "type": "integer",
          "description": "The order in which this cycle is to run among other billing cycles. For example, a trial billing cycle has a `sequence` of `1` while a regular billing cycle has a `sequence` of `2`, so that trial cycle runs before the regular cycle.",
          "minimum": 1,
          "maximum": 99,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_cycles": {
          "type": "integer",
          "description": "The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).",
          "minimum": 0,
          "maximum": 999,
          "default": 1,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "taxes": {
          "description": "The taxation charges for legacy recurring payments.",
          "$ref": "#/definitions/taxes.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_amount": {
          "description": "The shipping charges for legacy recurring payments.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "frequency",
        "tenure_type",
        "sequence"
      ],
      "x-publicDocsSchemaName": "billing_cycle"
    },
    "pricing_scheme.json": {
      "title": "Pricing Scheme",
      "description": "The pricing scheme details.",
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "description": "The version of the pricing scheme.",
          "minimum": 0,
          "maximum": 999,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the pricing scheme.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "IN_PROGRESS",
              "description": "The pricing scheme change is in progress."
            },
            {
              "value": "ACTIVE",
              "description": "The pricing scheme change is active."
            },
            {
              "value": "INACTIVE",
              "description": "The pricing scheme is inactive."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "fixed_price": {
          "description": "The fixed amount to charge for the subscription. The changes to fixed amount are applicable to both existing and future subscriptions. For existing subscriptions, payments within 10 days of price change are not affected.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "pricing_model": {
          "type": "string",
          "description": "The pricing model for tiered plan. The `tiers` parameter is required.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "VOLUME",
              "description": "A volume pricing model."
            },
            {
              "value": "TIERED",
              "description": "A tiered pricing model."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tiers": {
          "type": "array",
          "description": "An array of pricing tiers which are used for billing volume/tiered plans. pricing_model field has to be specified.",
          "minItems": 1,
          "maxItems": 32,
          "items": {
            "$ref": "#/definitions/pricing_tier.json",
            "x-publicDocsSchemaName": "pricing_tier"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "create_time": {
          "description": "The date and time when this pricing scheme was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "description": "The date and time when this pricing scheme was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "pricing_scheme"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json": {
      "type": "object",
      "title": "Money",
      "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
      "properties": {
        "currency_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json"
        },
        "value": {
          "type": "string",
          "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/).",
          "maxLength": 32,
          "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
        }
      },
      "required": [
        "currency_code",
        "value"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json": {
      "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.",
      "type": "string",
      "format": "ppaas_common_currency_code_v2",
      "minLength": 3,
      "maxLength": 3,
      "properties": {}
    },
    "pricing_tier.json": {
      "title": "Pricing Tier",
      "description": "The pricing tier details.",
      "type": "object",
      "properties": {
        "starting_quantity": {
          "type": "string",
          "description": "The starting quantity for the tier.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "ending_quantity": {
          "type": "string",
          "description": "The ending quantity for the tier. Optional for the last tier.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "description": "The pricing amount for the tier.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "starting_quantity",
        "amount"
      ],
      "x-publicDocsSchemaName": "pricing_tier"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json": {
      "type": "string",
      "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
      "format": "ppaas_date_time_v3",
      "minLength": 20,
      "maxLength": 64,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
      "properties": {}
    },
    "frequency.json": {
      "title": "Billing Cycle Frequency",
      "description": "The frequency of the billing cycle.",
      "type": "object",
      "properties": {
        "interval_unit": {
          "type": "string",
          "description": "The interval at which the subscription is charged or billed.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "DAY",
              "description": "A daily billing cycle."
            },
            {
              "value": "WEEK",
              "description": "A weekly billing cycle."
            },
            {
              "value": "SEMI_MONTH",
              "description": "A monthly billing cycle.",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            },
            {
              "value": "MONTH",
              "description": "A monthly billing cycle."
            },
            {
              "value": "YEAR",
              "description": "A yearly billing cycle."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "interval_count": {
          "type": "integer",
          "description": "The number of intervals after which a subscriber is billed. For example, if the `interval_unit` is `DAY` with an `interval_count` of  `2`, the subscription is billed once every two days. The following table lists the maximum allowed values for the `interval_count` for each `interval_unit`:<table><thead><tr><th><code>Interval unit</code></th><th>Maximum interval count</th></tr></thead><tbody><tr><td><code>DAY</code></td><td align=\"right\">365</td></tr><tr><td><code>WEEK</code></td><td align=\"right\">52</td></tr><tr><td><code>MONTH</code></td><td align=\"right\">12</td></tr><tr><td><code>YEAR</code></td><td align=\"right\">1</td></tr></tbody></table>",
          "minimum": 1,
          "maximum": 365,
          "default": 1,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "interval_unit"
      ],
      "x-publicDocsSchemaName": "frequency"
    },
    "taxes.json": {
      "title": "Taxes",
      "description": "The tax details.",
      "type": "object",
      "properties": {
        "percentage": {
          "description": "The tax percentage on the billing amount.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-percentage.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "inclusive": {
          "type": "boolean",
          "description": "Indicates whether the tax was already included in the billing amount.",
          "default": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "description": "The tax amount. Used to support legacy migration. Either percentage or amount can be used but not both.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "percentage"
      ],
      "x-publicDocsSchemaName": "taxes"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-percentage.json": {
      "type": "string",
      "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`.",
      "format": "ppaas_common_percentage_v2",
      "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
      "properties": {}
    },
    "payment_preferences.json": {
      "title": "Payment Preferences",
      "description": "The payment preferences for a subscription.",
      "type": "object",
      "properties": {
        "service_type": {
          "type": "string",
          "description": "A pre- or post-paid service.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "PREPAID",
          "x-enum": [
            {
              "value": "PREPAID",
              "description": "A prepaid billing cycle."
            },
            {
              "value": "POSTPAID",
              "description": "A postpaid billing cycle."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "auto_bill_outstanding": {
          "type": "boolean",
          "description": "Indicates whether to automatically bill the outstanding amount in the next billing cycle.",
          "default": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "setup_fee": {
          "description": "The initial set-up fee for the service.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "setup_fee_failure_action": {
          "type": "string",
          "description": "The action to take on the subscription if the initial payment for the setup fails.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "CANCEL",
          "x-enum": [
            {
              "value": "CONTINUE",
              "description": "Continues the subscription if the initial payment for the setup fails."
            },
            {
              "value": "CANCEL",
              "description": "Cancels the subscription if the initial payment for the setup fails."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_failure_threshold": {
          "type": "integer",
          "description": "The maximum number of payment failures before a subscription is suspended. For example, if `payment_failure_threshold` is `2`, the subscription automatically updates to the `SUSPEND` state if two consecutive payments fail.",
          "minimum": 0,
          "maximum": 999,
          "default": 0,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "payment_preferences"
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee_base.json": {
      "type": "object",
      "title": "Merchant Base",
      "description": "The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "properties": {
        "email_address": {
          "description": "The email address of merchant.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "merchant_id": {
          "description": "The encrypted PayPal account ID of the merchant.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        },
        "client_id": {
          "type": "string",
          "description": "The public ID for the payee- or merchant-created app. Introduced to support use cases, such as BrainTree integration with PayPal, where payee `email_address` or `merchant_id` is not available.",
          "maxLength": 80,
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-publicDocsSchemaName": "payee_base"
    },
    "merchant.CommonComponentsSpecification-v1-schema-email.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "merchant_common_email_address_v2",
      "maxLength": 254,
      "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
      "x-publicDocsSchemaName": "email",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json": {
      "type": "string",
      "title": "PayPal Account Identifier",
      "description": "The account identifier for a PayPal account.",
      "format": "ppaas_payer_id_v3",
      "minLength": 13,
      "maxLength": 13,
      "pattern": "^[2-9A-HJ-NP-Z]{13}$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json": {
      "type": "object",
      "title": "Displayable Merchant Information",
      "description": "The merchant information. The merchant is also known as the payee. Appears to the customer in checkout, transactions, email receipts, and transaction history.",
      "properties": {
        "business_email": {
          "description": "The email address of the merchant. Appears to the customer in checkout, transactions, email receipts, and transaction history.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "business_phone": {
          "description": "The phone number of the merchant. Appears to the customer in checkout, payment transactions, email receipts, and transaction history.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json"
        },
        "brand_name": {
          "type": "string",
          "description": "The name of the merchant. Appears to the customer in checkout, payment transactions, email receipts, and transaction history.",
          "maxLength": 127
        }
      },
      "x-publicDocsSchemaName": "payee_displayable"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "country_code": {
          "type": "string",
          "x-publicDocsSchemaName": "country_calling_code",
          "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 3,
          "pattern": "^[0-9]{1,3}?$"
        },
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        },
        "extension_number": {
          "type": "string",
          "description": "The extension number.",
          "minLength": 1,
          "maxLength": 15,
          "pattern": "^[0-9]{1,15}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-product.json": {
      "title": "Product Details",
      "description": "The product details.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the product. The ID can be an auto-generated ID or a merchant provided identifier.",
          "minLength": 6,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "product_id": {
          "type": "string",
          "description": "The resource ID of the product. This is an auto-generated ID. Example: PROD-XXXXXXX.",
          "minLength": 6,
          "maxLength": 50,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "description": "The product name.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "description": {
          "type": "string",
          "description": "The product description.",
          "minLength": 1,
          "maxLength": 256,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "type": {
          "type": "string",
          "description": "The product type. Indicates whether the product is physical or digital goods, or a service.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "PHYSICAL",
          "x-enum": [
            {
              "value": "PHYSICAL",
              "description": "Physical goods"
            },
            {
              "value": "DIGITAL",
              "description": "Digital goods"
            },
            {
              "value": "SERVICE",
              "description": "Product representing a service. Example: Tech Support"
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "category": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-product_category.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "image_url": {
          "type": "string",
          "format": "uri",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The image URL for the product.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "home_url": {
          "type": "string",
          "format": "uri",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The home page URL for the product.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payee": {
          "readOnly": true,
          "$ref": "#/definitions/customized_x_unsupported_4112_merchant.CommonComponentsSpecification-v1-schema-payee.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "BusinessCompany"
          }
        },
        "create_time": {
          "description": "The date and time when the product was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "update_time": {
          "description": "The date and time when the product was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "product"
    },
    "merchant.CommonComponentsSpecification-v1-schema-product_category.json": {
      "type": "string",
      "description": "The product category.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "x-securityClassification": {
        "data_class": "class4",
        "data_category": "Intrinsic"
      },
      "title": "Product Category",
      "minLength": 4,
      "maxLength": 256,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "AC_REFRIGERATION_REPAIR",
          "description": "A/C, Refrigeration Repair"
        },
        {
          "value": "ACADEMIC_SOFTWARE",
          "description": "Academic Software"
        },
        {
          "value": "ACCESSORIES",
          "description": "Accessories"
        },
        {
          "value": "ACCOUNTING",
          "description": "Accounting"
        },
        {
          "value": "ADULT",
          "description": "Adult"
        },
        {
          "value": "ADVERTISING",
          "description": "Advertising"
        },
        {
          "value": "AFFILIATED_AUTO_RENTAL",
          "description": "Affiliated Auto Rental"
        },
        {
          "value": "AGENCIES",
          "description": "Agencies"
        },
        {
          "value": "AGGREGATORS",
          "description": "Aggregators"
        },
        {
          "value": "AGRICULTURAL_COOPERATIVE_FOR_MAIL_ORDER",
          "description": "Agricultural Cooperative for Mail Order"
        },
        {
          "value": "AIR_CARRIERS_AIRLINES",
          "description": "Air Carriers, Airlines"
        },
        {
          "value": "AIRLINES",
          "description": "Airlines"
        },
        {
          "value": "AIRPORTS_FLYING_FIELDS",
          "description": "Airports, Flying Fields"
        },
        {
          "value": "ALCOHOLIC_BEVERAGES",
          "description": "Alcoholic Beverages"
        },
        {
          "value": "AMUSEMENT_PARKS_CARNIVALS",
          "description": "Amusement Parks/Carnivals"
        },
        {
          "value": "ANIMATION",
          "description": "Animation"
        },
        {
          "value": "ANTIQUES",
          "description": "Antiques"
        },
        {
          "value": "APPLIANCES",
          "description": "Appliances"
        },
        {
          "value": "AQUARIAMS_SEAQUARIUMS_DOLPHINARIUMS",
          "description": "Aquariams Seaquariums Dolphinariums"
        },
        {
          "value": "ARCHITECTURAL_ENGINEERING_AND_SURVEYING_SERVICES",
          "description": "Architectural,Engineering,And Surveying Services"
        },
        {
          "value": "ART_AND_CRAFT_SUPPLIES",
          "description": "Art & Craft Supplies"
        },
        {
          "value": "ART_DEALERS_AND_GALLERIES",
          "description": "Art dealers and galleries"
        },
        {
          "value": "ARTIFACTS_GRAVE_RELATED_AND_NATIVE_AMERICAN_CRAFTS",
          "description": "Artifacts, Grave related, and Native American Crafts"
        },
        {
          "value": "ARTS_AND_CRAFTS",
          "description": "Arts and crafts"
        },
        {
          "value": "ARTS_CRAFTS_AND_COLLECTIBLES",
          "description": "Arts, crafts, and collectibles"
        },
        {
          "value": "AUDIO_BOOKS",
          "description": "Audio books"
        },
        {
          "value": "AUTO_ASSOCIATIONS_CLUBS",
          "description": "Auto Associations/Clubs"
        },
        {
          "value": "AUTO_DEALER_USED_ONLY",
          "description": "Auto dealer - used only"
        },
        {
          "value": "AUTO_RENTALS",
          "description": "Auto Rentals"
        },
        {
          "value": "AUTO_SERVICE",
          "description": "Auto service"
        },
        {
          "value": "AUTOMATED_FUEL_DISPENSERS",
          "description": "Automated Fuel Dispensers"
        },
        {
          "value": "AUTOMOBILE_ASSOCIATIONS",
          "description": "Automobile Associations"
        },
        {
          "value": "AUTOMOTIVE",
          "description": "Automotive"
        },
        {
          "value": "AUTOMOTIVE_REPAIR_SHOPS_NON_DEALER",
          "description": "Automotive Repair Shops - Non-Dealer"
        },
        {
          "value": "AUTOMOTIVE_TOP_AND_BODY_SHOPS",
          "description": "Automotive Top And Body Shops"
        },
        {
          "value": "AVIATION",
          "description": "Aviation"
        },
        {
          "value": "BABIES_CLOTHING_AND_SUPPLIES",
          "description": "Babies Clothing & Supplies"
        },
        {
          "value": "BABY",
          "description": "Baby"
        },
        {
          "value": "BANDS_ORCHESTRAS_ENTERTAINERS",
          "description": "Bands,Orchestras,Entertainers"
        },
        {
          "value": "BARBIES",
          "description": "Barbies"
        },
        {
          "value": "BATH_AND_BODY",
          "description": "Bath and body"
        },
        {
          "value": "BATTERIES",
          "description": "Batteries"
        },
        {
          "value": "BEAN_BABIES",
          "description": "Bean Babies"
        },
        {
          "value": "BEAUTY",
          "description": "Beauty"
        },
        {
          "value": "BEAUTY_AND_FRAGRANCES",
          "description": "Beauty and fragrances"
        },
        {
          "value": "BED_AND_BATH",
          "description": "Bed & Bath"
        },
        {
          "value": "BICYCLE_SHOPS_SALES_AND_SERVICE",
          "description": "Bicycle Shops-Sales And Service"
        },
        {
          "value": "BICYCLES_AND_ACCESSORIES",
          "description": "Bicycles & Accessories"
        },
        {
          "value": "BILLIARD_POOL_ESTABLISHMENTS",
          "description": "Billiard/Pool Establishments"
        },
        {
          "value": "BOAT_DEALERS",
          "description": "Boat Dealers"
        },
        {
          "value": "BOAT_RENTALS_AND_LEASING",
          "description": "Boat Rentals And Leasing"
        },
        {
          "value": "BOATING_SAILING_AND_ACCESSORIES",
          "description": "Boating, sailing and accessories"
        },
        {
          "value": "BOOKS",
          "description": "Books"
        },
        {
          "value": "BOOKS_AND_MAGAZINES",
          "description": "Books and magazines"
        },
        {
          "value": "BOOKS_MANUSCRIPTS",
          "description": "Books, Manuscripts"
        },
        {
          "value": "BOOKS_PERIODICALS_AND_NEWSPAPERS",
          "description": "Books, Periodicals And Newspapers"
        },
        {
          "value": "BOWLING_ALLEYS",
          "description": "Bowling Alleys"
        },
        {
          "value": "BULLETIN_BOARD",
          "description": "Bulletin board"
        },
        {
          "value": "BUS_LINE",
          "description": "Bus line"
        },
        {
          "value": "BUS_LINES_CHARTERS_TOUR_BUSES",
          "description": "Bus Lines,Charters,Tour Buses"
        },
        {
          "value": "BUSINESS",
          "description": "Business"
        },
        {
          "value": "BUSINESS_AND_SECRETARIAL_SCHOOLS",
          "description": "Business and secretarial schools"
        },
        {
          "value": "BUYING_AND_SHOPPING_SERVICES_AND_CLUBS",
          "description": "Buying And Shopping Services And Clubs"
        },
        {
          "value": "CABLE_SATELLITE_AND_OTHER_PAY_TELEVISION_AND_RADIO_SERVICES",
          "description": "Cable,Satellite,And Other Pay Television And Radio Services"
        },
        {
          "value": "CABLE_SATELLITE_AND_OTHER_PAY_TV_AND_RADIO",
          "description": "Cable, satellite, and other pay TV and radio"
        },
        {
          "value": "CAMERA_AND_PHOTOGRAPHIC_SUPPLIES",
          "description": "Camera and photographic supplies"
        },
        {
          "value": "CAMERAS",
          "description": "Cameras"
        },
        {
          "value": "CAMERAS_AND_PHOTOGRAPHY",
          "description": "Cameras & Photography"
        },
        {
          "value": "CAMPER_RECREATIONAL_AND_UTILITY_TRAILER_DEALERS",
          "description": "Camper,Recreational And Utility Trailer Dealers"
        },
        {
          "value": "CAMPING_AND_OUTDOORS",
          "description": "Camping and outdoors"
        },
        {
          "value": "CAMPING_AND_SURVIVAL",
          "description": "Camping & Survival"
        },
        {
          "value": "CAR_AND_TRUCK_DEALERS",
          "description": "Car And Truck Dealers"
        },
        {
          "value": "CAR_AND_TRUCK_DEALERS_USED_ONLY",
          "description": "Car And Truck Dealers - Used Only"
        },
        {
          "value": "CAR_AUDIO_AND_ELECTRONICS",
          "description": "Car Audio & Electronics"
        },
        {
          "value": "CAR_RENTAL_AGENCY",
          "description": "Car rental agency"
        },
        {
          "value": "CATALOG_MERCHANT",
          "description": "Catalog Merchant"
        },
        {
          "value": "CATALOG_RETAIL_MERCHANT",
          "description": "Catalog/Retail Merchant"
        },
        {
          "value": "CATERING_SERVICES",
          "description": "Catering services"
        },
        {
          "value": "CHARITY",
          "description": "Charity"
        },
        {
          "value": "CHECK_CASHIER",
          "description": "Check Cashier"
        },
        {
          "value": "CHILD_CARE_SERVICES",
          "description": "Child Care Services"
        },
        {
          "value": "CHILDREN_BOOKS",
          "description": "Children Books"
        },
        {
          "value": "CHIROPODISTS_PODIATRISTS",
          "description": "Chiropodists/Podiatrists"
        },
        {
          "value": "CHIROPRACTORS",
          "description": "Chiropractors"
        },
        {
          "value": "CIGAR_STORES_AND_STANDS",
          "description": "Cigar Stores And Stands"
        },
        {
          "value": "CIVIC_SOCIAL_FRATERNAL_ASSOCIATIONS",
          "description": "Civic, Social, Fraternal Associations"
        },
        {
          "value": "CIVIL_SOCIAL_FRAT_ASSOCIATIONS",
          "description": "Civil/Social/Frat Associations"
        },
        {
          "value": "CLOTHING",
          "description": "Clothing"
        },
        {
          "value": "CLOTHING_ACCESSORIES_AND_SHOES",
          "description": "Clothing, accessories, and shoes"
        },
        {
          "value": "CLOTHING_RENTAL",
          "description": "Clothing Rental"
        },
        {
          "value": "COFFEE_AND_TEA",
          "description": "Coffee and tea"
        },
        {
          "value": "COIN_OPERATED_BANKS_AND_CASINOS",
          "description": "Coin Operated Banks & Casinos"
        },
        {
          "value": "COLLECTIBLES",
          "description": "Collectibles"
        },
        {
          "value": "COLLECTION_AGENCY",
          "description": "Collection agency"
        },
        {
          "value": "COLLEGES_AND_UNIVERSITIES",
          "description": "Colleges and universities"
        },
        {
          "value": "COMMERCIAL_EQUIPMENT",
          "description": "Commercial Equipment"
        },
        {
          "value": "COMMERCIAL_FOOTWEAR",
          "description": "Commercial Footwear"
        },
        {
          "value": "COMMERCIAL_PHOTOGRAPHY",
          "description": "Commercial photography"
        },
        {
          "value": "COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS",
          "description": "Commercial photography, art, and graphics"
        },
        {
          "value": "COMMERCIAL_SPORTS_PROFESSIONA",
          "description": "Commercial Sports/Professiona"
        },
        {
          "value": "COMMODITIES_AND_FUTURES_EXCHANGE",
          "description": "Commodities and futures exchange"
        },
        {
          "value": "COMPUTER_AND_DATA_PROCESSING_SERVICES",
          "description": "Computer and data processing services"
        },
        {
          "value": "COMPUTER_HARDWARE_AND_SOFTWARE",
          "description": "Computer Hardware & Software"
        },
        {
          "value": "COMPUTER_MAINTENANCE_REPAIR_AND_SERVICES_NOT_ELSEWHERE_CLAS",
          "description": "Computer Maintenance, Repair And Services Not Elsewhere Clas"
        },
        {
          "value": "CONSTRUCTION",
          "description": "Construction"
        },
        {
          "value": "CONSTRUCTION_MATERIALS_NOT_ELSEWHERE_CLASSIFIED",
          "description": "Construction Materials Not Elsewhere Classified"
        },
        {
          "value": "CONSULTING_SERVICES",
          "description": "Consulting services"
        },
        {
          "value": "CONSUMER_CREDIT_REPORTING_AGENCIES",
          "description": "Consumer Credit Reporting Agencies"
        },
        {
          "value": "CONVALESCENT_HOMES",
          "description": "Convalescent Homes"
        },
        {
          "value": "COSMETIC_STORES",
          "description": "Cosmetic Stores"
        },
        {
          "value": "COUNSELING_SERVICES_DEBT_MARRIAGE_PERSONAL",
          "description": "Counseling Services--Debt,Marriage,Personal"
        },
        {
          "value": "COUNTERFEIT_CURRENCY_AND_STAMPS",
          "description": "Counterfeit Currency and Stamps"
        },
        {
          "value": "COUNTERFEIT_ITEMS",
          "description": "Counterfeit Items"
        },
        {
          "value": "COUNTRY_CLUBS",
          "description": "Country Clubs"
        },
        {
          "value": "COURIER_SERVICES",
          "description": "Courier services"
        },
        {
          "value": "COURIER_SERVICES_AIR_AND_GROUND_AND_FREIGHT_FORWARDERS",
          "description": "Courier Services-Air And Ground,And Freight Forwarders"
        },
        {
          "value": "COURT_COSTS_ALIMNY_CHILD_SUPT",
          "description": "Court Costs/Alimny/Child Supt"
        },
        {
          "value": "COURT_COSTS_INCLUDING_ALIMONY_AND_CHILD_SUPPORT_COURTS_OF_LAW",
          "description": "Court Costs, Including Alimony and Child Support - Courts of Law"
        },
        {
          "value": "CREDIT_CARDS",
          "description": "Credit Cards"
        },
        {
          "value": "CREDIT_UNION",
          "description": "Credit union"
        },
        {
          "value": "CULTURE_AND_RELIGION",
          "description": "Culture & Religion"
        },
        {
          "value": "DAIRY_PRODUCTS_STORES",
          "description": "Dairy Products Stores"
        },
        {
          "value": "DANCE_HALLS_STUDIOS_AND_SCHOOLS",
          "description": "Dance Halls,Studios,And Schools"
        },
        {
          "value": "DECORATIVE",
          "description": "Decorative"
        },
        {
          "value": "DENTAL",
          "description": "Dental"
        },
        {
          "value": "DENTISTS_AND_ORTHODONTISTS",
          "description": "Dentists And Orthodontists"
        },
        {
          "value": "DEPARTMENT_STORES",
          "description": "Department Stores"
        },
        {
          "value": "DESKTOP_PCS",
          "description": "Desktop PCs"
        },
        {
          "value": "DEVICES",
          "description": "Devices"
        },
        {
          "value": "DIECAST_TOYS_VEHICLES",
          "description": "Diecast, Toys Vehicles"
        },
        {
          "value": "DIGITAL_GAMES",
          "description": "Digital games"
        },
        {
          "value": "DIGITAL_MEDIA_BOOKS_MOVIES_MUSIC",
          "description": "Digital media,books,movies,music"
        },
        {
          "value": "DIRECT_MARKETING",
          "description": "Direct Marketing"
        },
        {
          "value": "DIRECT_MARKETING_CATALOG_MERCHANT",
          "description": "Direct Marketing - Catalog Merchant"
        },
        {
          "value": "DIRECT_MARKETING_INBOUND_TELE",
          "description": "Direct Marketing - Inbound Tele"
        },
        {
          "value": "DIRECT_MARKETING_OUTBOUND_TELE",
          "description": "Direct Marketing - Outbound Tele"
        },
        {
          "value": "DIRECT_MARKETING_SUBSCRIPTION",
          "description": "Direct Marketing - Subscription"
        },
        {
          "value": "DISCOUNT_STORES",
          "description": "Discount Stores"
        },
        {
          "value": "DOOR_TO_DOOR_SALES",
          "description": "Door-To-Door Sales"
        },
        {
          "value": "DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY",
          "description": "Drapery, window covering, and upholstery"
        },
        {
          "value": "DRINKING_PLACES",
          "description": "Drinking Places"
        },
        {
          "value": "DRUGSTORE",
          "description": "Drugstore"
        },
        {
          "value": "DURABLE_GOODS",
          "description": "Durable goods"
        },
        {
          "value": "ECOMMERCE_DEVELOPMENT",
          "description": "eCommerce Development"
        },
        {
          "value": "ECOMMERCE_SERVICES",
          "description": "eCommerce Services"
        },
        {
          "value": "EDUCATIONAL_AND_TEXTBOOKS",
          "description": "Educational and textbooks"
        },
        {
          "value": "ELECTRIC_RAZOR_STORES",
          "description": "Electric Razor Stores"
        },
        {
          "value": "ELECTRICAL_AND_SMALL_APPLIANCE_REPAIR",
          "description": "Electrical and small appliance repair"
        },
        {
          "value": "ELECTRICAL_CONTRACTORS",
          "description": "Electrical Contractors"
        },
        {
          "value": "ELECTRICAL_PARTS_AND_EQUIPMENT",
          "description": "Electrical Parts and Equipment"
        },
        {
          "value": "ELECTRONIC_CASH",
          "description": "Electronic Cash"
        },
        {
          "value": "ELEMENTARY_AND_SECONDARY_SCHOOLS",
          "description": "Elementary and secondary schools"
        },
        {
          "value": "EMPLOYMENT",
          "description": "Employment"
        },
        {
          "value": "ENTERTAINERS",
          "description": "Entertainers"
        },
        {
          "value": "ENTERTAINMENT_AND_MEDIA",
          "description": "Entertainment and media"
        },
        {
          "value": "EQUIP_TOOL_FURNITURE_AND_APPLIANCE_RENTAL_AND_LEASING",
          "description": "Equip, Tool, Furniture, And Appliance Rental And Leasing"
        },
        {
          "value": "ESCROW",
          "description": "Escrow"
        },
        {
          "value": "EVENT_AND_WEDDING_PLANNING",
          "description": "Event & Wedding Planning"
        },
        {
          "value": "EXERCISE_AND_FITNESS",
          "description": "Exercise and fitness"
        },
        {
          "value": "EXERCISE_EQUIPMENT",
          "description": "Exercise Equipment"
        },
        {
          "value": "EXTERMINATING_AND_DISINFECTING_SERVICES",
          "description": "Exterminating and disinfecting services"
        },
        {
          "value": "FABRICS_AND_SEWING",
          "description": "Fabrics & Sewing"
        },
        {
          "value": "FAMILY_CLOTHING_STORES",
          "description": "Family Clothing Stores"
        },
        {
          "value": "FASHION_JEWELRY",
          "description": "Fashion jewelry"
        },
        {
          "value": "FAST_FOOD_RESTAURANTS",
          "description": "Fast Food Restaurants"
        },
        {
          "value": "FICTION_AND_NONFICTION",
          "description": "Fiction and nonfiction"
        },
        {
          "value": "FINANCE_COMPANY",
          "description": "Finance company"
        },
        {
          "value": "FINANCIAL_AND_INVESTMENT_ADVICE",
          "description": "Financial and investment advice"
        },
        {
          "value": "FINANCIAL_INSTITUTIONS_MERCHANDISE_AND_SERVICES",
          "description": "Financial Institutions - Merchandise And Services"
        },
        {
          "value": "FIREARM_ACCESSORIES",
          "description": "Firearm accessories"
        },
        {
          "value": "FIREARMS_WEAPONS_AND_KNIVES",
          "description": "Firearms, Weapons and Knives"
        },
        {
          "value": "FIREPLACE_AND_FIREPLACE_SCREENS",
          "description": "Fireplace, and fireplace screens"
        },
        {
          "value": "FIREWORKS",
          "description": "Fireworks"
        },
        {
          "value": "FISHING",
          "description": "Fishing"
        },
        {
          "value": "FLORISTS",
          "description": "Florists"
        },
        {
          "value": "FLOWERS",
          "description": "Flowers"
        },
        {
          "value": "FOOD_DRINK_AND_NUTRITION",
          "description": "Food, Drink & Nutrition"
        },
        {
          "value": "FOOD_PRODUCTS",
          "description": "Food Products"
        },
        {
          "value": "FOOD_RETAIL_AND_SERVICE",
          "description": "Food retail and service"
        },
        {
          "value": "FRAGRANCES_AND_PERFUMES",
          "description": "Fragrances and perfumes"
        },
        {
          "value": "FREEZER_AND_LOCKER_MEAT_PROVISIONERS",
          "description": "Freezer and Locker Meat Provisioners"
        },
        {
          "value": "FUEL_DEALERS_FUEL_OIL_WOOD_AND_COAL",
          "description": "Fuel Dealers-Fuel Oil, Wood & Coal"
        },
        {
          "value": "FUEL_DEALERS_NON_AUTOMOTIVE",
          "description": "Fuel Dealers - Non Automotive"
        },
        {
          "value": "FUNERAL_SERVICES_AND_CREMATORIES",
          "description": "Funeral Services & Crematories"
        },
        {
          "value": "FURNISHING_AND_DECORATING",
          "description": "Furnishing & Decorating"
        },
        {
          "value": "FURNITURE",
          "description": "Furniture"
        },
        {
          "value": "FURRIERS_AND_FUR_SHOPS",
          "description": "Furriers and Fur Shops"
        },
        {
          "value": "GADGETS_AND_OTHER_ELECTRONICS",
          "description": "Gadgets & other electronics"
        },
        {
          "value": "GAMBLING",
          "description": "Gambling"
        },
        {
          "value": "GAME_SOFTWARE",
          "description": "Game Software"
        },
        {
          "value": "GAMES",
          "description": "Games"
        },
        {
          "value": "GARDEN_SUPPLIES",
          "description": "Garden supplies"
        },
        {
          "value": "GENERAL",
          "description": "General"
        },
        {
          "value": "GENERAL_CONTRACTORS",
          "description": "General contractors"
        },
        {
          "value": "GENERAL_GOVERNMENT",
          "description": "General - Government"
        },
        {
          "value": "GENERAL_SOFTWARE",
          "description": "General - Software"
        },
        {
          "value": "GENERAL_TELECOM",
          "description": "General - Telecom"
        },
        {
          "value": "GIFTS_AND_FLOWERS",
          "description": "Gifts and flowers"
        },
        {
          "value": "GLASS_PAINT_AND_WALLPAPER_STORES",
          "description": "Glass,Paint,And Wallpaper Stores"
        },
        {
          "value": "GLASSWARE_CRYSTAL_STORES",
          "description": "Glassware, Crystal Stores"
        },
        {
          "value": "GOVERNMENT",
          "description": "Government"
        },
        {
          "value": "GOVERNMENT_IDS_AND_LICENSES",
          "description": "Government IDs and Licenses"
        },
        {
          "value": "GOVERNMENT_LICENSED_ON_LINE_CASINOS_ON_LINE_GAMBLING",
          "description": "Government Licensed On-Line Casinos - On-Line Gambling"
        },
        {
          "value": "GOVERNMENT_OWNED_LOTTERIES",
          "description": "Government-Owned Lotteries"
        },
        {
          "value": "GOVERNMENT_SERVICES",
          "description": "Government services"
        },
        {
          "value": "GRAPHIC_AND_COMMERCIAL_DESIGN",
          "description": "Graphic & Commercial Design"
        },
        {
          "value": "GREETING_CARDS",
          "description": "Greeting Cards"
        },
        {
          "value": "GROCERY_STORES_AND_SUPERMARKETS",
          "description": "Grocery Stores & Supermarkets"
        },
        {
          "value": "HARDWARE_AND_TOOLS",
          "description": "Hardware & Tools"
        },
        {
          "value": "HARDWARE_EQUIPMENT_AND_SUPPLIES",
          "description": "Hardware, Equipment, and Supplies"
        },
        {
          "value": "HAZARDOUS_RESTRICTED_AND_PERISHABLE_ITEMS",
          "description": "Hazardous, Restricted and Perishable Items"
        },
        {
          "value": "HEALTH_AND_BEAUTY_SPAS",
          "description": "Health and beauty spas"
        },
        {
          "value": "HEALTH_AND_NUTRITION",
          "description": "Health & Nutrition"
        },
        {
          "value": "HEALTH_AND_PERSONAL_CARE",
          "description": "Health and personal care"
        },
        {
          "value": "HEARING_AIDS_SALES_AND_SUPPLIES",
          "description": "Hearing Aids Sales and Supplies"
        },
        {
          "value": "HEATING_PLUMBING_AC",
          "description": "Heating, Plumbing, AC"
        },
        {
          "value": "HIGH_RISK_MERCHANT",
          "description": "High Risk Merchant"
        },
        {
          "value": "HIRING_SERVICES",
          "description": "Hiring services"
        },
        {
          "value": "HOBBIES_TOYS_AND_GAMES",
          "description": "Hobbies, Toys & Games"
        },
        {
          "value": "HOME_AND_GARDEN",
          "description": "Home and garden"
        },
        {
          "value": "HOME_AUDIO",
          "description": "Home Audio"
        },
        {
          "value": "HOME_DECOR",
          "description": "Home decor"
        },
        {
          "value": "HOME_ELECTRONICS",
          "description": "Home Electronics"
        },
        {
          "value": "HOSPITALS",
          "description": "Hospitals"
        },
        {
          "value": "HOTELS_MOTELS_INNS_RESORTS",
          "description": "Hotels/Motels/Inns/Resorts"
        },
        {
          "value": "HOUSEWARES",
          "description": "Housewares"
        },
        {
          "value": "HUMAN_PARTS_AND_REMAINS",
          "description": "Human Parts and Remains"
        },
        {
          "value": "HUMOROUS_GIFTS_AND_NOVELTIES",
          "description": "Humorous Gifts & Novelties"
        },
        {
          "value": "HUNTING",
          "description": "Hunting"
        },
        {
          "value": "IDS_LICENSES_AND_PASSPORTS",
          "description": "IDs, licenses, and passports"
        },
        {
          "value": "ILLEGAL_DRUGS_AND_PARAPHERNALIA",
          "description": "Illegal Drugs & Paraphernalia"
        },
        {
          "value": "INDUSTRIAL",
          "description": "Industrial"
        },
        {
          "value": "INDUSTRIAL_AND_MANUFACTURING_SUPPLIES",
          "description": "Industrial and manufacturing supplies"
        },
        {
          "value": "INSURANCE_AUTO_AND_HOME",
          "description": "Insurance - auto and home"
        },
        {
          "value": "INSURANCE_DIRECT",
          "description": "Insurance - Direct"
        },
        {
          "value": "INSURANCE_LIFE_AND_ANNUITY",
          "description": "Insurance - life and annuity"
        },
        {
          "value": "INSURANCE_SALES_UNDERWRITING",
          "description": "Insurance Sales/Underwriting"
        },
        {
          "value": "INSURANCE_UNDERWRITING_PREMIUMS",
          "description": "Insurance Underwriting, Premiums"
        },
        {
          "value": "INTERNET_AND_NETWORK_SERVICES",
          "description": "Internet & Network Services"
        },
        {
          "value": "INTRA_COMPANY_PURCHASES",
          "description": "Intra-Company Purchases"
        },
        {
          "value": "LABORATORIES_DENTAL_MEDICAL",
          "description": "Laboratories-Dental/Medical"
        },
        {
          "value": "LANDSCAPING",
          "description": "Landscaping"
        },
        {
          "value": "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
          "description": "Landscaping And Horticultural Services"
        },
        {
          "value": "LAUNDRY_CLEANING_SERVICES",
          "description": "Laundry, Cleaning Services"
        },
        {
          "value": "LEGAL",
          "description": "Legal"
        },
        {
          "value": "LEGAL_SERVICES_AND_ATTORNEYS",
          "description": "Legal services and attorneys"
        },
        {
          "value": "LOCAL_DELIVERY_SERVICE",
          "description": "Local delivery service"
        },
        {
          "value": "LOCKSMITH",
          "description": "Locksmith"
        },
        {
          "value": "LODGING_AND_ACCOMMODATIONS",
          "description": "Lodging and accommodations"
        },
        {
          "value": "LOTTERY_AND_CONTESTS",
          "description": "Lottery and contests"
        },
        {
          "value": "LUGGAGE_AND_LEATHER_GOODS",
          "description": "Luggage and leather goods"
        },
        {
          "value": "LUMBER_AND_BUILDING_MATERIALS",
          "description": "Lumber & Building Materials"
        },
        {
          "value": "MAGAZINES",
          "description": "Magazines"
        },
        {
          "value": "MAINTENANCE_AND_REPAIR_SERVICES",
          "description": "Maintenance and repair services"
        },
        {
          "value": "MAKEUP_AND_COSMETICS",
          "description": "Makeup and cosmetics"
        },
        {
          "value": "MANUAL_CASH_DISBURSEMENTS",
          "description": "Manual Cash Disbursements"
        },
        {
          "value": "MASSAGE_PARLORS",
          "description": "Massage Parlors"
        },
        {
          "value": "MEDICAL",
          "description": "Medical"
        },
        {
          "value": "MEDICAL_AND_PHARMACEUTICAL",
          "description": "Medical & Pharmaceutical"
        },
        {
          "value": "MEDICAL_CARE",
          "description": "Medical care"
        },
        {
          "value": "MEDICAL_EQUIPMENT_AND_SUPPLIES",
          "description": "Medical equipment and supplies"
        },
        {
          "value": "MEDICAL_SERVICES",
          "description": "Medical Services"
        },
        {
          "value": "MEETING_PLANNERS",
          "description": "Meeting Planners"
        },
        {
          "value": "MEMBERSHIP_CLUBS_AND_ORGANIZATIONS",
          "description": "Membership clubs and organizations"
        },
        {
          "value": "MEMBERSHIP_COUNTRY_CLUBS_GOLF",
          "description": "Membership/Country Clubs/Golf"
        },
        {
          "value": "MEMORABILIA",
          "description": "Memorabilia"
        },
        {
          "value": "MEN_AND_BOY_CLOTHING_AND_ACCESSORY_STORES",
          "description": "Men's And Boy's Clothing And Accessory Stores"
        },
        {
          "value": "MEN_CLOTHING",
          "description": "Men's Clothing"
        },
        {
          "value": "MERCHANDISE",
          "description": "Merchandise"
        },
        {
          "value": "METAPHYSICAL",
          "description": "Metaphysical"
        },
        {
          "value": "MILITARIA",
          "description": "Militaria"
        },
        {
          "value": "MILITARY_AND_CIVIL_SERVICE_UNIFORMS",
          "description": "Military and civil service uniforms"
        },
        {
          "value": "MISC._AUTOMOTIVE_AIRCRAFT_AND_FARM_EQUIPMENT_DEALERS",
          "description": "Misc. Automotive,Aircraft,And Farm Equipment Dealers"
        },
        {
          "value": "MISC._GENERAL_MERCHANDISE",
          "description": "Misc. General Merchandise"
        },
        {
          "value": "MISCELLANEOUS_GENERAL_SERVICES",
          "description": "Miscellaneous General Services"
        },
        {
          "value": "MISCELLANEOUS_REPAIR_SHOPS_AND_RELATED_SERVICES",
          "description": "Miscellaneous Repair Shops And Related Services"
        },
        {
          "value": "MODEL_KITS",
          "description": "Model Kits"
        },
        {
          "value": "MONEY_TRANSFER_MEMBER_FINANCIAL_INSTITUTION",
          "description": "Money Transfer - Member Financial Institution"
        },
        {
          "value": "MONEY_TRANSFER_MERCHANT",
          "description": "Money Transfer--Merchant"
        },
        {
          "value": "MOTION_PICTURE_THEATERS",
          "description": "Motion Picture Theaters"
        },
        {
          "value": "MOTOR_FREIGHT_CARRIERS_AND_TRUCKING",
          "description": "Motor Freight Carriers & Trucking"
        },
        {
          "value": "MOTOR_HOME_AND_RECREATIONAL_VEHICLE_RENTAL",
          "description": "Motor Home And Recreational Vehicle Rental"
        },
        {
          "value": "MOTOR_HOMES_DEALERS",
          "description": "Motor Homes Dealers"
        },
        {
          "value": "MOTOR_VEHICLE_SUPPLIES_AND_NEW_PARTS",
          "description": "Motor Vehicle Supplies and New Parts"
        },
        {
          "value": "MOTORCYCLE_DEALERS",
          "description": "Motorcycle Dealers"
        },
        {
          "value": "MOTORCYCLES",
          "description": "Motorcycles"
        },
        {
          "value": "MOVIE",
          "description": "Movie"
        },
        {
          "value": "MOVIE_TICKETS",
          "description": "Movie tickets"
        },
        {
          "value": "MOVING_AND_STORAGE",
          "description": "Moving and storage"
        },
        {
          "value": "MULTI_LEVEL_MARKETING",
          "description": "Multi-level marketing"
        },
        {
          "value": "MUSIC_CDS_CASSETTES_AND_ALBUMS",
          "description": "Music - CDs, cassettes and albums"
        },
        {
          "value": "MUSIC_STORE_INSTRUMENTS_AND_SHEET_MUSIC",
          "description": "Music store - instruments and sheet music"
        },
        {
          "value": "NETWORKING",
          "description": "Networking"
        },
        {
          "value": "NEW_AGE",
          "description": "New Age"
        },
        {
          "value": "NEW_PARTS_AND_SUPPLIES_MOTOR_VEHICLE",
          "description": "New parts and supplies - motor vehicle"
        },
        {
          "value": "NEWS_DEALERS_AND_NEWSTANDS",
          "description": "News Dealers and Newstands"
        },
        {
          "value": "NON_DURABLE_GOODS",
          "description": "Non-durable goods"
        },
        {
          "value": "NON_FICTION",
          "description": "Non-Fiction"
        },
        {
          "value": "NON_PROFIT_POLITICAL_AND_RELIGION",
          "description": "Non-Profit, Political & Religion"
        },
        {
          "value": "NONPROFIT",
          "description": "Nonprofit"
        },
        {
          "value": "NOVELTIES",
          "description": "Novelties"
        },
        {
          "value": "OEM_SOFTWARE",
          "description": "Oem Software"
        },
        {
          "value": "OFFICE_SUPPLIES_AND_EQUIPMENT",
          "description": "Office Supplies and Equipment"
        },
        {
          "value": "ONLINE_DATING",
          "description": "Online Dating"
        },
        {
          "value": "ONLINE_GAMING",
          "description": "Online gaming"
        },
        {
          "value": "ONLINE_GAMING_CURRENCY",
          "description": "Online gaming currency"
        },
        {
          "value": "ONLINE_SERVICES",
          "description": "online services"
        },
        {
          "value": "OOUTBOUND_TELEMARKETING_MERCH",
          "description": "Ooutbound Telemarketing Merch"
        },
        {
          "value": "OPHTHALMOLOGISTS_OPTOMETRIST",
          "description": "Ophthalmologists/Optometrist"
        },
        {
          "value": "OPTICIANS_AND_DISPENSING",
          "description": "Opticians And Dispensing"
        },
        {
          "value": "ORTHOPEDIC_GOODS_PROSTHETICS",
          "description": "Orthopedic Goods/Prosthetics"
        },
        {
          "value": "OSTEOPATHS",
          "description": "Osteopaths"
        },
        {
          "value": "OTHER",
          "description": "Other"
        },
        {
          "value": "PACKAGE_TOUR_OPERATORS",
          "description": "Package Tour Operators"
        },
        {
          "value": "PAINTBALL",
          "description": "Paintball"
        },
        {
          "value": "PAINTS_VARNISHES_AND_SUPPLIES",
          "description": "Paints, Varnishes, and Supplies"
        },
        {
          "value": "PARKING_LOTS_AND_GARAGES",
          "description": "Parking Lots & Garages"
        },
        {
          "value": "PARTS_AND_ACCESSORIES",
          "description": "Parts and accessories"
        },
        {
          "value": "PAWN_SHOPS",
          "description": "Pawn Shops"
        },
        {
          "value": "PAYCHECK_LENDER_OR_CASH_ADVANCE",
          "description": "Paycheck lender or cash advance"
        },
        {
          "value": "PERIPHERALS",
          "description": "Peripherals"
        },
        {
          "value": "PERSONALIZED_GIFTS",
          "description": "Personalized Gifts"
        },
        {
          "value": "PET_SHOPS_PET_FOOD_AND_SUPPLIES",
          "description": "Pet shops, pet food, and supplies"
        },
        {
          "value": "PETROLEUM_AND_PETROLEUM_PRODUCTS",
          "description": "Petroleum and Petroleum Products"
        },
        {
          "value": "PETS_AND_ANIMALS",
          "description": "Pets and animals"
        },
        {
          "value": "PHOTOFINISHING_LABORATORIES_PHOTO_DEVELOPING",
          "description": "Photofinishing Laboratories,Photo Developing"
        },
        {
          "value": "PHOTOGRAPHIC_STUDIOS_PORTRAITS",
          "description": "Photographic studios - portraits"
        },
        {
          "value": "PHOTOGRAPHY",
          "description": "Photography"
        },
        {
          "value": "PHYSICAL_GOOD",
          "description": "Physical Good"
        },
        {
          "value": "PICTURE_VIDEO_PRODUCTION",
          "description": "Picture/Video Production"
        },
        {
          "value": "PIECE_GOODS_NOTIONS_AND_OTHER_DRY_GOODS",
          "description": "Piece Goods Notions and Other Dry Goods"
        },
        {
          "value": "PLANTS_AND_SEEDS",
          "description": "Plants and Seeds"
        },
        {
          "value": "PLUMBING_AND_HEATING_EQUIPMENTS_AND_SUPPLIES",
          "description": "Plumbing & Heating Equipments & Supplies"
        },
        {
          "value": "POLICE_RELATED_ITEMS",
          "description": "Police-Related Items"
        },
        {
          "value": "POLITICAL_ORGANIZATIONS",
          "description": "Politcal Organizations"
        },
        {
          "value": "POSTAL_SERVICES_GOVERNMENT_ONLY",
          "description": "Postal Services - Government Only"
        },
        {
          "value": "POSTERS",
          "description": "Posters"
        },
        {
          "value": "PREPAID_AND_STORED_VALUE_CARDS",
          "description": "Prepaid and stored value cards"
        },
        {
          "value": "PRESCRIPTION_DRUGS",
          "description": "Prescription Drugs"
        },
        {
          "value": "PROMOTIONAL_ITEMS",
          "description": "Promotional Items"
        },
        {
          "value": "PUBLIC_WAREHOUSING_AND_STORAGE",
          "description": "Public Warehousing and Storage"
        },
        {
          "value": "PUBLISHING_AND_PRINTING",
          "description": "Publishing and printing"
        },
        {
          "value": "PUBLISHING_SERVICES",
          "description": "Publishing Services"
        },
        {
          "value": "RADAR_DECTORS",
          "description": "Radar Dectors"
        },
        {
          "value": "RADIO_TELEVISION_AND_STEREO_REPAIR",
          "description": "Radio, television, and stereo repair"
        },
        {
          "value": "REAL_ESTATE",
          "description": "Real Estate"
        },
        {
          "value": "REAL_ESTATE_AGENT",
          "description": "Real estate agent"
        },
        {
          "value": "REAL_ESTATE_AGENTS_AND_MANAGERS_RENTALS",
          "description": "Real Estate Agents And Managers - Rentals"
        },
        {
          "value": "RELIGION_AND_SPIRITUALITY_FOR_PROFIT",
          "description": "Religion and spirituality for profit"
        },
        {
          "value": "RELIGIOUS",
          "description": "Religious"
        },
        {
          "value": "RELIGIOUS_ORGANIZATIONS",
          "description": "Religious Organizations"
        },
        {
          "value": "REMITTANCE",
          "description": "Remittance"
        },
        {
          "value": "RENTAL_PROPERTY_MANAGEMENT",
          "description": "Rental property management"
        },
        {
          "value": "RESIDENTIAL",
          "description": "Residential"
        },
        {
          "value": "RETAIL",
          "description": "Retail"
        },
        {
          "value": "RETAIL_FINE_JEWELRY_AND_WATCHES",
          "description": "Retail - fine jewelry and watches"
        },
        {
          "value": "REUPHOLSTERY_AND_FURNITURE_REPAIR",
          "description": "Reupholstery and furniture repair"
        },
        {
          "value": "RINGS",
          "description": "Rings"
        },
        {
          "value": "ROOFING_SIDING_SHEET_METAL",
          "description": "Roofing/Siding, Sheet Metal"
        },
        {
          "value": "RUGS_AND_CARPETS",
          "description": "Rugs & Carpets"
        },
        {
          "value": "SCHOOLS_AND_COLLEGES",
          "description": "Schools and Colleges"
        },
        {
          "value": "SCIENCE_FICTION",
          "description": "Science Fiction"
        },
        {
          "value": "SCRAPBOOKING",
          "description": "Scrapbooking"
        },
        {
          "value": "SCULPTURES",
          "description": "Sculptures"
        },
        {
          "value": "SECURITIES_BROKERS_AND_DEALERS",
          "description": "Securities - Brokers And Dealers"
        },
        {
          "value": "SECURITY_AND_SURVEILLANCE",
          "description": "Security and surveillance"
        },
        {
          "value": "SECURITY_AND_SURVEILLANCE_EQUIPMENT",
          "description": "Security and surveillance equipment"
        },
        {
          "value": "SECURITY_BROKERS_AND_DEALERS",
          "description": "Security brokers and dealers"
        },
        {
          "value": "SEMINARS",
          "description": "Seminars"
        },
        {
          "value": "SERVICE_STATIONS",
          "description": "Service Stations"
        },
        {
          "value": "SERVICES",
          "description": "Services"
        },
        {
          "value": "SEWING_NEEDLEWORK_FABRIC_AND_PIECE_GOODS_STORES",
          "description": "Sewing,Needlework,Fabric And Piece Goods Stores"
        },
        {
          "value": "SHIPPING_AND_PACKING",
          "description": "Shipping & Packaging"
        },
        {
          "value": "SHOE_REPAIR_HAT_CLEANING",
          "description": "Shoe Repair/Hat Cleaning"
        },
        {
          "value": "SHOE_STORES",
          "description": "Shoe Stores"
        },
        {
          "value": "SHOES",
          "description": "Shoes"
        },
        {
          "value": "SNOWMOBILE_DEALERS",
          "description": "Snowmobile Dealers"
        },
        {
          "value": "SOFTWARE",
          "description": "Software"
        },
        {
          "value": "SPECIALTY_AND_MISC._FOOD_STORES",
          "description": "Specialty and misc. food stores"
        },
        {
          "value": "SPECIALTY_CLEANING_POLISHING_AND_SANITATION_PREPARATIONS",
          "description": "Specialty Cleaning, Polishing And Sanitation Preparations"
        },
        {
          "value": "SPECIALTY_OR_RARE_PETS",
          "description": "Specialty or rare pets"
        },
        {
          "value": "SPORT_GAMES_AND_TOYS",
          "description": "Sport games and toys"
        },
        {
          "value": "SPORTING_AND_RECREATIONAL_CAMPS",
          "description": "Sporting And Recreational Camps"
        },
        {
          "value": "SPORTING_GOODS",
          "description": "Sporting Goods"
        },
        {
          "value": "SPORTS_AND_OUTDOORS",
          "description": "Sports and outdoors"
        },
        {
          "value": "SPORTS_AND_RECREATION",
          "description": "Sports & Recreation"
        },
        {
          "value": "STAMP_AND_COIN",
          "description": "Stamp and coin"
        },
        {
          "value": "STATIONARY_PRINTING_AND_WRITING_PAPER",
          "description": "Stationary, printing, and writing paper"
        },
        {
          "value": "STENOGRAPHIC_AND_SECRETARIAL_SUPPORT_SERVICES",
          "description": "Stenographic and secretarial support services"
        },
        {
          "value": "STOCKS_BONDS_SECURITIES_AND_RELATED_CERTIFICATES",
          "description": "Stocks, Bonds, Securities and Related Certificates"
        },
        {
          "value": "STORED_VALUE_CARDS",
          "description": "Stored Value Cards"
        },
        {
          "value": "SUPPLIES",
          "description": "Supplies"
        },
        {
          "value": "SUPPLIES_AND_TOYS",
          "description": "Supplies & Toys"
        },
        {
          "value": "SURVEILLANCE_EQUIPMENT",
          "description": "Surveillance Equipment"
        },
        {
          "value": "SWIMMING_POOLS_AND_SPAS",
          "description": "Swimming Pools & Spas"
        },
        {
          "value": "SWIMMING_POOLS_SALES_SUPPLIES_SERVICES",
          "description": "Swimming Pools-Sales,Supplies,Services"
        },
        {
          "value": "TAILORS_AND_ALTERATIONS",
          "description": "Tailors and alterations"
        },
        {
          "value": "TAX_PAYMENTS",
          "description": "Tax Payments"
        },
        {
          "value": "TAX_PAYMENTS_GOVERNMENT_AGENCIES",
          "description": "Tax Payments - Government Agencies"
        },
        {
          "value": "TAXICABS_AND_LIMOUSINES",
          "description": "Taxicabs and limousines"
        },
        {
          "value": "TELECOMMUNICATION_SERVICES",
          "description": "Telecommunication Services"
        },
        {
          "value": "TELEPHONE_CARDS",
          "description": "Telephone Cards"
        },
        {
          "value": "TELEPHONE_EQUIPMENT",
          "description": "Telephone Equipment"
        },
        {
          "value": "TELEPHONE_SERVICES",
          "description": "Telephone Services"
        },
        {
          "value": "THEATER",
          "description": "Theater"
        },
        {
          "value": "TIRE_RETREADING_AND_REPAIR",
          "description": "Tire Retreading and Repair"
        },
        {
          "value": "TOLL_OR_BRIDGE_FEES",
          "description": "Toll or Bridge Fees"
        },
        {
          "value": "TOOLS_AND_EQUIPMENT",
          "description": "Tools and equipment"
        },
        {
          "value": "TOURIST_ATTRACTIONS_AND_EXHIBITS",
          "description": "Tourist Attractions And Exhibits"
        },
        {
          "value": "TOWING_SERVICE",
          "description": "Towing service"
        },
        {
          "value": "TOYS_AND_GAMES",
          "description": "Toys and games"
        },
        {
          "value": "TRADE_AND_VOCATIONAL_SCHOOLS",
          "description": "Trade And Vocational Schools"
        },
        {
          "value": "TRADEMARK_INFRINGEMENT",
          "description": "Trademark Infringement"
        },
        {
          "value": "TRAILER_PARKS_AND_CAMPGROUNDS",
          "description": "Trailer Parks And Campgrounds"
        },
        {
          "value": "TRAINING_SERVICES",
          "description": "Training services"
        },
        {
          "value": "TRANSPORTATION_SERVICES",
          "description": "Transportation Services"
        },
        {
          "value": "TRAVEL",
          "description": "Travel"
        },
        {
          "value": "TRUCK_AND_UTILITY_TRAILER_RENTALS",
          "description": "Truck And Utility Trailer Rentals"
        },
        {
          "value": "TRUCK_STOP",
          "description": "Truck Stop"
        },
        {
          "value": "TYPESETTING_PLATE_MAKING_AND_RELATED_SERVICES",
          "description": "Typesetting, Plate Making, and Related Services"
        },
        {
          "value": "USED_MERCHANDISE_AND_SECONDHAND_STORES",
          "description": "Used Merchandise And Secondhand Stores"
        },
        {
          "value": "USED_PARTS_MOTOR_VEHICLE",
          "description": "Used parts - motor vehicle"
        },
        {
          "value": "UTILITIES",
          "description": "Utilities"
        },
        {
          "value": "UTILITIES_ELECTRIC_GAS_WATER_SANITARY",
          "description": "Utilities - Electric,Gas,Water,Sanitary"
        },
        {
          "value": "VARIETY_STORES",
          "description": "Variety Stores"
        },
        {
          "value": "VEHICLE_SALES",
          "description": "Vehicle sales"
        },
        {
          "value": "VEHICLE_SERVICE_AND_ACCESSORIES",
          "description": "Vehicle service and accessories"
        },
        {
          "value": "VIDEO_EQUIPMENT",
          "description": "Video Equipment"
        },
        {
          "value": "VIDEO_GAME_ARCADES_ESTABLISH",
          "description": "Video Game Arcades/Establish"
        },
        {
          "value": "VIDEO_GAMES_AND_SYSTEMS",
          "description": "Video Games & Systems"
        },
        {
          "value": "VIDEO_TAPE_RENTAL_STORES",
          "description": "Video Tape Rental Stores"
        },
        {
          "value": "VINTAGE_AND_COLLECTIBLE_VEHICLES",
          "description": "Vintage and Collectible Vehicles"
        },
        {
          "value": "VINTAGE_AND_COLLECTIBLES",
          "description": "Vintage and collectibles"
        },
        {
          "value": "VITAMINS_AND_SUPPLEMENTS",
          "description": "Vitamins & Supplements"
        },
        {
          "value": "VOCATIONAL_AND_TRADE_SCHOOLS",
          "description": "Vocational and trade schools"
        },
        {
          "value": "WATCH_CLOCK_AND_JEWELRY_REPAIR",
          "description": "Watch, clock, and jewelry repair"
        },
        {
          "value": "WEB_HOSTING_AND_DESIGN",
          "description": "Web hosting and design"
        },
        {
          "value": "WELDING_REPAIR",
          "description": "Welding Repair"
        },
        {
          "value": "WHOLESALE_CLUBS",
          "description": "Wholesale Clubs"
        },
        {
          "value": "WHOLESALE_FLORIST_SUPPLIERS",
          "description": "Wholesale Florist Suppliers"
        },
        {
          "value": "WHOLESALE_PRESCRIPTION_DRUGS",
          "description": "Wholesale Prescription Drugs"
        },
        {
          "value": "WILDLIFE_PRODUCTS",
          "description": "Wildlife Products"
        },
        {
          "value": "WIRE_TRANSFER",
          "description": "Wire Transfer"
        },
        {
          "value": "WIRE_TRANSFER_AND_MONEY_ORDER",
          "description": "Wire transfer and money order"
        },
        {
          "value": "WOMEN_ACCESSORY_SPECIALITY",
          "description": "Women's Accessory/Speciality"
        },
        {
          "value": "WOMEN_CLOTHING",
          "description": "Women's clothing"
        }
      ],
      "x-publicDocsSchemaName": "product_category",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json": {
      "type": "object",
      "title": "Link Description",
      "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
      "required": [
        "href",
        "rel"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "rel": {
          "type": "string",
          "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "method": {
          "type": "string",
          "description": "The HTTP method required to make the related call.",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "HEAD",
            "CONNECT",
            "OPTIONS",
            "PATCH"
          ],
          "x-visibility": {
            "extent": "EXTERNAL"
          }
        },
        "title": {
          "type": "string",
          "description": "The link title.",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "mediaType": {
          "type": "string",
          "description": "The media type, as defined by [RFC 2046](https://www.ietf.org/rfc/rfc2046.txt). Describes the link target.",
          "x-publicDocsSchemaName": "media_type",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "encType": {
          "type": "string",
          "description": "The media type in which to submit the request data.",
          "x-publicDocsSchemaName": "enc_type",
          "default": "application/json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "schema": {
          "description": "The schema that describes the request data.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "targetSchema": {
          "description": "The schema that describes the link target.",
          "x-publicDocsSchemaName": "target_schema",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_schema.json": {
      "type": "object",
      "title": "Link Schema",
      "description": "The request data or link target.",
      "additionalProperties": true,
      "properties": {
        "additionalItems": {
          "type": "object",
          "title": "Additional Items",
          "additionalProperties": true,
          "description": "Any additional items.",
          "x-publicDocsSchemaName": "additional_items"
        },
        "dependencies": {
          "type": "object",
          "title": "Dependencies",
          "additionalProperties": true
        },
        "items": {
          "type": "object",
          "title": "Items",
          "additionalProperties": true,
          "description": "An item."
        },
        "definitions": {
          "type": "object",
          "title": "Definitions",
          "additionalProperties": true
        },
        "patternProperties": {
          "type": "object",
          "title": "Pattern Properties",
          "additionalProperties": true,
          "description": "The pattern properties.",
          "x-publicDocsSchemaName": "pattern_properties"
        },
        "properties": {
          "type": "object",
          "title": "Properties",
          "additionalProperties": true
        },
        "allOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against all sub-schemas.",
          "x-publicDocsSchemaName": "all_of",
          "items": {
            "type": "object",
            "title": "All Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "all_of_item"
          }
        },
        "anyOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one or more sub-schemas.",
          "x-publicDocsSchemaName": "any_of",
          "items": {
            "type": "object",
            "title": "Any Of Item",
            "additionalProperties": true,
            "description": "A sub-schema against which the data must validate.",
            "x-publicDocsSchemaName": "any_of_item"
          }
        },
        "oneOf": {
          "type": "array",
          "description": "An array of sub-schemas. The data must validate against one sub-schema.",
          "x-publicDocsSchemaName": "one_of",
          "items": {
            "type": "object",
            "title": "One Of Item",
            "description": "A sub-schema against which the data must validate.",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "one_of_item"
          }
        },
        "not": {
          "type": "object",
          "title": "Not",
          "additionalProperties": true
        },
        "links": {
          "type": "array",
          "description": "An array of links.",
          "readOnly": true,
          "items": {
            "type": "object",
            "title": "Link",
            "additionalProperties": true,
            "x-publicDocsSchemaName": "link",
            "description": "A link.",
            "readOnly": true
          }
        },
        "fragmentResolution": {
          "type": "string",
          "description": "The fragment resolution.",
          "x-publicDocsSchemaName": "fragment_resolution"
        },
        "media": {
          "type": "object",
          "title": "Media",
          "description": "The media type and context-encoding scheme.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The media type. See [Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types](https://tools.ietf.org/html/rfc2046)."
            },
            "binaryEncoding": {
              "type": "string",
              "description": "The content-encoding scheme. See [Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](https://tools.ietf.org/html/rfc2045).",
              "x-publicDocsSchemaName": "binary_encoding"
            }
          }
        },
        "pathStart": {
          "type": "string",
          "format": "uri",
          "description": "To apply this schema to the instances' URIs, start the URIs with this value.",
          "x-publicDocsSchemaName": "path_start"
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error.json": {
      "type": "object",
      "title": "Error",
      "description": "The error details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The human-readable, unique name of the error."
        },
        "message": {
          "type": "string",
          "description": "The message that describes the error."
        },
        "debug_id": {
          "type": "string",
          "description": "The PayPal internal ID. Used for correlation purposes."
        },
        "information_link": {
          "type": "string",
          "description": "The information link, or URI, that shows detailed information about this error for the developer.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of additional details about the error.",
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error_details.json",
            "x-publicDocsSchemaName": "error_details"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json",
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true
          }
        }
      },
      "required": [
        "name",
        "message",
        "debug_id"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-error_details.json": {
      "title": "Error Details",
      "type": "object",
      "description": "The error details. Required for client-side `4XX` errors.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
        },
        "value": {
          "type": "string",
          "description": "The value of the field that caused the error."
        },
        "location": {
          "type": "string",
          "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
          "default": "body"
        },
        "issue": {
          "type": "string",
          "description": "The unique, fine-grained application-level error code."
        },
        "description": {
          "type": "string",
          "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
        }
      },
      "required": [
        "issue"
      ]
    },
    "plan_request_POST.json": {
      "title": "Create Plan Request",
      "description": "The create plan request details.",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string",
          "description": "The ID of the product created through Catalog Products API.",
          "minLength": 6,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "description": "The plan name.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status": {
          "type": "string",
          "description": "The initial state of the plan. Allowed input values are CREATED and ACTIVE.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "ACTIVE",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The plan was created. You cannot create subscriptions for a plan in this state."
            },
            {
              "value": "INACTIVE",
              "description": "The plan is inactive."
            },
            {
              "value": "ACTIVE",
              "description": "The plan is active. You can only create subscriptions for a plan in this state."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "description": {
          "type": "string",
          "description": "The detailed description of the plan.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "usage_type": {
          "type": "string",
          "description": "The plan type, which indicates the billing pattern.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "LICENSED",
          "x-enum": [
            {
              "value": "LICENSED",
              "description": "A licensed plan. Has a fixed billing amount."
            },
            {
              "value": "METERED",
              "description": "A metered plan. Billed based on service consumption."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "billing_cycles": {
          "type": "array",
          "description": "An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/billing_cycle.json",
            "x-publicDocsSchemaName": "billing_cycle"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_preferences": {
          "$ref": "#/definitions/payment_preferences.json",
          "x-publicDocsSchemaName": "payment_preferences",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "taxes": {
          "$ref": "#/definitions/taxes.json",
          "x-publicDocsSchemaName": "taxes",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "quantity_supported": {
          "type": "boolean",
          "description": "Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.",
          "default": false,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "name",
        "billing_cycles",
        "payment_preferences",
        "product_id"
      ],
      "x-publicDocsSchemaName": "plan_request"
    },
    "plan_collection.json": {
      "title": "Plan Collection",
      "description": "The list of plans with details.",
      "type": "object",
      "properties": {
        "plans": {
          "type": "array",
          "minItems": 0,
          "maxItems": 32767,
          "description": "An array of plans.",
          "items": {
            "$ref": "#/definitions/plan.json",
            "x-publicDocsSchemaName": "plan"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_items": {
          "type": "integer",
          "description": "The total number of items.",
          "minimum": 0,
          "maximum": 500000000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages.",
          "minimum": 0,
          "maximum": 100000000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page}",
          "rel": "first",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page+1}",
          "rel": "next",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={page-1}",
          "rel": "prev",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans?product_id={product_id}&page_size={page_size}&page={last}",
          "rel": "last",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "plan_collection"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch_request.json": {
      "type": "array",
      "title": "Patch Request",
      "description": "An array of JSON patch objects to apply partial updates to resources.",
      "items": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch.json",
        "x-publicDocsSchemaName": "patch"
      },
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-patch.json": {
      "type": "object",
      "title": "Patch",
      "description": "The JSON patch object to apply partial updates to resources.",
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation.",
          "x-enum": [
            {
              "value": "add",
              "description": "Depending on the target location reference, completes one of these functions:<ul><li><strong>The target location is an array index</strong>. Inserts a new value into the array at the specified index.</li><li><strong>The target location is an object parameter that does not already exist</strong>. Adds a new parameter to the object.</li><li><strong>The target location is an object parameter that does exist</strong>. Replaces that parameter's value.</li></ul>The <code>value</code> parameter defines the value to add. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.1\">4.1. add</a>."
            },
            {
              "value": "remove",
              "description": "Removes the value at the target location. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.2\">4.2. remove</a>."
            },
            {
              "value": "replace",
              "description": "Replaces the value at the target location with a new value. The operation object must contain a <code>value</code> parameter that defines the replacement value. For the operation to succeed, the target location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.3\">4.3. replace</a>."
            },
            {
              "value": "move",
              "description": "Removes the value at a specified location and adds it to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to move the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.4\">4.4. move</a>."
            },
            {
              "value": "copy",
              "description": "Copies the value at a specified location to the target location. The operation object must contain a <code>from</code> parameter, which is a string that contains a JSON pointer value that references the location in the target document from which to copy the value. For the operation to succeed, the <code>from</code> location must exist. For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.5\">4.5. copy</a>."
            },
            {
              "value": "test",
              "description": "Tests that a value at the target location is equal to a specified value. The operation object must contain a <code>value</code> parameter that defines the value to compare to the target location's value. For the operation to succeed, the target location must be equal to the <code>value</code> value. For test, <code>equal</code> indicates that the value at the target location and the value that <code>value</code> defines are of the same JSON type. The data type of the value determines how equality is defined:<table><thead align=\"left\"><tr><th>Type</th><th>Considered equal if both values</th></tr></thead><tbody align=\"left\"><tr><td><strong>strings</strong></td><td>Contain the same number of Unicode characters and their code points are byte-by-byte equal.</td></tr><tr><td><strong>numbers</strong></td><td>Are numerically equal.</td></tr><tr><td><strong>arrays</strong></td><td>Contain the same number of values, and each value is equal to the value at the corresponding position in the other array, by using these type-specific rules.</td></tr><tr><td><strong>objects</strong></td><td>Contain the same number of parameters, and each parameter is equal to a parameter in the other object, by comparing their keys (as strings) and their values (by using these type-specific rules).</td></tr><tr><td><strong>literals (<code>false</code>, <code>true</code>, and <code>null</code>)</strong></td><td>Are the same. The comparison is a logical comparison. For example, whitespace between the parameter values of an array is not significant. Also, ordering of the serialization of object parameters is not significant.</td></tr></tbody></table>For more information, see <a href=\"https://tools.ietf.org/html/rfc6902#section-4.6\">4.6. test</a>."
            }
          ]
        },
        "path": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location at which to complete the operation."
        },
        "value": {
          "type": [
            "number",
            "integer",
            "string",
            "boolean",
            "null",
            "array",
            "object"
          ],
          "title": "Patch Value",
          "description": "The value to apply. The <code>remove</code> operation does not require a value."
        },
        "from": {
          "type": "string",
          "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation."
        }
      },
      "required": [
        "op"
      ]
    },
    "update_pricing_schemes_list_request.json": {
      "title": "Update Pricing Scheme Request",
      "description": "The update pricing scheme request details.",
      "type": "object",
      "properties": {
        "pricing_schemes": {
          "type": "array",
          "description": "An array of pricing schemes.",
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/update_pricing_scheme_request.json",
            "x-publicDocsSchemaName": "update_pricing_scheme_request"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "pricing_schemes"
      ],
      "x-publicDocsSchemaName": "update_pricing_schemes_list_request"
    },
    "update_pricing_scheme_request.json": {
      "title": "Update Pricing Scheme",
      "description": "The update pricing scheme request details.",
      "type": "object",
      "properties": {
        "billing_cycle_sequence": {
          "type": "integer",
          "description": "The billing cycle sequence.",
          "minimum": 1,
          "maximum": 99,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "pricing_scheme": {
          "$ref": "#/definitions/pricing_scheme.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "billing_cycle_sequence",
        "pricing_scheme"
      ],
      "x-publicDocsSchemaName": "update_pricing_scheme_request"
    },
    "subscription.json": {
      "title": "Subscription",
      "description": "The subscription details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/subscription_status.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "The PayPal-generated ID for the subscription.",
              "minLength": 3,
              "maxLength": 50,
              "readOnly": true,
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "plan_id": {
              "type": "string",
              "description": "The ID of the plan.",
              "minLength": 3,
              "maxLength": 50,
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "start_time": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "quantity": {
              "type": "string",
              "description": "The quantity of the product in the subscription.",
              "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
              "minLength": 1,
              "maxLength": 32,
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "shipping_amount": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "payee": {
              "readOnly": true,
              "$ref": "#/definitions/customized_x_unsupported_4908_merchant.CommonComponentsSpecification-v1-schema-payee.json",
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "BusinessCompany"
              }
            },
            "subscriber": {
              "$ref": "#/definitions/subscriber.json",
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "ConsumerPersonal"
              }
            },
            "billing_info": {
              "readOnly": true,
              "$ref": "#/definitions/subscription_billing_info.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "auto_renewal": {
              "type": "boolean",
              "description": "DEPRECATED. Indicates whether the subscription auto-renews after the billing cycles complete.",
              "default": false,
              "x-deprecated": {
                "see": "billing_cycle.json#/total_cycles",
                "since_version": "1.1"
              },
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "create_time": {
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "update_time": {
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "preferred_currency_conversion": {
              "x-publicDocsSchemaName": "preferred_currency_conversion",
              "description": "The payer's preferred currency conversion option. Value is `PAYPAL` or `VENDOR`.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-currency_conversion_provider.json",
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "preferred_funding_source": {
              "description": "The preferred funding source details",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-funding_instrument_response.json",
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "client_configuration": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-client_configuration.json",
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "metadata": {
              "description": "JSON Web Token (JWT) that can be associated with the subscription. This does not influence the subscription behavior and is just a pass through data.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-json_web_token.json",
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "custom_id": {
              "type": "string",
              "description": "The custom id for the subscription. Can be invoice id.",
              "minLength": 1,
              "maxLength": 127,
              "pattern": "^[\\x20-\\x7E]+",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "plan_overridden": {
              "type": "boolean",
              "description": "Indicates whether the subscription has overridden any plan attributes.",
              "readOnly": true,
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "plan": {
              "description": "Inline plan details.",
              "$ref": "#/definitions/customized_x_unsupported_2182_plan.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "links": {
              "type": "array",
              "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "readOnly": true,
              "items": {
                "x-publicDocsSchemaName": "link_description",
                "readOnly": true,
                "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            }
          }
        }
      ],
      "x-links": [
        {
          "href": "https://www.paypal.com/webapps/billing/subscriptions?ba_token={ba_token}",
          "rel": "approve",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription_id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription_id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription_id}/suspend",
          "rel": "suspend",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription_id}/cancel",
          "rel": "cancel",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription_id}/activate",
          "rel": "activate",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription_id}/capture",
          "rel": "capture",
          "method": "POST"
        }
      ],
      "x-publicDocsSchemaName": "subscription",
      "properties": {}
    },
    "subscription_status.json": {
      "title": "Subscription Status",
      "description": "The subscription status details.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the subscription.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "APPROVAL_PENDING",
              "description": "The subscription is created but not yet approved by the buyer."
            },
            {
              "value": "APPROVED",
              "description": "The buyer has approved the subscription."
            },
            {
              "value": "ACTIVE",
              "description": "The subscription is active."
            },
            {
              "value": "SUSPENDED",
              "description": "The subscription is suspended."
            },
            {
              "value": "CANCELLED",
              "description": "The subscription is cancelled."
            },
            {
              "value": "EXPIRED",
              "description": "The subscription is expired."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status_change_note": {
          "type": "string",
          "description": "The reason or notes for the status of the subscription.",
          "minLength": 1,
          "maxLength": 128,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status_update_time": {
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "status_changed_by": {
          "type": "string",
          "description": "The last actor that updated the subscription.",
          "readOnly": true,
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "SYSTEM",
              "description": "The subscription status bas been updated by the system."
            },
            {
              "value": "BUYER",
              "description": "The subscription status bas been updated by the buyer."
            },
            {
              "value": "MERCHANT",
              "description": "The subscription status bas been updated by the merchant."
            },
            {
              "value": "FACILITATOR",
              "description": "The subscription status bas been updated by the facilitator. Facilitators ca be a third party or channel partner that integrates with PayPal."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "subscription_status"
    },
    "subscriber.json": {
      "title": "Subscriber Response Information",
      "description": "The subscriber response information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_2933_merchant.CommonComponentsSpecification-v1-schema-payer.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        {
          "properties": {
            "shipping_address": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json",
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "ConsumerPersonal"
              }
            },
            "payment_source": {
              "$ref": "#/definitions/payment_source_response.json",
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "ConsumerPersonal"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "subscriber",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payer_base.json"
        },
        {
          "properties": {
            "name": {
              "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
              "$ref": "#/definitions/customized_x_unsupported_1645_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
            },
            "phone": {
              "description": "The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href=\"https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments\">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-phone_with_type.json"
            },
            "birth_date": {
              "description": "The birth date of the payer in `YYYY-MM-DD` format.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json"
            },
            "tax_info": {
              "description": "The tax information of the payer. Required only for Brazilian payer's. Both `tax_id` and `tax_id_type` are required.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-tax_info.json"
            },
            "address": {
              "description": "The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.",
              "$ref": "#/definitions/customized_x_unsupported_8309_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payer",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payer_base.json": {
      "type": "object",
      "title": "Payer Base",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "properties": {
        "email_address": {
          "description": "The email address of the payer.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        },
        "payer_id": {
          "description": "The PayPal-assigned ID for the payer.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-account_id.json"
        }
      },
      "x-publicDocsSchemaName": "payer_base"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "prefix": {
          "type": "string",
          "description": "The prefix, or title, to the party's name.",
          "maxLength": 140
        },
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        },
        "middle_name": {
          "type": "string",
          "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.",
          "maxLength": 140
        },
        "suffix": {
          "type": "string",
          "description": "The suffix for the party's name.",
          "maxLength": 140
        },
        "alternate_full_name": {
          "type": "string",
          "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.",
          "maxLength": 300
        },
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json": {
      "oneOf": [
        {
          "country_code": "AD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "AN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "AZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "BY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "BZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "CO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "CZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "DZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "EG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "EH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ER",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ES",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ET",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "FR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0342-\\u0345\\u037A-\\u037D\\u037F\\u0384-\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03D7\\u03F3\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE]"
        },
        {
          "country_code": "GT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "GY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "HN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "HU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ID",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F]"
        },
        {
          "country_code": "IM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "IT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "JP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u3005\\uFF07\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FF\\u31F0-\\u31FF\\uFF65-\\uFF9F\\uFF0D\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "KH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\uAC00-\\uD7A3\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "KW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "KZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "LV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "LY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ME",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "ML",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "MO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MQ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "MZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NP",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "NZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "OM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "PY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "QA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "RS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "RW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SB",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "SH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ST",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SX",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "SZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TD",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TH",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0E01-\\u0E3A\\u0E40-\\u0E4F]"
        },
        {
          "country_code": "TJ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TL",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "TN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TO",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TR",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TV",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "TW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        },
        {
          "country_code": "TZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[\\u0400-\\u0481\\u048A-\\u052F]"
        },
        {
          "country_code": "UG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "US",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UY",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "UZ",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VC",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VG",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VI",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VN",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "VU",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WF",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "WS",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "XK",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YE",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "YT",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZA",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZM",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "ZW",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]"
        },
        {
          "country_code": "C2",
          "validation_regex": "[A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u024F\\u02B0-\\u02DD\\u02E0-\\u02E4\\u0300-\\u0341\\u0357-\\u0361\\u1E00-\\u1EFF\\u2C60-\\u2C7F\\uFB00-\\uFB06\\u0020\\u0027\\u002D\\u002E\\u002C]|[－\\uFF21-\\uFF3A\\uFF3E\\uFF40-\\uFF5A\\uFF07\\u3000\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD87E[\\uDC00-\\uDE1D]"
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-phone_with_type.json": {
      "type": "object",
      "title": "Phone With Type",
      "description": "The phone information.",
      "properties": {
        "phone_type": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone_type.json"
        },
        "phone_number": {
          "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.",
          "$ref": "#/definitions/customized_x_unsupported_8346_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json"
        }
      },
      "required": [
        "phone_number"
      ],
      "x-publicDocsSchemaName": "phone_with_type"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone_type.json": {
      "type": "string",
      "title": "Phone Type",
      "description": "The phone type.",
      "enum": [
        "FAX",
        "HOME",
        "MOBILE",
        "OTHER",
        "PAGER"
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_no_time.json": {
      "type": "string",
      "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.",
      "format": "ppaas_date_notime_v2",
      "minLength": 10,
      "maxLength": 10,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-tax_info.json": {
      "type": "object",
      "description": "The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.",
      "title": "Tax Information",
      "properties": {
        "tax_id": {
          "type": "string",
          "description": "The customer's tax ID value.",
          "maxLength": 14
        },
        "tax_id_type": {
          "type": "string",
          "description": "The customer's tax ID type.",
          "x-enum": [
            {
              "value": "BR_CPF",
              "description": "The individual tax ID type, typically is 11 characters long."
            },
            {
              "value": "BR_CNPJ",
              "description": "The business tax ID type, typically is 14 characters long."
            }
          ]
        }
      },
      "required": [
        "tax_id",
        "tax_id_type"
      ],
      "x-publicDocsSchemaName": "tax_info"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
          "maxLength": 100
        },
        "admin_area_4": {
          "type": "string",
          "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
          "maxLength": 100
        },
        "admin_area_3": {
          "type": "string",
          "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
          "maxLength": 100
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "address_details": {
          "type": "object",
          "title": "Address Details",
          "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
          "properties": {
            "street_number": {
              "type": "string",
              "description": "The street number.",
              "maxLength": 100
            },
            "street_name": {
              "type": "string",
              "description": "The street name. Just `Drury` in `Drury Lane`.",
              "maxLength": 100
            },
            "street_type": {
              "type": "string",
              "description": "The street type. For example, avenue, boulevard, road, or expressway.",
              "maxLength": 100
            },
            "delivery_service": {
              "type": "string",
              "description": "The delivery service. Post office box, bag number, or post office name.",
              "maxLength": 100
            },
            "building_name": {
              "type": "string",
              "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.",
              "maxLength": 100
            },
            "sub_building": {
              "type": "string",
              "description": "The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
              "maxLength": 100
            }
          }
        }
      },
      "required": [
        "country_code"
      ]
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json": {
      "oneOf": [
        {
          "country_code": "AL",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AR",
          "validation_regex": "([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?"
        },
        {
          "country_code": "AT",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "AU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BE",
          "validation_regex": "[1-9]\\d{3}"
        },
        {
          "country_code": "BG",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "BN",
          "validation_regex": "[A-Z]{2}[ ]?\\d{4}"
        },
        {
          "country_code": "BR",
          "validation_regex": "\\d{5}[\\-]?\\d{3}"
        },
        {
          "country_code": "BT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "BY",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CA",
          "validation_regex": "[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ ]?\\d[ABCEGHJ-NPRSTV-Z]\\d"
        },
        {
          "country_code": "CH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CL",
          "validation_regex": "\\d{7}"
        },
        {
          "country_code": "CN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "CR",
          "validation_regex": "\\d{4,5}|\\d{3}-\\d{4}"
        },
        {
          "country_code": "CY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "CZ",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "DE",
          "validation_regex": "(0[1-9]|[1-9]\\d)\\d{3}"
        },
        {
          "country_code": "DK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "DO",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "EC",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "EE",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "ES",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FI",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "FM",
          "validation_regex": "(9694[1-4])(?:[ \\-]?(\\d{4}))?"
        },
        {
          "country_code": "FO",
          "validation_regex": "(FO[ \\-]?)?\\d{3}"
        },
        {
          "country_code": "FR",
          "validation_regex": "\\d{2}[ ]?\\d{3}"
        },
        {
          "country_code": "GB",
          "validation_regex": "GIR[ ]?0AA|(?:(?:AB|AL|B|BA|BB|BD|BF|BH|BL|BN|BR|BS|BT|BX|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(?:\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}))|BFPO[ ]?\\d{1,4}"
        },
        {
          "country_code": "GF",
          "validation_regex": "9[78]3\\d{2}"
        },
        {
          "country_code": "GL",
          "validation_regex": "(DK-?)?39\\d{2}"
        },
        {
          "country_code": "GP",
          "validation_regex": "9[78][01]\\d{2}"
        },
        {
          "country_code": "GR",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "HR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "HU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ID",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "IE",
          "validation_regex": "[A-Za-z0-9 \\-]{1,10}"
        },
        {
          "country_code": "IL",
          "validation_regex": "\\d{5}(\\d{2})?"
        },
        {
          "country_code": "IN",
          "validation_regex": "\\d{3}[ ]?\\d{3}"
        },
        {
          "country_code": "IS",
          "validation_regex": "\\d{3}"
        },
        {
          "country_code": "IT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "JP",
          "validation_regex": "\\d{3}-?\\d{4}"
        },
        {
          "country_code": "KG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "KH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KW",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "KZ",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "LA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LK",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LT",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "LU",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "LV",
          "validation_regex": "LV-\\d{4}"
        },
        {
          "country_code": "MA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MC",
          "validation_regex": "980\\d{2}"
        },
        {
          "country_code": "MD",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "ME",
          "validation_regex": "8\\d{4}"
        },
        {
          "country_code": "MK",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "MN",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MQ",
          "validation_regex": "9[78]2\\d{2}"
        },
        {
          "country_code": "MT",
          "validation_regex": "[A-Z]{3}[ ]?\\d{2,4}"
        },
        {
          "country_code": "MU",
          "validation_regex": "\\d{3}(?:\\d{2}|[A-Z]{2}\\d{3})"
        },
        {
          "country_code": "MV",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MX",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "MY",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "NL",
          "validation_regex": "\\d{4}[ ]?[A-Z]{2}"
        },
        {
          "country_code": "NO",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "NP",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "NZ",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "OM",
          "validation_regex": "(?:PC )?\\d{3}"
        },
        {
          "country_code": "PE",
          "validation_regex": "(?:LIMA[ ]?\\d{1,2}|CALLAO[ ]?0?\\d)|[0-2]?\\d{1,4}"
        },
        {
          "country_code": "PH",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "PL",
          "validation_regex": "\\d{2}-\\d{3}"
        },
        {
          "country_code": "PT",
          "validation_regex": "\\d{4}([\\-]?\\d{3})?"
        },
        {
          "country_code": "PY",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "RE",
          "validation_regex": "9[78]4\\d{2}"
        },
        {
          "country_code": "RO",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "RS",
          "validation_regex": "\\d{5,6}"
        },
        {
          "country_code": "RU",
          "validation_regex": "[1-9]\\d{5}"
        },
        {
          "country_code": "SA",
          "validation_regex": "\\d{5}([\\-]?\\d{4})?"
        },
        {
          "country_code": "SE",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SG",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "SI",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "SK",
          "validation_regex": "\\d{3}[ ]?\\d{2}"
        },
        {
          "country_code": "SM",
          "validation_regex": "4789\\d"
        },
        {
          "country_code": "SV",
          "validation_regex": "(?:CP[ ]?)?[1-3][1-7][0-2]\\d"
        },
        {
          "country_code": "TH",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TR",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "TW",
          "validation_regex": "\\d{3}(\\d{2})?"
        },
        {
          "country_code": "UA",
          "validation_regex": "\\d{5}"
        },
        {
          "country_code": "US",
          "validation_regex": "\\d{5}([ \\-]?\\d{4})?"
        },
        {
          "country_code": "UY",
          "validation_regex": "[1-9]\\d{4}"
        },
        {
          "country_code": "VA",
          "validation_regex": "00120"
        },
        {
          "country_code": "VE",
          "validation_regex": "[1-8]\\d{3}([\\-]?[A-Z])?"
        },
        {
          "country_code": "VN",
          "validation_regex": "\\d{6}"
        },
        {
          "country_code": "YT",
          "validation_regex": "976\\d{2}"
        },
        {
          "country_code": "ZA",
          "validation_regex": "\\d{4}"
        },
        {
          "country_code": "C2",
          "validation_regex": "\\d{6}"
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json": {
      "type": "string",
      "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
      "format": "ppaas_common_country_code_v2",
      "maxLength": 2,
      "minLength": 2,
      "pattern": "^([A-Z]{2}|C2)$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json": {
      "type": "object",
      "description": "The shipping details.",
      "title": "Shipping Details",
      "properties": {
        "name": {
          "description": "The name of the person to whom to ship the items. Supports only the `full_name` property.",
          "$ref": "#/definitions/customized_x_unsupported_5959_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
        },
        "type": {
          "description": "The method by which the payer wants to get their items from the payee e.g shipping, in-person pickup. Either type or options but not both may be present.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "SHIPPING",
              "description": "The payer intends to receive the items at a specified address.",
              "default": true
            },
            {
              "value": "PICKUP_IN_PERSON",
              "description": "The payer intends to pick up the items from the payee in person."
            }
          ]
        },
        "options": {
          "type": "array",
          "description": "An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.",
          "maxItems": 10,
          "items": {
            "description": "The option that the payee or merchant offers to the payer to ship or pick up their items.",
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_option.json",
            "x-publicDocsSchemaName": "shipping_option"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "address": {
          "description": "The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_3334_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        }
      },
      "x-publicDocsSchemaName": "shipping_detail"
    },
    "merchant.CommonComponentsSpecification-v1-schema-shipping_option.json": {
      "type": "object",
      "title": "Shipping Option",
      "description": "The options that the payee or merchant offers to the payer to ship or pick up their items.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID that identifies a payer-selected shipping option.",
          "maxLength": 127
        },
        "label": {
          "type": "string",
          "description": "A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.",
          "maxLength": 127
        },
        "type": {
          "description": "The method by which the payer wants to get their items.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_type.json"
        },
        "amount": {
          "description": "The shipping cost for the selected option.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json"
        },
        "selected": {
          "type": "boolean",
          "description": "If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`."
        }
      },
      "required": [
        "id",
        "label",
        "selected"
      ],
      "x-publicDocsSchemaName": "shipping_option"
    },
    "merchant.CommonComponentsSpecification-v1-schema-shipping_type.json": {
      "type": "string",
      "title": "Shipping Type",
      "description": "The method by which the payer wants to get their items.",
      "x-enum": [
        {
          "value": "SHIPPING",
          "description": "The payer intends to receive the items at a specified address.",
          "default": true
        },
        {
          "value": "PICKUP",
          "description": "The payer intends to pick up the items at a specified address. For example, a store address."
        }
      ],
      "x-publicDocsSchemaName": "shipping_type",
      "properties": {}
    },
    "payment_source_response.json": {
      "type": "object",
      "title": "Payment Source Response",
      "description": "The payment source used to fund the payment.",
      "properties": {
        "card": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response_with_billing_address.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "payment_source_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_response_with_billing_address.json": {
      "type": "object",
      "title": "Card Response with billing address and name",
      "description": "The payment card used to fund the payment. Card can be a credit or debit card.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response.json"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The card holder's name as it appears on the card.",
              "minLength": 2,
              "maxLength": 300
            },
            "billing_address": {
              "$ref": "#/definitions/customized_x_unsupported_9981_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json",
              "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties."
            },
            "expiry": {
              "description": "The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json"
            },
            "currency_code": {
              "description": "Currency code of the given instrument",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-currency_code.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "card_response_with_billing_address",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_response.json": {
      "type": "object",
      "title": "Card Response",
      "description": "The payment card to use to fund a payment. Card can be a credit or debit card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the card.",
          "readOnly": true,
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be deprecated"
          }
        },
        "last_n_chars": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "minLength": 2,
          "pattern": "[0-9]{2,}",
          "readOnly": true,
          "x-deprecated": {
            "see": "last_digits"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be deprecated"
          }
        },
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "brand": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "type": {
          "type": "string",
          "description": "The payment card type.",
          "readOnly": true,
          "x-enum": [
            {
              "value": "CREDIT",
              "description": "A credit card."
            },
            {
              "value": "DEBIT",
              "description": "A debit card."
            },
            {
              "value": "PREPAID",
              "description": "A Prepaid card."
            },
            {
              "value": "UNKNOWN",
              "description": "Card type cannot be determined."
            }
          ]
        },
        "issuer": {
          "type": "string",
          "description": "The issuer of the card instrument.",
          "readOnly": true,
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "description": "Eventually this field is set to be depreciated"
          },
          "x-enum": [
            {
              "value": "PAYPAL",
              "description": "A PayPal credit card."
            }
          ]
        },
        "bin": {
          "type": "string",
          "description": "An acronym for Bank Identification Number (BIN), also known as IIN (Issuer Identification Number). It Is a standardized global numbering scheme (6 to 8 digits) used to identify a bank / institution that issued the card.",
          "pattern": "^[0-9]{6,8}$",
          "maxLength": 8,
          "minLength": 6,
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "authentication_result": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-authentication_response.json"
        },
        "attributes": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_attributes_response.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        }
      },
      "x-publicDocsSchemaName": "card_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_brand.json": {
      "type": "string",
      "title": "Card Brand",
      "description": "The card network or brand. Applies to credit, debit, gift, and payment cards.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "x-enum": [
        {
          "value": "VISA",
          "description": "Visa card."
        },
        {
          "value": "MASTERCARD",
          "description": "Mastecard card."
        },
        {
          "value": "DISCOVER",
          "description": "Discover card."
        },
        {
          "value": "AMEX",
          "description": "American Express card."
        },
        {
          "value": "SOLO",
          "description": "Solo debit card."
        },
        {
          "value": "JCB",
          "description": "Japan Credit Bureau card."
        },
        {
          "value": "STAR",
          "description": "Military Star card."
        },
        {
          "value": "DELTA",
          "description": "Delta Airlines card."
        },
        {
          "value": "SWITCH",
          "description": "Switch credit card."
        },
        {
          "value": "MAESTRO",
          "description": "Maestro credit card."
        },
        {
          "value": "CB_NATIONALE",
          "description": "Carte Bancaire (CB) credit card."
        },
        {
          "value": "CONFIGOGA",
          "description": "Configoga credit card."
        },
        {
          "value": "CONFIDIS",
          "description": "Confidis credit card."
        },
        {
          "value": "ELECTRON",
          "description": "Visa Electron credit card."
        },
        {
          "value": "CETELEM",
          "description": "Cetelem credit card."
        },
        {
          "value": "CHINA_UNION_PAY",
          "description": "China union pay credit card."
        }
      ],
      "x-publicDocsSchemaName": "card_brand",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-authentication_response.json": {
      "type": "object",
      "title": "Authentication Response",
      "description": "Results of Authentication such as 3D Secure.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "liability_shift": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-liability_shift.json"
        },
        "three_d_secure": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-three_d_secure_authentication_response.json"
        }
      },
      "x-publicDocsSchemaName": "authentication_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-liability_shift.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Liability shift indicator. The outcome of the issuer's authentication.",
      "x-enum": [
        {
          "value": "YES",
          "description": "Liability has shifted to the card issuer. Available only after order is authorized or captured."
        },
        {
          "value": "NO",
          "description": "Liability is with the merchant."
        },
        {
          "value": "POSSIBLE",
          "description": "Liability may shift to the card issuer. Available only before order is authorized or captured."
        },
        {
          "value": "UNKNOWN",
          "description": "The authentication system is not available."
        }
      ],
      "x-publicDocsSchemaName": "liability_shift",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-three_d_secure_authentication_response.json": {
      "type": "object",
      "title": "The 3D Secure Authentication Response",
      "description": "Results of 3D Secure Authentication.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "authentication_status": {
          "description": "The outcome of the issuer's authentication.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-pares_status.json"
        },
        "enrollment_status": {
          "description": "Status of authentication eligibility.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-enrolled.json"
        }
      },
      "x-publicDocsSchemaName": "three_d_secure_authentication_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-pares_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Transactions status result identifier. The outcome of the issuer's authentication.",
      "x-enum": [
        {
          "value": "Y",
          "description": "Successful authentication."
        },
        {
          "value": "N",
          "description": "Failed authentication / account not verified / transaction denied."
        },
        {
          "value": "U",
          "description": "Unable to complete authentication."
        },
        {
          "value": "A",
          "description": "Successful attempts transaction."
        },
        {
          "value": "C",
          "description": "Challenge required for authentication."
        },
        {
          "value": "R",
          "description": "Authentication rejected (merchant must not submit for authorization)."
        },
        {
          "value": "D",
          "description": "Challenge required; decoupled authentication confirmed."
        },
        {
          "value": "I",
          "description": "Informational only; 3DS requestor challenge preference acknowledged."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-enrolled.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Status of Authentication eligibility.",
      "x-enum": [
        {
          "value": "Y",
          "description": "Yes. The bank is participating in 3-D Secure protocol and will return the ACSUrl."
        },
        {
          "value": "N",
          "description": "No. The bank is not participating in 3-D Secure protocol."
        },
        {
          "value": "U",
          "description": "Unavailable. The DS or ACS is not available for authentication at the time of the request."
        },
        {
          "value": "B",
          "description": "Bypass. The merchant authentication rule is triggered to bypass authentication."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_attributes_response.json": {
      "type": "object",
      "title": "Card Attributes Response",
      "description": "Additional attributes associated with the use of this card.",
      "properties": {
        "vault": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-vault_response.json"
        }
      },
      "x-publicDocsSchemaName": "card_attributes_response",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-vault_response.json": {
      "type": "object",
      "title": "Saved Payment Source Response",
      "description": "The details about a saved payment source.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the saved payment source.",
          "minLength": 1,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "description": "The vault status.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "CREATED",
              "description": "The payment source has been saved in your customer's vault."
            },
            {
              "value": "APPROVED",
              "description": "Customer has approved the action of saving the specified payment_source into their vault. Use v2/vault/approval-tokens/id/confirm-payment-token to save the payment_source in the vault."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "vault_response",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json": {
      "type": "string",
      "description": "The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
      "minLength": 7,
      "maxLength": 7,
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])$",
      "properties": {}
    },
    "subscription_billing_info.json": {
      "title": "Subscription Billing Information",
      "description": "The billing details for the subscription. If the subscription was or is active, these fields are populated.",
      "type": "object",
      "properties": {
        "outstanding_balance": {
          "description": "The total pending bill amount, to be paid by the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cycle_executions": {
          "type": "array",
          "description": "The trial and regular billing executions.",
          "minItems": 0,
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/cycle_execution.json"
          },
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "last_payment": {
          "readOnly": true,
          "description": "The details for the last payment of the subscription.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-last_payment_details.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "next_billing_time": {
          "description": "The next date and time for billing this subscription, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "next_payment": {
          "description": "The next payment amount that the subscriber would be charged.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "final_payment_time": {
          "description": "The date and time when the final billing cycle occurs, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "failed_payments_count": {
          "type": "integer",
          "description": "The number of consecutive payment failures. Resets to `0` after a successful payment. If this reaches the `payment_failure_threshold` value, the subscription updates to the `SUSPENDED` state.",
          "minimum": 0,
          "maximum": 999,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "last_failed_payment": {
          "description": "The details for the last failed payment of the subscription.",
          "readOnly": true,
          "$ref": "#/definitions/failed_payment_details.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_paid_amount": {
          "description": "The amount already paid by the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "price_change_effective_after": {
          "readOnly": true,
          "type": "integer",
          "description": "Time interval (in days) after which the future subscription billing cycles are affected with the new pricing change.",
          "minimum": 0,
          "maximum": 99,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "outstanding_balance",
        "failed_payments_count"
      ],
      "x-publicDocsSchemaName": "subscription_billing_info"
    },
    "cycle_execution.json": {
      "title": "Billing Cycle Execution Details",
      "description": "The regular and trial execution details for a billing cycle.",
      "type": "object",
      "properties": {
        "tenure_type": {
          "type": "string",
          "description": "The type of the billing cycle.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "REGULAR",
              "description": "A regular billing cycle."
            },
            {
              "value": "TRIAL",
              "description": "A trial billing cycle."
            }
          ],
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "sequence": {
          "type": "integer",
          "description": "The order in which to run this cycle among other billing cycles.",
          "minimum": 0,
          "maximum": 99,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cycles_completed": {
          "type": "integer",
          "description": "The number of billing cycles that have completed.",
          "minimum": 0,
          "maximum": 9999,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cycles_remaining": {
          "type": "integer",
          "description": "For a finite billing cycle, cycles_remaining is the number of remaining cycles. For an infinite billing cycle, cycles_remaining is set as 0.",
          "minimum": 0,
          "maximum": 9999,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "current_pricing_scheme_version": {
          "type": "integer",
          "description": "The active pricing scheme version for the billing cycle.",
          "minimum": 1,
          "maximum": 99,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount_payable_per_cycle": {
          "description": "The amount to be paid per cycle.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-deprecated": {
            "see": "cycle_execution.json#/total_price_per_cycle",
            "since_version": "1.5"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_price_per_cycle": {
          "description": "The amount per cycle with breakdown of item total, shipping and tax amounts.",
          "readOnly": true,
          "$ref": "#/definitions/amount_with_breakdown.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_cycles": {
          "type": "integer",
          "description": "The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).",
          "minimum": 0,
          "maximum": 999,
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "tenure_type",
        "sequence",
        "cycles_completed"
      ],
      "x-publicDocsSchemaName": "cycle_execution"
    },
    "amount_with_breakdown.json": {
      "type": "object",
      "title": "Amount with Breakdown",
      "description": "The breakdown details for the amount. Includes the gross, tax, fee, and shipping amounts.",
      "properties": {
        "gross_amount": {
          "description": "The amount for this transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_item_amount": {
          "description": "The item total for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "fee_amount": {
          "description": "The fee details for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_amount": {
          "description": "The shipping amount for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tax_amount": {
          "description": "The tax amount for the transaction.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "net_amount": {
          "description": "The net amount that the payee receives for this transaction in their PayPal account. The net amount is computed as <code>gross_amount</code> minus the <code>paypal_fee</code>.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "gross_amount"
      ],
      "x-publicDocsSchemaName": "amount_with_breakdown"
    },
    "merchant.CommonComponentsSpecification-v1-schema-last_payment_details.json": {
      "title": "Last Payment Details",
      "description": "The details for the last payment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_8769_merchant.CommonComponentsSpecification-v1-schema-capture_status.json",
          "x-publicDocsSchemaName": "capture_status",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        {
          "properties": {
            "amount": {
              "description": "The last payment amount.",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "time": {
              "description": "The date and time when the last payment was made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "sender_transaction_id": {
              "type": "string",
              "description": "The sender side PayPal-generated transaction ID.",
              "minLength": 3,
              "maxLength": 50,
              "readOnly": true,
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "receiver_transaction_id": {
              "type": "string",
              "description": "The receiver side PayPal-generated transaction ID.",
              "minLength": 3,
              "maxLength": 50,
              "readOnly": true,
              "x-visibility": {
                "extent": "INTERNAL"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            }
          }
        }
      ],
      "required": [
        "amount",
        "time"
      ],
      "x-publicDocsSchemaName": "last_payment_details",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-capture_status.json": {
      "type": "object",
      "title": "Capture Status",
      "description": "The status of a captured payment.",
      "properties": {
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>."
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            },
            {
              "value": "FAILED",
              "description": "There was an error while capturing payment.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ],
          "readOnly": true
        },
        "status_details": {
          "description": "The details of the captured payment status.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-capture_status_details.json"
        }
      },
      "x-publicDocsSchemaName": "capture_status"
    },
    "merchant.CommonComponentsSpecification-v1-schema-capture_status_details.json": {
      "title": "Capture Status Details",
      "description": "The details of the captured payment status.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason why the captured payment status is `PENDING` or `DENIED`.",
          "type": "string",
          "x-enum": [
            {
              "value": "BUYER_COMPLAINT",
              "description": "The payer initiated a dispute for this captured payment with PayPal."
            },
            {
              "value": "CHARGEBACK",
              "description": "The captured funds were reversed in response to the payer disputing this captured payment with the issuer of the financial instrument used to pay for this captured payment."
            },
            {
              "value": "ECHECK",
              "description": "The payer paid by an eCheck that has not yet cleared."
            },
            {
              "value": "INTERNATIONAL_WITHDRAWAL",
              "description": "Visit your online account. In your **Account Overview**, accept and deny this payment."
            },
            {
              "value": "OTHER",
              "description": "No additional specific reason can be provided. For more information about this captured payment, visit your account online or contact PayPal."
            },
            {
              "value": "PENDING_REVIEW",
              "description": "The captured payment is pending manual review."
            },
            {
              "value": "RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION",
              "description": "The payee has not yet set up appropriate receiving preferences for their account. For more information about how to accept or deny this payment, visit your account online. This reason is typically offered in scenarios such as when the currency of the captured payment is different from the primary holding currency of the payee."
            },
            {
              "value": "REFUNDED",
              "description": "The captured funds were refunded."
            },
            {
              "value": "TRANSACTION_APPROVED_AWAITING_FUNDING",
              "description": "The payer must send the funds for this captured payment. This code generally appears for manual EFTs."
            },
            {
              "value": "UNILATERAL",
              "description": "The payee does not have a PayPal account."
            },
            {
              "value": "VERIFICATION_REQUIRED",
              "description": "The payee's PayPal account is not verified."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "capture_status_details"
    },
    "failed_payment_details.json": {
      "title": "Failed Payment Details",
      "description": "The details for the failed payment of the subscription.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The failed payment amount.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "time": {
          "description": "The date and time when the failed payment was made, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "reason_code": {
          "type": "string",
          "description": "The reason code for the payment failure.",
          "minLength": 1,
          "maxLength": 120,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "PAYMENT_DENIED",
              "description": "PayPal declined the payment due to one or more customer issues."
            },
            {
              "value": "INTERNAL_SERVER_ERROR",
              "description": "An internal server error has occurred."
            },
            {
              "value": "PAYEE_ACCOUNT_RESTRICTED",
              "description": "The payee account is not in good standing and cannot receive payments."
            },
            {
              "value": "PAYER_ACCOUNT_RESTRICTED",
              "description": "The payer account is not in good standing and cannot make payments."
            },
            {
              "value": "PAYER_CANNOT_PAY",
              "description": "Payer cannot pay for this transaction."
            },
            {
              "value": "SENDING_LIMIT_EXCEEDED",
              "description": "The transaction exceeds the payer's sending limit."
            },
            {
              "value": "TRANSACTION_RECEIVING_LIMIT_EXCEEDED",
              "description": "The transaction exceeds the receiver's receiving limit."
            },
            {
              "value": "CURRENCY_MISMATCH",
              "description": "The transaction is declined due to a currency mismatch."
            }
          ],
          "readOnly": true,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "next_payment_retry_time": {
          "description": "The time when the retry attempt for the failed payment occurs, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "amount",
        "time"
      ],
      "x-publicDocsSchemaName": "failed_payment_details"
    },
    "merchant.CommonComponentsSpecification-v1-schema-currency_conversion_provider.json": {
      "type": "string",
      "description": "The list of currency conversion providers.",
      "title": "Currency Conversion Provider",
      "x-enum": [
        {
          "value": "PAYPAL",
          "description": "PayPal currency conversion."
        },
        {
          "value": "VENDOR",
          "description": "Vendor currency conversion."
        }
      ],
      "x-publicDocsSchemaName": "currency_conversion_provider",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-funding_instrument_response.json": {
      "type": "object",
      "title": "Funding Instrument Response",
      "description": "The customer's funding instrument. Returned as a funding option to external entities.",
      "properties": {
        "card": {
          "description": "The payment card response information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response_with_billing_address.json"
        },
        "bank_account": {
          "description": "The bank account response information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-bank_account_response.json",
          "x-visibility": {
            "extent": "LIMITED_RELEASE",
            "detail": "Available for trusted partners like eBay to pass a bank account for the payment."
          }
        },
        "credit": {
          "description": "The PayPal Credit instrument information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-paypal_credit.json",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        },
        "balance": {
          "description": "The PayPal Balance instrument information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-balance_response.json"
        }
      },
      "x-publicDocsSchemaName": "funding_instrument_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-bank_account_response.json": {
      "type": "object",
      "title": "Bank Account Response",
      "description": "The details for a bank account that can be used to fund a payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the bank account.",
          "readOnly": true
        },
        "last_n_chars": {
          "type": "string",
          "description": "The last four digits of the bank account number.",
          "pattern": "[0-9]{4}",
          "readOnly": true
        },
        "bank_name": {
          "type": "string",
          "maxLength": 64,
          "description": "The name of the bank to which the account is linked."
        },
        "account_type": {
          "type": "string",
          "description": "The type of bank account.",
          "x-enum": [
            {
              "value": "SAVINGS",
              "description": "A savings account."
            },
            {
              "value": "CHECKING",
              "description": "A checking account."
            }
          ]
        },
        "country_code": {
          "description": "The [two-character IS0-3166-1 country code](/docs/integration/direct/rest/country-codes/) of the bank.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        },
        "backup_funding_instrument": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-backup_funding_instrument.json"
        }
      },
      "required": [
        "id",
        "last_n_chars",
        "bank_name",
        "country_code"
      ],
      "x-publicDocsSchemaName": "bank_account_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-backup_funding_instrument.json": {
      "type": "object",
      "title": "Backup Funding Instrument",
      "description": "The backup funding instrument to use for payment when the primary instrument fails.",
      "properties": {
        "card": {
          "description": "The backup card response information.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_response.json"
        }
      },
      "required": [
        "card"
      ],
      "x-publicDocsSchemaName": "backup_funding_instrument"
    },
    "merchant.CommonComponentsSpecification-v1-schema-paypal_credit.json": {
      "type": "object",
      "title": "Credit Account Response",
      "description": "The Buyer credit option used to fund the payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the credit instrument.",
          "minLength": 4,
          "maxLength": 25,
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The credit sub-types.",
          "minLength": 1,
          "maxLength": 50,
          "readOnly": true,
          "x-enum": [
            {
              "value": "BILL_ME_LATER",
              "description": "Bill Me Later."
            },
            {
              "value": "PAYPAL_SMART_CONNECT",
              "description": "PayPal Smart Connect."
            },
            {
              "value": "EBAY_MASTERCARD",
              "description": "EBAY MasterCard."
            },
            {
              "value": "PAYPAL_EXTRAS_MASTERCARD",
              "description": "PayPal Extras MasterCard."
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "x-publicDocsSchemaName": "paypal_credit"
    },
    "merchant.CommonComponentsSpecification-v1-schema-balance_response.json": {
      "type": "object",
      "title": "Balance Response",
      "description": "The PayPal Balance to fund a payment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the Balance Funding Instrument.",
          "minLength": 1,
          "maxLength": 16
        }
      },
      "x-publicDocsSchemaName": "balance_response"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-client_configuration.json": {
      "type": "object",
      "title": "Client configuration",
      "description": "Client configuration that captures the product flows and specific experiences that a user completes a paypal transaction.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "product_code": {
          "type": "string",
          "description": "Types of the payment acceptance solution.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "EXPRESS_CHECKOUT",
              "description": "The payment acceptance solution is express checkout."
            },
            {
              "value": "WEBSITE_PAYMENTS_STANDARD",
              "description": "The payment acceptance solution is website payment standard."
            },
            {
              "value": "DIRECT_CREDIT_CARD",
              "description": "The payment acceptance solution is credit card."
            },
            {
              "value": "BILLING_AGREEMENTS",
              "description": "The payment acceptance solution is a billing agreement."
            },
            {
              "value": "BILLING_SUBSCRIPTIONS",
              "description": "Billing plan and subcription solution"
            },
            {
              "value": "PAYOUTS",
              "description": "MassPay/Payouts solution"
            },
            {
              "value": "AUTOWITHDRAWAL",
              "description": "Automatic withdrawal initiated to meet a regulatory compliance policy."
            },
            {
              "value": "VAULT",
              "description": "Paypal Vault solution."
            },
            {
              "value": "INVOICING",
              "description": "The product code representing invoice payments."
            },
            {
              "value": "PAYPAL_IDENTITY_LINKING",
              "description": "Paypal Connect payments solution."
            },
            {
              "value": "PAYPAL_PRO",
              "description": "The payment product features transactions where PayPal collects monthly fees from pro merchants."
            }
          ]
        },
        "product_feature": {
          "type": "string",
          "description": "A feature capturing variant of a generic product code, when applicable.",
          "default": "NONE",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "NONE",
              "description": "The default value for most payment products."
            },
            {
              "value": "ORDERS",
              "description": "The payment product featuring order being persisted."
            },
            {
              "value": "BILLING_AGREEMENTS",
              "description": "The payment product features a billing agreement payment."
            }
          ]
        },
        "api": {
          "type": "string",
          "description": "The primary api used to trigger the paypal transaction.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAYMENTS_V1",
              "description": "Payments V1 API."
            },
            {
              "value": "ORDERS_V1",
              "description": "Orders V1 API."
            },
            {
              "value": "ORDERS_V2",
              "description": "Orders V2 API."
            },
            {
              "value": "LEGACY_CHECKOUT_API",
              "description": "Paypal legacy checkout API."
            },
            {
              "value": "BILLING_V1",
              "description": "Billing V1 API"
            },
            {
              "value": "VAULT_V2",
              "description": "VAULT V2 API"
            },
            {
              "value": "IDENTITY",
              "description": "IDENTITY API"
            },
            {
              "value": "INVOICING_V1",
              "description": "INVOICING V1 API"
            },
            {
              "value": "INVOICING_V2",
              "description": "INVOICING V2 API"
            },
            {
              "value": "LEGACY_BILLING_API",
              "description": "Paypal legacy Billing API."
            },
            {
              "value": "LEGACY_BILLING_CBA_API",
              "description": "Paypal legacy Billing API via NVP/SOAP - SetCustomerBillingAgreement."
            },
            {
              "value": "SUBSCRIPTIONS_V1",
              "description": "Subscriptions V1 API."
            },
            {
              "value": "RECURRING_PAYMENTS_V1",
              "description": "Recurring Payments REST API."
            },
            {
              "value": "LEGACY_RECURRING_PAYMENTS",
              "description": "Legacy Recurring Payments NVP/SOAP API"
            },
            {
              "value": "NONE",
              "description": "The transaction / experience does not involve API interaction"
            }
          ]
        },
        "integration_artifact": {
          "type": "string",
          "description": "Identifier for the software that paypal has provided to enable the integration.",
          "default": "NONE",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAYPAL_JS_SDK",
              "description": "PayPal's JavaScript SDK, for checkout. This includes PayPal branded payments ( PayPal Wallet, Venmo, PayPal Credit), Alternative payment methods and Hosted card processing capabilities"
            },
            {
              "value": "JS_V3",
              "description": "Paypal's client side javascript, Version 3, for checkout."
            },
            {
              "value": "JS_V4",
              "description": "Paypal's client side javascript, Version 4, for checkout."
            },
            {
              "value": "BRAINTREE_VZERO",
              "description": "Use this when Merchant has integrated with an old version of BRAINTREE_VZERO that does not ingest JS_V3 or V4."
            },
            {
              "value": "NATIVE_SDK",
              "description": "Use this when Merchant has integrated with PayPal's Native Checkout SDK."
            },
            {
              "value": "NONE",
              "description": "The transaction integration type is not defined."
            }
          ]
        },
        "experience": {
          "description": "The experience that a user completes a paypal transaction.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-product_experience.json"
        },
        "initiator": {
          "description": "The initiator product for current transaction. This object determines the layer through which the transaction is initiated.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-initiator.json"
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-product_experience.json": {
      "type": "object",
      "title": "Product Experience",
      "description": "The product experiences that a user completes on a PayPal transaction.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "user_experience_flow": {
          "type": "string",
          "description": "The user experience flow for the PayPal transaction.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "FULL_PAGE_REDIRECT",
              "description": "The consumer's browser does a 302 redirect to <a href=\"https://www.paypal.com/us/home\">paypal.com</a> from the third-party site."
            },
            {
              "value": "INCONTEXT",
              "description": "The buyer interacts with <a href=\"https://www.paypal.com/us/home\">paypal.com</a> in an iframe or pop up window, which is a modal that is outside or hovers over the existing merchant experience."
            },
            {
              "value": "INLINE",
              "description": "The buyer interacts with <a href=\"https://www.paypal.com/us/home\">paypal.com</a> through an iframe on the merchant site, and is in line with the existing merchant experience."
            },
            {
              "value": "NATIVE",
              "description": "The buyer interacts with PayPal through PayPal's native SDK."
            },
            {
              "value": "FULL_PAGE",
              "description": "The buyer interacts with PayPal by opening PayPal.com directly on browser"
            }
          ]
        },
        "entry_point": {
          "type": "string",
          "description": "The payment method user chose to start the payment process.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAY_WITH_VENMO",
              "description": "The transaction is initiated from Venmo."
            },
            {
              "value": "PAY_WITH_CARD",
              "description": "The transaction is initiated from a credit card."
            },
            {
              "value": "PAY_WITH_PAYPAL",
              "description": "The transaction is initiated from PayPal."
            },
            {
              "value": "PAY_WITH_PAYPAL_CREDIT",
              "description": "The transaction is initiated from PayPal credit."
            },
            {
              "value": "PAY_WITH_SEPA",
              "description": "The transaction is initiated from Pay With SEPA."
            },
            {
              "value": "PAY_WITH_ALTPAY_ALIPAY",
              "description": "The transaction is initiated from Alternative Payment AliPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_BANCONTACT",
              "description": "The transaction is initiated from Alternative Payment Bancontact."
            },
            {
              "value": "PAY_WITH_ALTPAY_BOLETO",
              "description": "The transaction is initiated from Alternative Payment Boleto."
            },
            {
              "value": "PAY_WITH_ALTPAY_EPS",
              "description": "The transaction is initiated from Alternative Payment EPS."
            },
            {
              "value": "PAY_WITH_ALTPAY_GIROPAY",
              "description": "The transaction is initiated from Alternative Payment Giropay."
            },
            {
              "value": "PAY_WITH_ALTPAY_IDEAL",
              "description": "The transaction is initiated from Alternative Payment iDeal."
            },
            {
              "value": "PAY_WITH_ALTPAY_MYBANK",
              "description": "The transaction is initiated from Alternative Payment MyBank."
            },
            {
              "value": "PAY_WITH_ALTPAY_OXXO",
              "description": "The transaction is initiated from Alternative Payment OXXO."
            },
            {
              "value": "PAY_WITH_ALTPAY_P24",
              "description": "The transaction is initiated from Alternative Payment P24."
            },
            {
              "value": "PAY_WITH_ALTPAY_SOFORT",
              "description": "The transaction is initiated from Alternative Payment Sofort."
            },
            {
              "value": "PAY_WITH_ALTPAY_WECHATPAY",
              "description": "The transaction is initiated from Alternative Payment WeChatPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_ZIMPLER",
              "description": "The transaction is initiated from Alternative Payment Zimpler."
            },
            {
              "vaule": "PAYPAL_SITE",
              "description": "The action is initiated on PayPal.com website"
            },
            {
              "value": "UNKNOWN",
              "description": "The transaction source is unknown."
            }
          ]
        },
        "payment_method": {
          "type": "string",
          "description": "Payment method used to complete the transaction. This can sometimes be different than the entry point if user changed their mind during the checkout flow.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "PAY_WITH_VENMO",
              "description": "The transaction is completed through Venmo."
            },
            {
              "value": "PAY_WITH_CARD",
              "description": "The transaction is completed through a credit card."
            },
            {
              "value": "PAY_WITH_PAYPAL",
              "description": "The transaction is completed through PayPal."
            },
            {
              "value": "PAY_WITH_PAYPAL_CREDIT",
              "description": "The transaction is completed through PayPal credit."
            },
            {
              "value": "PAY_WITH_SEPA",
              "description": "The transaction is completed through Pay With SEPA."
            },
            {
              "value": "PAY_WITH_ALTPAY_ALIPAY",
              "description": "The transaction is completed through Alternative Payment AliPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_BANCONTACT",
              "description": "The transaction is completed through Alternative Payment Bancontact."
            },
            {
              "value": "PAY_WITH_ALTPAY_BOLETO",
              "description": "The transaction is completed through Alternative Payment Boleto."
            },
            {
              "value": "PAY_WITH_ALTPAY_EPS",
              "description": "The transaction is completed through Alternative Payment EPS."
            },
            {
              "value": "PAY_WITH_ALTPAY_GIROPAY",
              "description": "The transaction is completed through Alternative Payment Giropay."
            },
            {
              "value": "PAY_WITH_ALTPAY_IDEAL",
              "description": "The transaction is completed through Alternative Payment iDeal."
            },
            {
              "value": "PAY_WITH_ALTPAY_MYBANK",
              "description": "The transaction is completed through Alternative Payment MyBank."
            },
            {
              "value": "PAY_WITH_ALTPAY_OXXO",
              "description": "The transaction is completed through Alternative Payment OXXO."
            },
            {
              "value": "PAY_WITH_ALTPAY_P24",
              "description": "The transaction is completed through Alternative Payment P24."
            },
            {
              "value": "PAY_WITH_ALTPAY_SOFORT",
              "description": "The transaction is completed through Alternative Payment Sofort."
            },
            {
              "value": "PAY_WITH_ALTPAY_WECHATPAY",
              "description": "The transaction is completed through Alternative Payment WeChatPay."
            },
            {
              "value": "PAY_WITH_ALTPAY_ZIMPLER",
              "description": "The transaction is completed through Alternative Payment Zimpler."
            },
            {
              "value": "PAY_WITH_CRYPTO",
              "description": "The transaction is essentially funded by Crypto."
            },
            {
              "value": "UNKNOWN",
              "description": "The transaction payment method is unknown."
            }
          ]
        },
        "channel": {
          "type": "string",
          "description": "The payment flow channel type.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "WEB",
              "description": "A browser on a PC."
            },
            {
              "value": "MOBILE_WEB",
              "description": "A browser on a mobile device."
            },
            {
              "value": "MOBILE_APP",
              "description": "A native app in a mobile device."
            },
            {
              "value": "BATCH",
              "description": "A batch invocation"
            }
          ]
        },
        "product_flow": {
          "type": "string",
          "description": "The product flow type.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "CLASSIC",
              "description": "A legacy checkout API flow."
            },
            {
              "value": "HERMES",
              "description": "A web application handles the user's checkout interaction."
            },
            {
              "value": "PROX",
              "description": "An eBay application handles the user's PayPal checkout experience."
            },
            {
              "value": "SMART_PAYMENT_BUTTONS",
              "description": "A web application handles the user's checkout interaction."
            },
            {
              "value": "BUYER_APPROVAL_BILLING_AGREEMENT_CREATE",
              "description": "A buyer signing up for a billing agreement"
            },
            {
              "value": "CONSUMER_EXP_BILLING_AGREEMENT_MODIFY",
              "description": "A billing agreement modification flow initiated by consumer on paypal.com"
            },
            {
              "value": "ONE_TIME_PAYMENT_USING_BILLING_AGREEMENT",
              "description": "A flow allowing consumer to change funding for a transaction, while buyer is present for the transaction"
            },
            {
              "value": "BUYER_APPROVAL_BILLING_AGREEMENT_WITH_PURCHASE",
              "description": "A purchase flow which buyer also approves creation of a billing agreement"
            },
            {
              "value": "BUYER_APPROVAL_SUBSCRIPTIONS",
              "description": "A buyer signing up for a Subscription."
            },
            {
              "value": "CONSUMER_EXP_SUBSCRIPTIONS_MODIFY",
              "description": "A subscription modification flow intiated by consumer on paypal.com."
            },
            {
              "value": "BUYER_APPROVAL_SUBSCRIPTIONS_REVISE",
              "description": "A subscription modification flow intiated by consumer on merchant site."
            },
            {
              "value": "BUYER_APPROVAL_SUBSCRIPTIONS_PRICING_CHANGE",
              "description": "A buyer consenting changes made to a plan of the subscription"
            },
            {
              "value": "BUYER_INSTRUMENT_AUTHENTICATION_BILLING_AGREEMENT",
              "description": "Additional factor authentication flow for Billing Agreements."
            },
            {
              "value": "NEGATIVE_BALANCE_COLLECTION",
              "description": "Collection flow with the system initiating payments to resolve negative balance on sink accounts."
            }
          ]
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-initiator.json": {
      "type": "object",
      "title": "Initiator",
      "description": "The initiator product for current transaction. This object determines the layer through which the transaction is initiated.",
      "x-visibility": {
        "extent": "INTERNAL"
      },
      "properties": {
        "product_code": {
          "type": "string",
          "description": "Types of the payment acceptance solution. The values for this field should be subset of original product_code, see client_configuration#product_code.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "EXPRESS_CHECKOUT",
              "description": "The payment acceptance solution is express checkout."
            },
            {
              "value": "WEBSITE_PAYMENTS_STANDARD",
              "description": "The payment acceptance solution is website payment standard."
            }
          ]
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-json_web_token.json": {
      "type": "string",
      "description": "Describes a JSON Web Token (JWT). The value is either an [Unsecured JWT](https://tools.ietf.org/html/rfc7519#section-6) or a Secured JWT. A secured JWT is either a [JSON Web Signature](https://tools.ietf.org/html/rfc7515) or a [JSON Web Encryption](https://tools.ietf.org/html/rfc7516).",
      "format": "ppaas_common_jwt_v4",
      "minLength": 3,
      "maxLength": 2000,
      "pattern": "^[A-Za-z0-9-_+\\/]+[.](([A-Za-z0-9-_+\\/]+[.]([A-Za-z0-9-_+\\/]+)?)|(([A-Za-z0-9-_+\\/]*[.]){2}[A-Za-z0-9-_+\\/]+[.][A-Za-z0-9-_+\\/]*))$",
      "properties": {}
    },
    "subscription_request_post.json": {
      "title": "Create Subscription Request",
      "description": "The create subscription request details.",
      "type": "object",
      "properties": {
        "plan_id": {
          "type": "string",
          "description": "The ID of the plan.",
          "minLength": 3,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "start_time": {
          "description": "The date and time when the subscription started, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "default": "Current time",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product in the subscription.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_amount": {
          "description": "The shipping charges.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "subscriber": {
          "$ref": "#/definitions/subscriber_request.json",
          "x-securityClassification": {
            "data_class": "class2",
            "data_category": "ConsumerPersonal"
          }
        },
        "auto_renewal": {
          "type": "boolean",
          "description": "DEPRECATED. Indicates whether the subscription auto-renews after the billing cycles complete.",
          "default": false,
          "x-deprecated": {
            "see": "billing_cycle.json#/total_cycles",
            "since_version": "1.1"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "application_context": {
          "$ref": "#/definitions/application_context.json",
          "x-publicDocsSchemaName": "application_context",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "client_configuration": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-client_configuration.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "metadata": {
          "description": "JSON Web Token (JWT) that can be associated with the subscription. This does not influence the subscription behavior and is just a pass through data.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-json_web_token.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "custom_id": {
          "type": "string",
          "description": "The custom id for the subscription. Can be invoice id.",
          "minLength": 1,
          "maxLength": 127,
          "pattern": "^[\\x20-\\x7E]+",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "plan": {
          "description": "An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object.",
          "$ref": "#/definitions/plan_override.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "plan_id"
      ],
      "x-publicDocsSchemaName": "subscription_request"
    },
    "subscriber_request.json": {
      "title": "Subscriber Request Information",
      "description": "The subscriber request information .",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_3638_merchant.CommonComponentsSpecification-v1-schema-payer.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        {
          "properties": {
            "shipping_address": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json",
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "ConsumerPersonal"
              }
            },
            "payment_source": {
              "$ref": "#/definitions/payment_source.json",
              "x-securityClassification": {
                "data_class": "class2",
                "data_category": "ConsumerPersonal"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "subscriber_request",
      "properties": {}
    },
    "payment_source.json": {
      "type": "object",
      "title": "Payment Source",
      "description": "The payment source definition. To be eligible to create subscription using debit or credit card, you will need to sign up here (https://www.paypal.com/bizsignup/entry/product/ppcp). Please note, its available only for non-3DS cards and for merchants in US and AU regions.",
      "properties": {
        "card": {
          "$ref": "#/definitions/customized_x_unsupported_1063_merchant.CommonComponentsSpecification-v1-schema-card.json",
          "x-securityClassification": {
            "data_class": "class2",
            "data_category": "ConsumerPersonal"
          }
        }
      },
      "x-publicDocsSchemaName": "payment_source"
    },
    "merchant.CommonComponentsSpecification-v1-schema-card.json": {
      "type": "object",
      "title": "Card",
      "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The PayPal-generated ID for the card.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The card holder's name as it appears on the card.",
          "maxLength": 300
        },
        "number": {
          "type": "string",
          "description": "The primary account number (PAN) for the payment card.",
          "minLength": 13,
          "maxLength": 19
        },
        "expiry": {
          "description": "The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json"
        },
        "security_code": {
          "type": "string",
          "description": "The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.",
          "pattern": "[0-9]{3,4}"
        },
        "last_digits": {
          "type": "string",
          "description": "The last digits of the payment card.",
          "pattern": "[0-9]{2,}",
          "readOnly": true
        },
        "card_type": {
          "description": "The card brand or network. Typically used in the response.",
          "readOnly": true,
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_brand.json"
        },
        "billing_address": {
          "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_6584_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        },
        "authentication_results": {
          "type": "array",
          "description": "A list of authentication results. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-3ds_result.json"
          },
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          }
        },
        "attributes": {
          "description": "Additional attributes associated with the use of this card.",
          "x-publicDocsSchemaName": "card_attributes",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_attributes.json"
        }
      },
      "required": [
        "number",
        "expiry"
      ],
      "x-publicDocsSchemaName": "card"
    },
    "merchant.CommonComponentsSpecification-v1-schema-3ds_result.json": {
      "type": "object",
      "title": "The 3D Secure Authentication Result",
      "description": "Additional 3D Secure authentication data.",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      },
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-authentication_result_type.json"
        },
        {
          "properties": {
            "eci_flag": {
              "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-eci_flag.json"
            },
            "ucaf_indicator": {
              "description": "Universal Cardholder Authentication Field (UCAF) Indicator value provided by the issuer.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-ucaf_indicator.json"
            },
            "card_brand": {
              "description": "Card brand that the transaction was processed for authentication.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-3ds_card_brand.json"
            },
            "cavv": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "description": "This is the cardholder authentication value. The CAVV is unique to the cardholder and to the transaction that was authenticated."
            },
            "xid": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40,
              "description": "Transaction identifier resulting from authentication processing."
            },
            "enrolled": {
              "description": "Status of Authentication eligibility.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-enrolled.json"
            },
            "pares_status": {
              "description": "Transactions status result identifier. The outcome of the issuer's authentication.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-pares_status.json"
            },
            "merchant_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "description": "The merchant name that was sent in the authentication request."
            },
            "three_ds_version": {
              "type": "string",
              "minLength": 1,
              "maxLength": 10,
              "description": "The 3DS version that was used to process the transaction."
            },
            "directory_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction."
            },
            "authentication_type": {
              "description": "Indicates the type of authentication that will be used to challenge the card holder.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-authentication_type.json"
            },
            "access_control_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the Access Control Server (ACS) to identify a single transaction."
            },
            "signature_verification_status": {
              "description": "Transaction Signature status identifier.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-signature_verification_status.json"
            },
            "paypal_acquiring_mid": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^[0-9A-Z]+$",
              "description": "The PayPal acquiring MID to be used for authorization."
            },
            "paypal_acquiring_bin": {
              "type": "string",
              "minLength": 1,
              "maxLength": 6,
              "pattern": "^[0-9]+$",
              "description": "The PayPal acquiring BIN to be used for authorization."
            },
            "cavv_algorithm": {
              "description": "Indicates the algorithm used to generate the CAVV value.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-cavv_algorithm.json"
            },
            "three_ds_server_transaction_id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 36,
              "description": "Unique transaction identifier assigned by the 3DS Server to identify a single transaction."
            }
          }
        }
      ],
      "required": [
        "type"
      ],
      "x-publicDocsSchemaName": "3ds_result",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-authentication_result_type.json": {
      "type": "object",
      "title": "Authentication Result Type",
      "description": "Indicates the form of authentication used on the financial instrument.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of authentication used on the financial instrument.",
          "x-enum": [
            {
              "value": "THREE_DS_AUTHENTICATION",
              "description": "The card was authenticated using 3D Secure (3DS) authentication scheme."
            }
          ]
        }
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-eci_flag.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.",
      "x-enum": [
        {
          "value": "MASTERCARD_NON_3D_SECURE_TRANSACTION",
          "description": "Mastercard non-3-D Secure transaction."
        },
        {
          "value": "MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION",
          "description": "Mastercard attempted authentication transaction."
        },
        {
          "value": "MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION",
          "description": "Mastercard fully authenticated transaction."
        },
        {
          "value": "FULLY_AUTHENTICATED_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB fully authenticated transaction."
        },
        {
          "value": "ATTEMPTED_AUTHENTICATION_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB attempted authentication transaction."
        },
        {
          "value": "NON_3D_SECURE_TRANSACTION",
          "description": "VISA, AMEX, JCB, DINERS CLUB non-3-D Secure transaction."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-ucaf_indicator.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Universal Cardholder Authentication Field (UCAF) Indicator value provided by the issuer.",
      "x-enum": [
        {
          "value": "NON_SECURECODE_TRANSACTION",
          "description": "Non-SecureCode transaction, bypassed by the merchant."
        },
        {
          "value": "MERCHANT_ONLY_SECURECODE_TRANSACTION",
          "description": "Merchant-Only SecureCode transaction."
        },
        {
          "value": "FULLY_AUTHENTICATED_SECURECODE",
          "description": "Fully authenticated SecureCode."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-3ds_card_brand.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Card brand that the transaction was processed for authentication.",
      "x-enum": [
        {
          "value": "AMERICAN_EXPRESS",
          "description": "Card Brand Amex."
        },
        {
          "value": "DISCOVER",
          "description": "Card Brand DISCOVER."
        },
        {
          "value": "JCB",
          "description": "Card Brand JCB."
        },
        {
          "value": "MAESTRO",
          "description": "Card Brand MAESTRO."
        },
        {
          "value": "MASTERCARD",
          "description": "Card Brand MASTERCARD."
        },
        {
          "value": "SOLO",
          "description": "Card Brand SOLO."
        },
        {
          "value": "VISA",
          "description": "Card Brand VISA."
        },
        {
          "value": "ELECTRON",
          "description": "Card Brand ELECTRON."
        },
        {
          "value": "ELO",
          "description": "Card Brand ELO."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-authentication_type.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "description": "Indicates the type of authentication that was used to challenge the card holder.",
      "x-enum": [
        {
          "value": "STATIC",
          "description": "Indicates fixed password."
        },
        {
          "value": "DYNAMIC",
          "description": "Indicates one-time password. Could be single-step or multi-step."
        },
        {
          "value": "OUT_OF_BAND",
          "description": "Indicates biometric over the phone."
        },
        {
          "value": "DECOUPLED",
          "description": "Indicates decoupled authentication."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-signature_verification_status.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[A-Z]+$",
      "description": "Transaction signature status identifier.",
      "x-enum": [
        {
          "value": "YES",
          "description": "Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted."
        },
        {
          "value": "NO",
          "description": "Indicates that the PARes could not be validated."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-cavv_algorithm.json": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Z_]+$",
      "description": "Indicates the algorithm used to generate the CAVV/AAV value.",
      "x-enum": [
        {
          "value": "CVV_WITH_ATN",
          "description": "Refers to the Visa CAVV generation specification that includes a unique identifier built into the value."
        },
        {
          "value": "MASTERCARD_SPA_ALGORITHM",
          "description": "Refers to Secure Payment Algorithm used to generate Mastercard's Accountholder Authentication Value (AAV)."
        }
      ],
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_attributes.json": {
      "type": "object",
      "title": "Card Attributes",
      "description": "Additional attributes associated with the use of this card.",
      "properties": {
        "customer": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-customer.json"
        },
        "vault": {
          "description": "Instruction to vault the card based on the specified strategy.",
          "allOf": [
            {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-vault_instruction_base.json"
            }
          ]
        },
        "verification": {
          "description": "Instruction to optionally verify the card based on the specified strategy.",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_verification.json"
        },
        "installments": {
          "description": "Payer selected installment option.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-installments.json"
        }
      },
      "x-publicDocsSchemaName": "card_attributes",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-customer.json": {
      "type": "object",
      "title": "Customer information on merchant's or partner's system of records",
      "description": "The details about a customer in merchant's or partner's system of records.",
      "properties": {
        "id": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-merchant_partner_customer_id.json"
        },
        "email_address": {
          "description": "Email address of the buyer as provided to the merchant or on file with the merchant. Email Address is required if you are processing the transaction using PayPal Guest Processing which is offered to select partners and merchants. For all other use cases we do not expect partners/merchant to send email_address of their customer.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-email.json"
        }
      },
      "x-publicDocsSchemaName": "customer"
    },
    "merchant.CommonComponentsSpecification-v1-schema-merchant_partner_customer_id.json": {
      "type": "string",
      "description": "The unique ID for a customer in merchant's or partner's system of records.",
      "minLength": 1,
      "maxLength": 22,
      "pattern": "^[0-9a-zA-Z_-]+$",
      "x-publicDocsSchemaName": "merchant_partner_customer_id",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-vault_instruction_base.json": {
      "type": "object",
      "title": "Base vault Instruction parameters",
      "description": "Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.",
      "properties": {
        "confirm_payment_token": {
          "type": "string",
          "description": "Defines how and when the payment source gets vaulted.",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$",
          "x-enum": [
            {
              "value": "ON_ORDER_COMPLETION",
              "description": "Defines that the payer's payment-source should be vaulted only when at least one payment (authorization/capture) using that payment-source is successful."
            }
          ]
        }
      },
      "required": [
        "confirm_payment_token"
      ],
      "x-publicDocsSchemaName": "vault_instruction_base",
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-card_verification.json": {
      "type": "object",
      "title": "Card Verification",
      "description": "The API caller can opt in to verify the card through PayPal offered verification services (e.g. Smart Dollar Auth, 3DS).",
      "properties": {
        "method": {
          "description": "The method used for card verification.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "x-enum": [
            {
              "value": "3D_SECURE",
              "description": "The contingency surfaced as an additional security layer that helps prevent unauthorized card-not-present transactions and protects the merchant from exposure to fraud."
            },
            {
              "value": "AVS_CVV",
              "description": "Places a temporary hold on the card to ensure its validity. This process protects the merchant from exposure to fraud. This verification method will confirm that the address information or CVV included matches what the issuing bank has on file for the associated card, ensuring that only authorized card users are able to make purchases from you."
            }
          ],
          "x-publicDocsSchemaName": "card_verification"
        }
      },
      "x-visibility": {
        "extent": "LIMITED_RELEASE"
      }
    },
    "merchant.CommonComponentsSpecification-v1-schema-installments.json": {
      "type": "object",
      "title": "Installment information.",
      "description": "The details of the selected installment option.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "properties": {
        "term": {
          "type": "integer",
          "description": "The installment term chosen by the payer.",
          "minimum": 1,
          "maximum": 300
        },
        "interval_duration": {
          "description": "The frequency with which the payer has agreed to make the payment, represented in ISO8601 standard duration format (e.g. P1M - a period of 1 month).",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-time_duration.json"
        }
      },
      "required": [
        "term",
        "interval_duration"
      ],
      "x-publicDocsSchemaName": "installments"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v4-schema-json-openapi-2.0-time_duration.json": {
      "type": "string",
      "title": "Time Duration",
      "description": "The [ISO-8601-formatted](https://www.iso.org/standard/40874.html) length of time in years, months, weeks, days, hours, minutes, and seconds.<blockquote><strong>Note:</strong> The format is <code>P<var>y</var>Y<var>m</var>M<var>d</var>DT<var>h</var>H<var>m</var>M<var>s</var>S</code>. When an amount is zero, you can omit it. Because week cannot co-exist with other time components in ISO-8601 duration, specify <code>P7D</code>. Make provisions to incorporate the effects of daylight savings time.</blockquote><br/>For more information, see [durations](https://en.wikipedia.org/wiki/ISO_8601#Durations).",
      "format": "ppaas_common_time_duration_v2",
      "pattern": "^P([0-9]+Y)?([0-9]+M)?([0-9]+W)?([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$",
      "properties": {}
    },
    "application_context.json": {
      "title": "Application Context",
      "description": "The application context, which customizes the payer experience during the subscription approval process with PayPal.",
      "type": "object",
      "properties": {
        "brand_name": {
          "type": "string",
          "description": "The label that overrides the business name in the PayPal account on the PayPal site.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "locale": {
          "description": "The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_preference": {
          "type": "string",
          "description": "The location from which the shipping address is derived.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "GET_FROM_FILE",
          "x-enum": [
            {
              "value": "GET_FROM_FILE",
              "description": "Get the customer-provided shipping address on the PayPal site.",
              "default": true
            },
            {
              "value": "NO_SHIPPING",
              "description": "Redacts the shipping address from the PayPal site. Recommended for digital goods."
            },
            {
              "value": "SET_PROVIDED_ADDRESS",
              "description": "Get the merchant-provided address. The customer cannot change this address on the PayPal site. If merchant does not pass an address, customer can choose the address on PayPal pages."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "user_action": {
          "type": "string",
          "description": "Configures the label name to `Continue` or `Subscribe Now` for subscription consent experience.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "SUBSCRIBE_NOW",
          "x-enum": [
            {
              "value": "CONTINUE",
              "description": "After you redirect the customer to the PayPal subscription consent page, a <strong>Continue</strong> button appears. Use this option when you want to control the activation of the subscription and do not want PayPal to activate the subscription.",
              "default": true
            },
            {
              "value": "SUBSCRIBE_NOW",
              "description": "After you redirect the customer to the PayPal subscription consent page, a <strong>Subscribe Now</strong> button appears. Use this option when you want PayPal to activate the subscription."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_method": {
          "description": "The customer and merchant payment preferences. Currently only PAYPAL payment method is supported.",
          "$ref": "#/definitions/customized_x_unsupported_7330_merchant.CommonComponentsSpecification-v1-schema-payment_method.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "return_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer approves the payment.",
          "minLength": 10,
          "maxLength": 4000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancel_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer cancels the payment.",
          "minLength": 10,
          "maxLength": 4000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "return_url",
        "cancel_url"
      ],
      "x-publicDocsSchemaName": "application_context"
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json": {
      "type": "string",
      "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/).",
      "format": "ppaas_common_language_v3",
      "maxLength": 10,
      "minLength": 2,
      "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-payment_method.json": {
      "type": "object",
      "description": "The customer and merchant payment preferences.",
      "title": "Payment Method",
      "properties": {
        "payer_selected": {
          "type": "string",
          "description": "The customer-selected payment method on the merchant site.",
          "minLength": 1,
          "pattern": "^[0-9A-Z_]+$",
          "default": "PAYPAL",
          "x-enum": [
            {
              "value": "PAYPAL_CREDIT",
              "description": "PayPal Credit.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYPAL",
              "description": "PayPal.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYPAL_PAY_LATER",
              "description": "PayPal Buy Now Pay Later.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ]
        },
        "payee_preferred": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_payment_method_preference.json"
        },
        "standard_entry_class_code": {
          "type": "string",
          "description": "NACHA (the regulatory body governing the ACH network) requires that API callers (merchants, partners) obtain the consumer’s explicit authorization before initiating a transaction. To stay compliant, you’ll need to make sure that you retain a compliant authorization for each transaction that you originate to the ACH Network using this API. ACH transactions are categorized (using SEC codes) by how you capture authorization from the Receiver (the person whose bank account is being debited or credited). PayPal supports the following SEC codes.",
          "default": "WEB",
          "minLength": 3,
          "maxLength": 255,
          "x-enum": [
            {
              "value": "TEL",
              "description": "The API caller (merchant/partner) accepts authorization and payment information from a consumer over the telephone."
            },
            {
              "value": "WEB",
              "description": "The API caller (merchant/partner) accepts Debit transactions from a consumer on their website."
            },
            {
              "value": "CCD",
              "description": "Cash concentration and disbursement for corporate debit transaction. Used to disburse or consolidate funds. Entries are usually Optional high-dollar, low-volume, and time-critical. (e.g. intra-company transfers or invoice payments to suppliers)."
            },
            {
              "value": "PPD",
              "description": "Prearranged payment and deposit entries. Used for debit payments authorized by a consumer account holder, and usually initiated by a company. These are usually recurring debits (such as insurance premiums)."
            }
          ]
        }
      },
      "x-publicDocsSchemaName": "payment_method"
    },
    "merchant.CommonComponentsSpecification-v1-schema-payee_payment_method_preference.json": {
      "type": "string",
      "description": "The merchant-preferred payment methods.",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[0-9A-Z_]+$",
      "default": "UNRESTRICTED",
      "x-enum": [
        {
          "value": "UNRESTRICTED",
          "description": "Accepts any type of payment from the customer.",
          "default": true
        },
        {
          "value": "IMMEDIATE_PAYMENT_REQUIRED",
          "description": "Accepts only immediate payment from the customer. For example, credit card, PayPal balance, or instant ACH. Ensures that at the time of capture, the payment does not have the `pending` status."
        }
      ],
      "x-publicDocsSchemaName": "payee_payment_method_preference",
      "properties": {}
    },
    "plan_override.json": {
      "title": "Plan Override",
      "description": "An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan name.",
          "minLength": 1,
          "maxLength": 127,
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "billing_cycles": {
          "type": "array",
          "description": "An array of billing cycles for trial billing and regular billing. The subscription billing cycle definition has to adhere to the plan billing cycle definition.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/billing_cycle_override.json",
            "x-publicDocsSchemaName": "billing_cycle_override"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_preferences": {
          "$ref": "#/definitions/payment_preferences_override.json",
          "x-publicDocsSchemaName": "payment_preferences_override",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "taxes": {
          "$ref": "#/definitions/taxes_override.json",
          "x-publicDocsSchemaName": "taxes_override",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "plan_override"
    },
    "billing_cycle_override.json": {
      "title": "Billing Cycle Override",
      "description": "The billing cycle details to override at subscription level. The subscription billing cycle definition has to adhere to the plan billing cycle definition.",
      "type": "object",
      "properties": {
        "pricing_scheme": {
          "description": "The active pricing scheme for this billing cycle. A free trial billing cycle does not require a pricing scheme.",
          "$ref": "#/definitions/pricing_scheme.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "frequency": {
          "description": "The frequency details for this billing cycle.",
          "$ref": "#/definitions/frequency.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "tenure_type": {
          "type": "string",
          "description": "The tenure type of the billing cycle. In case of a plan having trial cycle, only 2 trial cycles are allowed per plan.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "REGULAR",
              "description": "A regular billing cycle."
            },
            {
              "value": "TRIAL",
              "description": "A trial billing cycle."
            }
          ],
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "sequence": {
          "type": "integer",
          "description": "The order in which this cycle is to run among other billing cycles. For example, a trial billing cycle has a `sequence` of `1` while a regular billing cycle has a `sequence` of `2`, so that trial cycle runs before the regular cycle.",
          "minimum": 1,
          "maximum": 99,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_cycles": {
          "type": "integer",
          "description": "The number of times this billing cycle gets executed. Trial billing cycles can only be executed a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>). Regular billing cycles can be executed infinite times (value of <code>0</code> for <code>total_cycles</code>) or a finite number of times (value between <code>1</code> and <code>999</code> for <code>total_cycles</code>).",
          "minimum": 0,
          "maximum": 999,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "taxes": {
          "description": "The taxation charges for legacy recurring payments.",
          "$ref": "#/definitions/taxes.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_amount": {
          "description": "The shipping charges for legacy recurring payments.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "sequence"
      ],
      "x-publicDocsSchemaName": "billing_cycle_override"
    },
    "payment_preferences_override.json": {
      "title": "Payment Preferences Override",
      "description": "The payment preferences to override at subscription level.",
      "type": "object",
      "properties": {
        "auto_bill_outstanding": {
          "type": "boolean",
          "description": "Indicates whether to automatically bill the outstanding amount in the next billing cycle.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "setup_fee": {
          "description": "The initial set-up fee for the service.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "setup_fee_failure_action": {
          "type": "string",
          "description": "The action to take on the subscription if the initial payment for the setup fails.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "CONTINUE",
              "description": "Continues the subscription if the initial payment for the setup fails."
            },
            {
              "value": "CANCEL",
              "description": "Cancels the subscription if the initial payment for the setup fails."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_failure_threshold": {
          "type": "integer",
          "description": "The maximum number of payment failures before a subscription is suspended. For example, if `payment_failure_threshold` is `2`, the subscription automatically updates to the `SUSPEND` state if two consecutive payments fail.",
          "minimum": 0,
          "maximum": 999,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "payment_preferences_override"
    },
    "taxes_override.json": {
      "title": "Taxes Override",
      "description": "The tax details.",
      "type": "object",
      "properties": {
        "percentage": {
          "description": "The tax percentage on the billing amount.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-percentage.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "inclusive": {
          "type": "boolean",
          "description": "Indicates whether the tax was already included in the billing amount.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "description": "The tax amount. Used to support legacy migration. Either percentage or amount can be used but not both.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-visibility": {
            "extent": "INTERNAL"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "taxes_override"
    },
    "subscription_collection.json": {
      "title": "Subscription Collection",
      "description": "The list of subscriptions.",
      "type": "object",
      "properties": {
        "subscriptions": {
          "type": "array",
          "description": "An array of subscriptions.",
          "minItems": 0,
          "maxItems": 32767,
          "items": {
            "$ref": "#/definitions/subscription.json",
            "x-publicDocsSchemaName": "subscription"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_items": {
          "type": "integer",
          "description": "The total number of items.",
          "minimum": 0,
          "maximum": 500000000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages.",
          "minimum": 0,
          "maximum": 100000000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "first",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "next",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "prev",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions?plan_ids={plan_id1,plan_id2}&statuses={status1,status2}&page_size={page_size}&page={page}&created_after={created_after}&created_before={created_before}&total_required={total_required}&filter=billing_info.outstanding_balance ge {outstanding_balance}&status_updated_after={status_updated_after}&status_updated_before={status_updated_before}",
          "rel": "last",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "subscription_collection"
    },
    "subscription_revise_response.json": {
      "title": "Update Product Quantity in Subscription Response",
      "description": "The response to a request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_9269_subscription_revise_request.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        {
          "properties": {
            "plan_overridden": {
              "type": "boolean",
              "description": "Indicates whether the subscription has overridden any plan attributes.",
              "readOnly": true,
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "links": {
              "type": "array",
              "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
              "readOnly": true,
              "items": {
                "readOnly": true,
                "x-publicDocsSchemaName": "link_description",
                "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
              },
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "subscription_revise_response",
      "properties": {}
    },
    "subscription_revise_request.json": {
      "title": "Subscription Modify Plan Request",
      "description": "The request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "type": "object",
      "properties": {
        "plan_id": {
          "type": "string",
          "description": "The unique PayPal-generated ID for the plan.",
          "minLength": 3,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product or service in the subscription.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_amount": {
          "description": "The shipping charges.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_address": {
          "description": "The shipping address of the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "application_context": {
          "$ref": "#/definitions/customized_x_unsupported_7455_application_context.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "plan": {
          "description": "An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object. Any existing overrides will not be carried forward during subscription revise.",
          "$ref": "#/definitions/plan_override.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "subscription_revise_request"
    },
    "subscription_save_request.json": {
      "title": "Save Subscription",
      "description": "The save subscription request details.",
      "type": "object",
      "properties": {
        "token_id": {
          "type": "string",
          "description": "The identifier of session for which subscription needs to be saved.",
          "minLength": 3,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "token_id"
      ],
      "x-publicDocsSchemaName": "subscription_save_request"
    },
    "subscription_suspend_request.json": {
      "title": "Suspend Subscription",
      "description": "The suspend subscription request details.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for suspenson of the subscription.",
          "minLength": 1,
          "maxLength": 128,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "reason"
      ],
      "x-publicDocsSchemaName": "subscription_suspend_request"
    },
    "subscription_cancel_request.json": {
      "title": "Cancel Subscription Request",
      "description": "The cancel subscription request details.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation of a subscription.",
          "minLength": 1,
          "maxLength": 128,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "reason"
      ],
      "x-publicDocsSchemaName": "subscription_cancel_request"
    },
    "subscription_activate_request.json": {
      "title": "Activate Subscription Request",
      "description": "The activate subscription request details.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for activation of a subscription. Required to reactivate the subscription.",
          "minLength": 1,
          "maxLength": 128,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "subscription_activate_request"
    },
    "transaction.json": {
      "title": "Transaction Details",
      "description": "The transaction details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/customized_x_unsupported_455_merchant.CommonComponentsSpecification-v1-schema-capture_status.json",
          "x-publicDocsSchemaName": "capture_status",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "The PayPal-generated transaction ID.",
              "minLength": 3,
              "maxLength": 50,
              "readOnly": true,
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "amount_with_breakdown": {
              "$ref": "#/definitions/amount_with_breakdown.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            },
            "payer_name": {
              "description": "The name of the customer.",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json",
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "ConsumerPersonal"
              }
            },
            "payer_email": {
              "description": "The email ID of the customer.",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json",
              "x-securityClassification": {
                "data_class": "class3",
                "data_category": "ConsumerPersonal"
              }
            },
            "time": {
              "description": "The date and time when the transaction was processed, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "readOnly": true,
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_time.json",
              "x-securityClassification": {
                "data_class": "class4",
                "data_category": "Intrinsic"
              }
            }
          }
        }
      ],
      "required": [
        "id",
        "amount_with_breakdown",
        "time"
      ],
      "x-publicDocsSchemaName": "transaction",
      "properties": {}
    },
    "merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-email_address.json": {
      "type": "string",
      "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
      "format": "ppaas_common_email_address_v2",
      "minLength": 3,
      "maxLength": 254,
      "pattern": "^.+@[^\"\\-].+$",
      "properties": {}
    },
    "subscription_capture_request.json": {
      "title": "Charge Amount from Subscriber",
      "description": "The charge amount from the subscriber.",
      "type": "object",
      "properties": {
        "note": {
          "type": "string",
          "description": "The reason or note for the subscription charge.",
          "minLength": 1,
          "maxLength": 128,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "capture_type": {
          "type": "string",
          "description": "The type of capture.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "x-enum": [
            {
              "value": "OUTSTANDING_BALANCE",
              "description": "The outstanding balance that the subscriber must clear."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "amount": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "description": "The amount of the outstanding balance. This value cannot be greater than the current outstanding balance amount.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "note",
        "capture_type",
        "amount"
      ],
      "x-publicDocsSchemaName": "subscription_capture_request"
    },
    "transactions_list.json": {
      "title": "List Transactions",
      "description": "The list transactions for a subscription request details.",
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "description": "An array of transactions.",
          "minItems": 0,
          "maxItems": 32767,
          "items": {
            "$ref": "#/definitions/transaction.json",
            "x-publicDocsSchemaName": "transaction"
          },
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "Intrinsic"
          }
        },
        "total_items": {
          "type": "integer",
          "description": "The total number of items.",
          "minimum": 0,
          "maximum": 500000000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages.",
          "minimum": 0,
          "maximum": 100000000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "links": {
          "type": "array",
          "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "x-publicDocsSchemaName": "link_description",
            "readOnly": true,
            "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-link_description.json"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/billing/subscriptions/{subscription-id}/transactions?start_time={start_time}&end_time={end_time}",
          "rel": "self",
          "method": "GET"
        }
      ],
      "x-publicDocsSchemaName": "transactions_list"
    },
    "customized_x_unsupported_5294_merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "customized_x_unsupported_4198_merchant.CommonComponentsSpecification-v1-schema-product.json": {
      "title": "Product Details",
      "description": "The product details.",
      "x-visibility": {
        "extent": "EXTERNAL"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The product name.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "description": {
          "type": "string",
          "description": "The product description.",
          "minLength": 1,
          "maxLength": 256,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "type": {
          "type": "string",
          "description": "The product type. Indicates whether the product is physical or digital goods, or a service.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "PHYSICAL",
          "x-enum": [
            {
              "value": "PHYSICAL",
              "description": "Physical goods"
            },
            {
              "value": "DIGITAL",
              "description": "Digital goods"
            },
            {
              "value": "SERVICE",
              "description": "Product representing a service. Example: Tech Support"
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "category": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-product_category.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "image_url": {
          "type": "string",
          "format": "uri",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The image URL for the product.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "home_url": {
          "type": "string",
          "format": "uri",
          "minLength": 1,
          "maxLength": 2000,
          "description": "The home page URL for the product.",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "product"
    },
    "customized_x_unsupported_4112_merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "customized_x_unsupported_4908_merchant.CommonComponentsSpecification-v1-schema-payee.json": {
      "type": "object",
      "title": "Payee",
      "description": "The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_base.json"
        },
        {
          "properties": {
            "display_data": {
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_displayable.json",
              "x-visibility": {
                "extent": "INTERNAL"
              }
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payee",
      "properties": {}
    },
    "customized_x_unsupported_2182_plan.json": {
      "title": "Plan",
      "description": "The plan details.",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string",
          "description": "The ID for the product.",
          "minLength": 6,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "name": {
          "type": "string",
          "description": "The plan name.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "description": {
          "type": "string",
          "description": "The detailed description of the plan.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "billing_cycles": {
          "type": "array",
          "description": "An array of billing cycles for trial billing and regular billing. A plan can have at most two trial cycles and only one regular cycle.",
          "minItems": 1,
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/billing_cycle.json",
            "x-publicDocsSchemaName": "billing_cycle"
          },
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_preferences": {
          "$ref": "#/definitions/payment_preferences.json",
          "x-publicDocsSchemaName": "payment_preferences",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "taxes": {
          "$ref": "#/definitions/taxes.json",
          "x-publicDocsSchemaName": "taxes",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "quantity_supported": {
          "type": "boolean",
          "description": "Indicates whether you can subscribe to this plan by providing a quantity for the goods or service.",
          "default": false,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "product": {
          "description": "Product details associated to the plan.",
          "readOnly": true,
          "$ref": "#/definitions/customized_x_unsupported_4198_merchant.CommonComponentsSpecification-v1-schema-product.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          },
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      },
      "x-links": [
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}",
          "rel": "self",
          "method": "GET"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}",
          "rel": "edit",
          "method": "PATCH"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}/update-pricing-schemes",
          "rel": "edit",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}/activate",
          "rel": "activate",
          "method": "POST"
        },
        {
          "href": "https://api-m.paypal.com/v1/billing/plans/{id}/deactivate",
          "rel": "deactivate",
          "method": "POST"
        },
        {
          "href": "https://www.paypal.com/webapps/billing/plans/subscribe?plan_id={id}",
          "rel": "subscribe",
          "method": "GET",
          "x-visibility": {
            "extent": "INTERNAL"
          }
        }
      ],
      "x-publicDocsSchemaName": "plan"
    },
    "customized_x_unsupported_2933_merchant.CommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payer_base.json"
        },
        {
          "properties": {
            "name": {
              "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
              "$ref": "#/definitions/customized_x_unsupported_1511_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
            },
            "phone": {
              "description": "The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href=\"https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments\">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-phone_with_type.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payer",
      "properties": {}
    },
    "customized_x_unsupported_1645_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        }
      }
    },
    "customized_x_unsupported_8309_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_8346_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-phone.json": {
      "type": "object",
      "title": "Phone",
      "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).",
      "properties": {
        "national_number": {
          "type": "string",
          "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).",
          "minLength": 1,
          "maxLength": 14,
          "pattern": "^[0-9]{1,14}?$"
        }
      },
      "required": [
        "country_code",
        "national_number"
      ]
    },
    "customized_x_unsupported_5959_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "full_name": {
          "type": "string",
          "description": "When the party is a person, the party's full name.",
          "maxLength": 300
        }
      }
    },
    "customized_x_unsupported_3334_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_9981_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_8769_merchant.CommonComponentsSpecification-v1-schema-capture_status.json": {
      "type": "object",
      "title": "Capture Status",
      "description": "The status of a captured payment.",
      "properties": {
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>."
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            },
            {
              "value": "FAILED",
              "description": "There was an error while capturing payment.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ],
          "readOnly": true
        }
      },
      "x-publicDocsSchemaName": "capture_status"
    },
    "customized_x_unsupported_3638_merchant.CommonComponentsSpecification-v1-schema-payer.json": {
      "type": "object",
      "title": "Customer",
      "description": "The customer who approves and pays for the order. The customer is also known as the payer.",
      "format": "payer_v1",
      "allOf": [
        {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payer_base.json"
        },
        {
          "properties": {
            "name": {
              "description": "The name of the payer. Supports only the `given_name` and `surname` properties.",
              "$ref": "#/definitions/customized_x_unsupported_1645_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json"
            },
            "phone": {
              "description": "The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the <a href=\"https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments\">**Profile & Settings**</a> for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.",
              "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-phone_with_type.json"
            }
          }
        }
      ],
      "x-publicDocsSchemaName": "payer",
      "properties": {}
    },
    "customized_x_unsupported_1063_merchant.CommonComponentsSpecification-v1-schema-card.json": {
      "type": "object",
      "title": "Card",
      "description": "The payment card to use to fund a payment. Can be a credit or debit card.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The card holder's name as it appears on the card.",
          "maxLength": 300
        },
        "number": {
          "type": "string",
          "description": "The primary account number (PAN) for the payment card.",
          "minLength": 13,
          "maxLength": 19
        },
        "expiry": {
          "description": "The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-date_year_month.json"
        },
        "security_code": {
          "type": "string",
          "description": "The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.",
          "pattern": "[0-9]{3,4}"
        },
        "billing_address": {
          "description": "The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.",
          "$ref": "#/definitions/customized_x_unsupported_361_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json"
        },
        "attributes": {
          "description": "Additional attributes associated with the use of this card.",
          "x-publicDocsSchemaName": "card_attributes",
          "x-visibility": {
            "extent": "LIMITED_RELEASE"
          },
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-card_attributes.json"
        }
      },
      "required": [
        "number",
        "expiry"
      ],
      "x-publicDocsSchemaName": "card"
    },
    "customized_x_unsupported_6584_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    },
    "customized_x_unsupported_7330_merchant.CommonComponentsSpecification-v1-schema-payment_method.json": {
      "type": "object",
      "description": "The customer and merchant payment preferences.",
      "title": "Payment Method",
      "properties": {
        "payer_selected": {
          "type": "string",
          "description": "The customer-selected payment method on the merchant site.",
          "minLength": 1,
          "pattern": "^[0-9A-Z_]+$",
          "default": "PAYPAL",
          "x-enum": [
            {
              "value": "PAYPAL_CREDIT",
              "description": "PayPal Credit.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYPAL",
              "description": "PayPal.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            },
            {
              "value": "PAYPAL_PAY_LATER",
              "description": "PayPal Buy Now Pay Later.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ]
        },
        "payee_preferred": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-payee_payment_method_preference.json"
        }
      },
      "x-publicDocsSchemaName": "payment_method"
    },
    "customized_x_unsupported_9269_subscription_revise_request.json": {
      "title": "Subscription Modify Plan Request",
      "description": "The request to update the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount` and `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "type": "object",
      "properties": {
        "plan_id": {
          "type": "string",
          "description": "The unique PayPal-generated ID for the plan.",
          "minLength": 3,
          "maxLength": 50,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "quantity": {
          "type": "string",
          "description": "The quantity of the product or service in the subscription.",
          "pattern": "^([0-9]+|([0-9]+)?[.][0-9]+)$",
          "minLength": 1,
          "maxLength": 32,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_amount": {
          "description": "The shipping charges.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-money.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_address": {
          "description": "The shipping address of the subscriber.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-shipping_detail.json",
          "x-securityClassification": {
            "data_class": "class3",
            "data_category": "ConsumerPersonal"
          }
        },
        "plan": {
          "description": "An inline plan object to customise the subscription. You can override plan level default attributes by providing customised values for the subscription in this object. Any existing overrides will not be carried forward during subscription revise.",
          "$ref": "#/definitions/plan_override.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "x-publicDocsSchemaName": "subscription_revise_request"
    },
    "customized_x_unsupported_7455_application_context.json": {
      "title": "Application Context",
      "description": "The application context, which customizes the payer experience during the subscription approval process with PayPal.",
      "type": "object",
      "properties": {
        "brand_name": {
          "type": "string",
          "description": "The label that overrides the business name in the PayPal account on the PayPal site.",
          "minLength": 1,
          "maxLength": 127,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "locale": {
          "description": "The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.",
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-language.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "shipping_preference": {
          "type": "string",
          "description": "The location from which the shipping address is derived.",
          "minLength": 1,
          "maxLength": 24,
          "pattern": "^[A-Z_]+$",
          "default": "GET_FROM_FILE",
          "x-enum": [
            {
              "value": "GET_FROM_FILE",
              "description": "Get the customer-provided shipping address on the PayPal site.",
              "default": true
            },
            {
              "value": "NO_SHIPPING",
              "description": "Redacts the shipping address from the PayPal site. Recommended for digital goods."
            },
            {
              "value": "SET_PROVIDED_ADDRESS",
              "description": "Get the merchant-provided address. The customer cannot change this address on the PayPal site. If merchant does not pass an address, customer can choose the address on PayPal pages."
            }
          ],
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "payment_method": {
          "description": "The customer and merchant payment preferences. Currently only PAYPAL payment method is supported.",
          "$ref": "#/definitions/customized_x_unsupported_7330_merchant.CommonComponentsSpecification-v1-schema-payment_method.json",
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "return_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer approves the payment.",
          "minLength": 10,
          "maxLength": 4000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        },
        "cancel_url": {
          "type": "string",
          "format": "uri",
          "description": "The URL where the customer is redirected after the customer cancels the payment.",
          "minLength": 10,
          "maxLength": 4000,
          "x-securityClassification": {
            "data_class": "class4",
            "data_category": "Intrinsic"
          }
        }
      },
      "required": [
        "return_url",
        "cancel_url"
      ],
      "x-publicDocsSchemaName": "application_context"
    },
    "customized_x_unsupported_455_merchant.CommonComponentsSpecification-v1-schema-capture_status.json": {
      "type": "object",
      "title": "Capture Status",
      "description": "The status of a captured payment.",
      "properties": {
        "status": {
          "description": "The status of the captured payment.",
          "type": "string",
          "x-enum": [
            {
              "value": "COMPLETED",
              "description": "The funds for this captured payment were credited to the payee's PayPal account."
            },
            {
              "value": "DECLINED",
              "description": "The funds could not be captured."
            },
            {
              "value": "PARTIALLY_REFUNDED",
              "description": "An amount less than this captured payment's amount was partially refunded to the payer."
            },
            {
              "value": "PENDING",
              "description": "The funds for this captured payment was not yet credited to the payee's PayPal account. For more information, see <code>status.details</code>."
            },
            {
              "value": "REFUNDED",
              "description": "An amount greater than or equal to this captured payment's amount was refunded to the payer."
            },
            {
              "value": "FAILED",
              "description": "There was an error while capturing payment.",
              "x-visibility": {
                "extent": "LIMITED_RELEASE"
              }
            }
          ],
          "readOnly": true
        }
      },
      "x-publicDocsSchemaName": "capture_status"
    },
    "customized_x_unsupported_1511_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name.json": {
      "type": "object",
      "title": "Name",
      "description": "The name of the party.",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-name_validation.json"
      },
      "properties": {
        "given_name": {
          "type": "string",
          "description": "When the party is a person, the party's given, or first, name.",
          "maxLength": 140
        },
        "surname": {
          "type": "string",
          "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.",
          "maxLength": 140
        }
      }
    },
    "customized_x_unsupported_361_merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable.json": {
      "type": "object",
      "title": "Portable Postal Address (Medium-Grained)",
      "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
      "x-pattern": {
        "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-address_portable_postal_code_validation.json"
      },
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
          "maxLength": 300
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address. For example, suite or apartment number.",
          "maxLength": 300
        },
        "admin_area_2": {
          "type": "string",
          "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
          "maxLength": 120
        },
        "admin_area_1": {
          "type": "string",
          "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
          "maxLength": 300
        },
        "postal_code": {
          "type": "string",
          "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
          "maxLength": 60
        },
        "country_code": {
          "$ref": "#/definitions/merchant.CommonComponentsSpecification-v1-schema-common_components-v3-schema-json-openapi-2.0-country_code.json"
        }
      },
      "required": [
        "country_code"
      ]
    }
  }
}